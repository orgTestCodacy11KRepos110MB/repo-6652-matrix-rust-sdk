var searchIndex = JSON.parse('{\
"matrix_sdk":{"doc":"A high-level, batteries-included Matrix client library …","t":[3,13,13,8,13,13,13,13,13,3,3,13,13,3,13,13,4,3,13,13,13,13,4,13,13,13,4,13,13,13,4,6,8,13,13,4,13,13,13,13,13,13,13,13,3,4,2,13,13,13,13,13,13,13,13,13,13,13,4,13,13,6,3,4,4,8,13,3,13,3,3,13,4,13,8,13,13,13,13,13,13,13,13,13,13,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,23,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,2,11,11,11,0,12,11,11,12,11,11,11,11,2,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,0,11,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,3,3,3,3,3,13,13,3,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,13,4,3,4,13,13,13,13,3,3,13,13,13,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,4,3,4,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,13,4,3,4,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,3,3,13,13,4,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,3,4,13,4,13,3,4,13,13,13,13,13,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,4,4,4,13,13,13,13,4,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,8,3,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,6,18,18,18,18,18,6,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,8,4,3,3,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,3,3,13,3,13,3,13,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Account","Aliased","Api","AsyncTraitDeps","AuthenticationRequired","AuthenticationRequired","AutoDiscovery","Backend","BadCryptoStoreState","BaseRoom","BaseRoomMember","Break","Calculated","Client","ClientApi","ClientApi","ClientBuildError","ClientBuilder","Codec","Continue","CryptoStoreError","DecryptorError","DisplayName","Empty","EmptyWas","Encryption","Error","FormatNotSupported","Http","Http","HttpError","HttpResult","HttpSend","Identifier","Identifier","ImageError","ImageError","InconsistentState","IntoHttp","Invited","Io","Joined","Json","Left","LoginBuilder","LoopCtrl","Media","MegolmError","MissingHomeserver","Named","NoOlmMachine","NotClientRequest","OlmError","Other","Proc","QrCodeScanError","Redaction","RefreshToken","RefreshTokenError","RefreshTokenRequired","Reqwest","Result","RoomInfo","RoomType","RumaApiError","SendOutsideWasm","SerdeJson","Session","SledStore","SsoLoginBuilder","StateChanges","StateStore","StoreError","StoreLocked","SyncOutsideWasm","ThumbnailBiggerThanOriginal","Uiaa","UnableToCloneRequest","UnableToRefreshToken","UnencryptedStore","UnknownError","UnsupportedDatabaseVersion","Url","Url","UserTagName","access_token","access_token","account","account_data","account_data","account_data_raw","active_members","active_members_count","add_3pid","add_account_data","add_event_handler","add_event_handler_context","add_notification","add_presence_event","add_receipts","add_redaction","add_room","add_room_account_data","add_room_event_handler","add_state_event","add_stripped_member","add_stripped_room","alt_aliases","alt_aliases","ambiguity_maps","are_members_synced","as_client_api_error","as_client_api_error","as_client_api_error","as_ruma_api_error","as_ruma_api_error","as_uiaa_response","as_uiaa_response","async_trait","attachment","authentication_issuer","avatar_url","avatar_url","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","bytes","canonical_alias","canonical_alias","change_password","client_api_error_kind","client_api_error_kind","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_info","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","create_content","create_room","deactivate","default","delete_3pid","delete_devices","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialized_responses","device_id","device_id","device_id","device_id","devices","direct_targets","disable_ssl_verification","display_name","display_name","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption","encryption","encryption_settings","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event","event_handler","event_handler_drop_guard","event_read_receipts","executor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_parts","get_3pids","get_avatar","get_avatar_url","get_capabilities","get_display_name","get_invited_room","get_joined_room","get_left_room","get_login_types","get_member","get_or_upload_filter","get_profile","get_room","get_sso_login_url","guest_access","handle_redaction","handle_refresh_tokens","handle_state_event","handle_stripped_state_event","hash","history_visibility","homeserver","homeserver_url","http_client","identity_provider_id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_device_display_name","initial_device_display_name","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_parts","invited_rooms","is_direct","is_encrypted","is_encrypted","is_encryption_state_synced","is_public","is_space","is_state_fully_synced","is_tombstoned","join_room_by_id","join_room_by_id_or_alias","join_rule","joined_members","joined_rooms","joined_user_ids","last_prev_batch","left_rooms","locks","logged_in","login_identifier","login_sso","login_token","login_username","logout","mark_as_invited","mark_as_joined","mark_as_left","mark_encryption_state_missing","mark_encryption_state_synced","mark_members_missing","mark_members_synced","mark_state_fully_synced","mark_state_not_synced","mark_state_partially_synced","max_power_level","media","media","members","members","membership","name","name","name_ambiguous","new","new","normalized_power_level","notifications","own_user_id","power_level","presence","profiles","provide","provide","provide","provide","provide","provide","provide","proxy","public_rooms","public_rooms_filtered","receipts","receive_transaction","redactions","refresh_access_token","refresh_token","refresh_token","register","register_notification_handler","remove_event_handler","request_3pid_email_token","request_3pid_msisdn_token","request_config","request_config","request_refresh_token","request_refresh_token","reqwest","resolve_room_alias","respect_login_well_known","restore_session","room","room_account_data","room_id","room_id","room_infos","room_type","room_type","room_version","rooms","ruma","send","send","send","send_request","serialize","serialize","serialize","serialize","server_name","server_response","server_url","server_versions","session","session","session_tokens","session_tokens_changed_signal","session_tokens_signal","set_account_data","set_account_data_raw","set_avatar_url","set_display_name","set_encryption_event","set_prev_batch","sled_store","source","source","source","source","source","source","source","state","store","store_config","stripped_members","stripped_room_infos","stripped_state","sync","sync","sync_once","sync_stream","sync_token","sync_with_callback","sync_with_result_callback","tags","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","tombstone","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unread_notification_counts","update_notification_count","update_summary","update_summary","upload_avatar","user_agent","user_id","user_id","user_id","user_read_receipt","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whoami","AttachmentConfig","AttachmentInfo","Audio","BaseAudioInfo","BaseFileInfo","BaseImageInfo","BaseThumbnailInfo","BaseVideoInfo","File","Image","Thumbnail","Video","blurhash","blurhash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content_type","data","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","duration","duration","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","generate_image_thumbnail","generate_thumbnail","height","height","height","info","info","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","new","size","size","size","size","size","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","with_thumbnail","RequestConfig","StoreConfig","SyncSettings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","crypto_store","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_retry","drop","drop","drop","filter","fmt","fmt","fmt","force_auth","from","from","from","full_state","init","init","init","into","into","into","new","new","new","retry_limit","retry_timeout","set_presence","short_retry","state_store","timeout","timeout","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AlgorithmInfo","AmbiguityChange","AmbiguityChanges","EncryptionInfo","MegolmV1AesSha2","MemberEvent","MembersResponse","RawMemberEvent","Stripped","Stripped","Sync","Sync","SyncTimelineEvent","TimelineEvent","Trusted","UnknownDevice","Untrusted","VerificationState","algorithm_info","ambiguated_member","ambiguity_changes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disambiguated_member","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption_info","encryption_info","event","event","event_id","event_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","member_ambiguous","membership","origin_server_ts","original_content","sender","sender","sender_device","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","verification_state","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","curve25519_key","sender_claimed_keys","AccountUnset","Algorithm","Algorithm","Backend","BlackListed","CryptoStore","CryptoStoreError","Decode","Decode","Decode","Decode","Decryption","Decryption","DecryptorError","DeviceMissingCurveKey","Encryption","EventError","EventError","EventError","Export","IdentifierValidation","Ignored","InboundCreation","InvalidCurveKey","InvalidHeaders","InvalidJson","InvalidKey","InvalidKeyId","InvalidMac","InvalidSignature","InvalidSignature","InvalidUtf8","Io","Io","Io","Json","JsonError","JsonError","JsonError","Key","KeyExportError","KeyNonceLength","LocalTrust","MediaEncryptionInfo","MegolmError","MegolmSessionCreationError","MismatchedIdentityKeys","MismatchedKeys","MismatchedPublicKeys","MismatchedRoom","MismatchedSender","MissingCiphertext","MissingEd25519Key","MissingHash","MissingRoomKey","MissingSenderKey","MissingSession","MissingSigningKey","MissingSigningKey","NoSignatureFound","NotAnObject","NotAnObject","OlmError","OlmSessionExportError","OneTimeKeyMissing","OneTimeKeyNotSigned","OneTimeKeyUnknown","Pickle","ReplayedMessage","RoomKeyImportError","RoomKeyImportResult","SecretImportError","SerdeJson","Serialization","SessionCreation","SessionCreation","SessionCreationError","SessionExport","SessionWedged","SignatureError","SigningKeyChanged","Store","Store","Store","StoreClosed","UnknownVersion","UnpicklingError","Unset","UnsupportedAlgorithm","UnsupportedAlgorithm","UnsupportedDatabaseVersion","UnsupportedVersion","UserIdMismatch","VerificationError","Verified","backend","bootstrap_cross_signing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cross_signing_status","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ed25519_key","eq","eq","equivalent","equivalent","export_room_keys","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_device","get_user_devices","get_user_identity","get_verification","get_verification_request","hashes","identities","import_room_keys","imported_count","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iv","key","keys","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","serialize","serialize","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_count","tracked_users","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verification","version","vodozemac","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","device_curve25519","device_ed25519","key_curve25519","key_ed25519","error","one_time_key","signing_key","Device","Http","ManualVerifyError","MasterPubkey","RequestVerificationError","RoomCreation","Sdk","Signature","UserDevices","UserIdentity","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","devices","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","get_first_key","get_key","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","is_verified","is_verified","keys","keys","master_key","provide","provide","request_verification","request_verification","request_verification_with_methods","request_verification_with_methods","serialize","set_local_trust","signatures","source","source","start_verification","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","usage","user_id","user_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","AcceptSettings","Accepted","AcceptedProtocols","CancelInfo","Cancelled","Confirmed","DecodingError","Done","Emoji","EmojiShortAuthString","EncodingError","FlowId","FlowIdMismatch","Header","KeyMismatch","Keys","KeysExchanged","MissingCrossSigningIdentity","MissingDeviceKeys","Mode","Qr","QrV1","QrVerification","QrVerificationData","Read","SasState","SasV1","SasVerification","ScanError","SelfVerification","SelfVerificationNoMasterKey","SharedSecret","Started","Store","Utf8","Verification","Verification","VerificationRequest","Version","accept","accept","accept_with_methods","accept_with_settings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_presented","cancel","cancel","cancel","cancel_code","cancel_info","cancel_info","cancel_info","cancel_info","cancelled_by_us","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirm","confirm","decimals","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","emoji","emojis","eq","eq","eq","eq","equivalent","equivalent","equivalent","first_key","flow_id","flow_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_emojis","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","generate_qr_code","has_been_scanned","hash","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_cancelled","is_cancelled","is_cancelled","is_cancelled","is_done","is_done","is_done","is_done","is_passive","is_ready","is_self_verification","is_self_verification","is_self_verification","is_self_verification","key_agreement_protocol","message_auth_code","mismatch","other_device","other_user_id","other_user_id","other_user_id","other_user_id","own_user_id","own_user_id","own_user_id","own_user_id","partial_cmp","provide","provide","provide","qr","reason","sas","scan_qr_code","second_key","secret","short_auth_string","source","source","source","start_sas","started_from_request","state","supports_emoji","symbol","their_supported_methods","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_qr_code","to_qr_code","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","we_started","we_started","we_started","we_started","with_allowed_methods","accepted_protocols","decimals","emojis","protocols","verified_devices","verified_identities","expected","expected","found","found","Base64","Base64","Base64","Base64","Base64Error","DecodeError","Decryption","Decryption","InvalidKey","InvalidKeyLength","InvalidMAC","InvalidMAC","InvalidMACLength","InvalidMACLength","InvalidMacLength","InvalidPadding","InvalidPadding","InvalidVersion","KeyError","MegolmDecryptionError","MessageTooShort","MessageType","MismatchedIdentityKey","MissingMessageKey","MissingOneTimeKey","MissingVersion","NonContributoryKey","OlmDecryptionError","OlmSessionCreationError","PickleError","ProtoBufError","PublicKey","Read","Serialization","SessionKeyDecodeError","Signature","Signature","Signature","Signature","Signature","SignatureError","TooBigMessageGap","UnknownMessageIndex","Version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","provide","provide","provide","provide","provide","provide","provide","provide","source","source","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Ctx","EventHandler","EventHandlerContext","EventHandlerDropGuard","EventHandlerHandle","EventHandlerResult","RawEvent","SyncEvent","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","spawn","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","deref","deref_mut","deserialize","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","drop","eq","equivalent","fmt","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","init","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","serialize","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","vzip","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","blocking_lock","blocking_lock_owned","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut","get_mut","init","init","init","init","init","into","into","into","into","into","into_inner","into_inner","into_mapped","lock","lock_owned","map","map","map","mutex","new","new","read","read_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","File","Media","MediaEventContent","MediaFormat","MediaRequest","MediaThumbnailSize","Thumbnail","UniqueKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","format","from","from","from","from","get_file","get_media_content","get_thumbnail","height","init","init","init","init","into","into","into","into","method","remove_file","remove_media_content","remove_media_content_for_uri","remove_thumbnail","source","source","thumbnail_source","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique_key","unique_key","unique_key","unique_key","upload","vzip","vzip","vzip","vzip","width","Common","Invited","Invited","Joined","Joined","Left","Left","Messages","MessagesOptions","Room","RoomMember","accept_invitation","account_data","account_data_static","active_members","active_members_no_sync","add_event_handler","avatar","avatar","backward","ban_user","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_only_verified_devices","decrypt_event","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dir","drop","drop","drop","drop","drop","drop","drop","drop","enable_encryption","end","event","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_member","get_member_no_sync","get_state_event","get_state_event_static","get_state_event_static_for_key","get_state_events","get_state_events_static","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","invite_details","invite_user_by_3pid","invite_user_by_id","is_encrypted","is_synced","join","joined_members","joined_members_no_sync","kick_user","leave","limit","matrix_event_permalink","matrix_permalink","matrix_to_event_permalink","matrix_to_permalink","members","members_no_sync","messages","new","read_marker","read_receipt","redact","reject_invitation","remove_tag","route","send","send_attachment","send_raw","send_state_event","send_state_event_for_key","send_state_event_raw","set_is_direct","set_tag","start","state","sync_members","sync_up","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typing_notice","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","JoinedRoom","LeftRoom","Rooms","SyncResponse","Timeline","UnreadNotificationsCount","account_data","account_data","account_data","ambiguity_changes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","device_lists","device_one_time_keys_count","drop","drop","drop","drop","drop","drop","ephemeral","events","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","highlight_count","init","init","init","init","init","init","into","into","into","into","into","into","invite","join","leave","limited","next_batch","notification_count","notifications","presence","prev_batch","rooms","serialize","serialize","serialize","serialize","serialize","state","state","timeline","timeline","to_device_events","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unread_notifications","vzip","vzip","vzip","vzip","vzip","vzip","ElapsedError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","provide","timeout","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":["matrix_sdkmatrix_sdk::attachment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::deserialized_responsesmatrix_sdk::deserialized_responses::AlgorithmInfo","","matrix_sdk::encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::encryption::MegolmError","","","","matrix_sdk::encryption::SessionCreationError","","","matrix_sdk::encryption::identities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::encryption::verificationmatrix_sdk::encryption::verification::SasState","","","","","","matrix_sdk::encryption::verification::ScanError","","","","matrix_sdk::encryption::vodozemacmatrix_sdk::event_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::executor","matrix_sdk::instant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::locks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::media","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::roommatrix_sdk::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk::timeout","","","","","","","","","","","","","","","","","","","","","",""],"d":["A high-level API to manage the client owner’s account.","The room has a canonical alias that should be used","An error converting between ruma_*_api types and Hyper …","Super trait that is used for our store traits, this trait …","Queried endpoint requires authentication but was called on …","Queried endpoint requires authentication but was called on …","Error looking up the .well-known endpoint on auto-discovery","An error happened in the underlying database backend.","Attempting to restore a session after the olm-machine has …","The underlying room data structure collecting state for …","A member of a room.","Break out of the loop.","The room has not given an explicit name but a name could be","An async/await enabled Matrix client.","A client API response error.","The Matrix endpoint returned an error.","Errors that can happen in <code>ClientBuilder::build</code>.","Builder that allows creating and configuring various parts …","The store failed to encode or decode some data.","Continue running the loop.","An error occurred in the crypto store.","An error occurred during decryption.","The name of the room, either from the metadata or …","No useful name could be calculated or ever found","The room doesn’t have a name right now, but used to have …","The store failed to encrypt or decrypt some data.","Internal representation of errors.","The image format is not supported.","Error doing an HTTP request.","Error doing an HTTP request.","An HTTP error, representing either a connection error or …","Result type of a pure HTTP request.","Abstraction around the http layer. The allows implementors …","An error happened while deserializing a Matrix identifier, …","An error encountered when trying to parse an identifier.","All possible errors that can happen during image …","An error while processing images.","The client is in inconsistent state. This happens when we …","An error converting between ruma_client_api types and …","The room is in a invited state.","An IO error happened.","The room is in a joined state.","An error happened while serializing or deserializing some …","The room is in a left state.","Builder type used to configure optional settings for …","Enum controlling if a loop running callbacks should …","","An error occurred during a E2EE group operation.","No homeserver or user ID was configured","The room has been named explicitly as","Attempting to access the olm-machine but it is not yet …","Queried endpoint is not meant for clients.","An error occurred during a E2EE operation.","Another API response error.","Error processing the image data.","An error while scanning a QR code.","Redacting an event in the store has failed.","An error occurred while refreshing the access token.","Errors that can happen when refreshing an access token.","Tried to send a refresh token request without a refresh …","An error at the HTTP layer.","Result type of the matrix-sdk.","The underlying pure data structure for joined and left …","Enum keeping track in which state the room is, e.g. if our …","An error response from a Matrix API call, using a client …","Alias for <code>Send</code> on non-wasm, empty trait (implemented by …","An error de/serializing type for the <code>StateStore</code>","A user session, containing an access token, an optional …","Error opening the sled store.","Builder type used to configure optional settings for …","Store state changes and pass them to the StateStore.","An error occurred in the state store.","State store specific error type.","The store is locked with a passphrase and an incorrect …","Alias for <code>Sync</code> on non-wasm, empty trait (implemented by …","The thumbnail size is bigger than the original image.","A user-interactive authentication API error.","The given request can’t be cloned and thus can’t be …","There was an ongoing refresh token call that failed and …","An unencrypted store was tried to be unlocked with a …","An other error was raised this might happen because …","The database format has changed in a backwards …","An error encountered when trying to parse the homeserver …","An error encountered when trying to parse a url.","An error encountered when trying to parse a user tag name.","Get the current access token for this session.","The access token used for this session.","Get the account of the current owner of the client.","Get the content of an account data event of …","A mapping of event type string to <code>AnyBasicEvent</code>.","Get the content of an account data event of a given type.","Get the list of <code>RoomMember</code>s that are considered to be …","The number of active members (invited + joined) in the …","Add a Third Party Identifier on the homeserver for this …","Update the <code>StateChanges</code> struct with the given <code>AnyBasicEvent</code>…","Register a handler for a specific event type.","Add an arbitrary value for use as event handler context.","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given <code>PresenceEvent</code>…","Update the <code>StateChanges</code> struct with the given room with a …","Redact an event in the room","Update the <code>StateChanges</code> struct with the given <code>RoomInfo</code>.","Update the <code>StateChanges</code> struct with the given room with a …","Register a handler for a specific room, and event type.","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given <code>RoomInfo</code>.","Get the canonical alias of this room.","Get the alternative aliases of this room.","A map from room id to a map of a display name and a set of …","Check if the room has its members fully synced.","If <code>self</code> is <code>ClientApi(e)</code>, returns <code>Some(e)</code>.","Shorthand for .as_ruma_api_error().and_then(…","Shorthand for .as_ruma_api_error().and_then(…","If <code>self</code> is Api(Server(e)), returns <code>Some(e)</code>.","If <code>self</code> is Http(Api(Server(e))), returns <code>Some(e)</code>.","Try to destructure the error into an universal interactive …","Try to destructure the error into an universal interactive …","","Types and traits for attachments.","The OIDC Provider that is trusted by the homeserver.","Get the avatar url of the member, if there is one.","Get the avatar url of this room.","Create a new <code>Backend</code> error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Client</code> with the options set on this builder.","Create a new <code>ClientBuilder</code>.","","Get the canonical alias of this room.","Get the canonical alias of this room.","Change the password of the account.","If <code>self</code> is a server error in the <code>errcode</code> + <code>error</code> format …","If <code>self</code> is a server error in the <code>errcode</code> + <code>error</code> format …","","","","","","","","","","","","Clone the inner RoomInfo","","","","","","","","","","","","Configuration to change the behaviour of the <code>Client</code>.","Get the <code>m.room.create</code> content of this room.","Create a room using the <code>RoomBuilder</code> and send the request.","Deactivate this account definitively.","","Delete a Third Party Identifier from the homeserver for …","Delete the given devices from the server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SDK-specific variations of response types from Ruma.","Set the device ID.","Set the device ID.","Get the device ID that identifies the current session.","The ID of the client device.","Get information of all our own devices.","If this room is a direct message, get the members that we…","Disable SSL verification for the HTTP requests.","Get the display name of the member if there is one.","Calculate the canonical display name of the room, taking …","","","","","","","","","","","","","","","","","","","","","End-to-end encryption related types","Get the encryption manager of the client.","Get the <code>m.room.encryption</code> content that enabled end to end …","","","","","","","","","Get the original member event","Types and traits related for event handlers. For usage, see","Create an <code>EventHandlerDropGuard</code> for the event handler …","Get the read receipts as a list of <code>UserId</code> and <code>Receipt</code> …","Abstraction over an executor so we can spawn tasks under …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a <code>Session</code> from a <code>SessionMeta</code> and <code>SessionTokens</code>.","Get the registered Third Party Identifiers on the …","Get the account’s avatar, if set.","Get the MXC URI of the account’s avatar, if set.","Get the capabilities of the homeserver.","Get the display name of the account.","Get an invited room with the given room id.","Get a joined room with the given room id.","Get a left room with the given room id.","Gets the homeserver’s supported login types.","Get the <code>RoomMember</code> with the given <code>user_id</code>.","Get or upload a sync filter.","Get the profile of the account.","Get a room with the given room id.","Get the URL to use to login via Single Sign-On.","Get the guest access policy of this room.","Handle the given redaction.","Handle refreshing access tokens automatically.","Handle the given state event.","Handle the given stripped state event.","","Get the history visibility policy of this room.","The Homeserver of the client.","Set the homeserver URL to use.","Specify an HTTP client to handle sending requests and …","Set the ID of the identity provider to log in with.","","","","","","","","","","","","","","","","","","","","","Set the initial device display name.","Set the initial device display name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Split this <code>Session</code> between <code>SessionMeta</code> and <code>SessionTokens</code>.","Returns the invited rooms this client knows about.","Is this room considered a direct message.","Is the room encrypted.","Returns whether this is an encrypted Room.","Check if the room has its encryption event synced.","Is the room considered to be public.","Whether this room’s <code>RoomType</code> is <code>m.space</code>.","Check if the room states have been synced","Has the room been tombstoned.","Join a room by <code>RoomId</code>.","Join a room by <code>RoomId</code>.","Get the join rule policy of this room.","Get the list of <code>RoomMember</code>s that are considered to be …","Returns the joined rooms this client knows about.","Get the list of users ids that are considered to be joined …","Get the <code>prev_batch</code> token that was received from the last …","Returns the left rooms this client knows about.","","Is the client logged in.","Login to the server with a user identifier and password.","Login to the server via Single Sign-On.","Login to the server with a token.","Login to the server with a username and password.","Log out the current user","Mark this Room as invited.","Mark this Room as joined.","Mark this Room as left.","Mark this Room still missing encryption state information.","Mark this Room as having the encryption state synced.","Mark this Room still missing member information.","Mark this Room as having all the members synced.","Mark this Room still having all state synced.","Mark this Room still having no state synced.","Mark this Room still missing some state information.","Get the maximum power level that this room contains.","High-level media API.","Get the media manager of the client.","Get the all <code>RoomMember</code>s of this room that are known to the …","A mapping of <code>RoomId</code> to a map of users and their …","Get the membership state of this member.","Get the name of the member.","Get the <code>m.room.name</code> of this room.","Is the name that the member uses ambiguous in the room.","Create a new <code>Client</code> that will use the given homeserver.","Create a new <code>StateChanges</code> struct with the given sync_token.","Get the normalized power level of this member.","A map of <code>RoomId</code> to a vector of <code>Notification</code>s","Get our own user id.","Get the power level of this member.","A mapping of <code>UserId</code> to <code>PresenceEvent</code>.","A mapping of <code>RoomId</code> to a map of users and their …","","","","","","","","Set the proxy through which all the HTTP requests should …","Search the homeserver’s directory of public rooms.","Search the homeserver’s directory for public rooms with …","A map of <code>RoomId</code> to <code>ReceiptEventContent</code>.","Process a transaction received from the homeserver which …","A map of <code>RoomId</code> to maps of <code>OwnedEventId</code> to be redacted by …","Refresh the access token.","Get the current refresh token for this session.","The token used for refreshing the access token, if any.","Register a user to the server.","Register a handler for a notification.","Remove the event handler associated with the handle.","Request a token to validate an email address as a Third …","Request a token to validate a phone number as a Third Party","Set the default timeout, fail and retry behavior for all …","Get a copy of the default request config.","Advertise support for refreshing access tokens.","Advertise support for refreshing access tokens.","","Resolve a room alias to a room id and a list of servers …","Update the client’s homeserver URL with the discovery …","Restore a previously logged in session.","High-level room API","A mapping of <code>RoomId</code> to a map of event type string to …","Get the unique room id of the room.","Get the room ID of this room.","A map of <code>RoomId</code> to <code>RoomInfo</code>.","Get the type of the room.","Get the room type of this room.","Get the room version of this room.","Get all the rooms the client knows about.","","Send the login request.","Send the login request.","Send an arbitrary request to the server, without updating …","The method abstracting sending request types and receiving …","","","","","Set the server name to discover the homeserver from.","Set the text to be shown at the end of the login process.","Set the local URL the server is going to try to bind to.","Specify the Matrix versions supported by the homeserver …","Get the whole session info of this client.","A user session, containing an access token and information …","Get the current access token and optional refresh token …","<code>Signal</code> to get notified when the current access token and …","Get the current access token and optional refresh token …","Set the given account data event.","Set the given raw account data event.","Set the MXC URI of the account’s avatar.","Set the display name of the account.","Set the encryption event content in this room.","Set the <code>prev_batch</code>-token. Returns whether the token has …","Set up the store configuration for a sled store.","","","","","","","","A mapping of <code>RoomId</code> to a map of event type string to a …","Get a reference to the state store.","Set up the store configuration.","A mapping of <code>RoomId</code> to a map of users and their …","A map of <code>RoomId</code> to <code>RoomInfo</code> for stripped rooms (e.g. for …","A mapping of <code>RoomId</code> to a map of event type to a map of …","The SDK’s representation of the result of a <code>/sync</code> …","Repeatedly synchronize the client state with the server.","Synchronize the client’s state with the latest state on …","This method will internally call <code>Client::sync_once</code> in a …","The sync token that relates to this update.","Repeatedly call sync to synchronize the client state with …","Repeatedly call sync to synchronize the client state with …","Get the <code>Tags</code> for this room.","","","","","","","","","","","","","","","","","","","","","Get the <code>m.room.tombstone</code> content of this room if there is …","Get the topic of the room.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the unread notification counts.","Update the notifications count","Update the summary with given RoomInfo","Update the RoomSummary","Upload and set the account’s avatar.","Set a custom HTTP user agent for the client.","Get the unique user id of this member.","Get the user id of the current owner of the client.","The user the access token was issued for.","Get the read receipt as a <code>EventId</code> and <code>Receipt</code> tuple for …","","","","","","","","","","","","","","","","","","","","","Gets information about the owner of a given access token.","Configuration for sending an attachment.","Types of metadata for an attachment.","The metadata of an audio clip.","Base metadata about an audio clip.","Base metadata about a file.","Base metadata about an image.","Base metadata about a thumbnail.","Base metadata about a video.","The metadata of a file.","The metadata of an image.","A thumbnail to upload and send for an attachment.","The metadata of a video.","The BlurHash for this image.","The BlurHash for this video.","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the thumbnail, this will be used as the …","The raw bytes of the thumbnail.","","","","","","","","","","","","","","","","","","","","","","","","","","The duration of the video.","The duration of the audio clip.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a thumbnail for an image.","Generate the thumbnail to send for this media.","The height of the image in pixels.","The height of the video in pixels.","The height of the thumbnail in pixels.","Set the media metadata to send.","The metadata of the thumbnail.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new default <code>AttachmentConfig</code> without providing a …","The file size of the image in bytes.","The file size of the video in bytes.","The file size of the audio clip in bytes.","The size of the file in bytes.","The file size of the thumbnail in bytes.","","","","","","","","","","","","","","","","","","","","","","Set the transaction ID to send.","","","","","","","","","","","","","","","","","The width of the image in pixels.","The width of the video in pixels.","The width of the thumbnail in pixels.","Create a new default <code>AttachmentConfig</code> with a <code>thumbnail</code>.","Configuration for requests the <code>Client</code> makes.","Configuration for the state store and, when <code>encryption</code> is …","Settings for a sync call.","","","","","","","","","","","","","Set a custom implementation of a <code>CryptoStore</code>.","","","","","","","","","","This is a convince method to disable the retries of a …","","","","Set the sync filter. It can be either the filter ID, or …","","","","Force sending authorization even if the endpoint does not …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Should the server return the full state from the start of …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new default <code>StoreConfig</code>.","Create a new default <code>RequestConfig</code>.","Create new default sync settings.","The number of times a request should be retried. The …","Set a timeout for how long a request should be retried. …","Set the presence state","Create a new <code>RequestConfig</code> with default values, except the …","Set a custom implementation of a <code>StateStore</code>.","Set the timeout duration for all HTTP requests.","Set the maximum time the server can wait, in milliseconds, …","","","","Set the sync token.","","","","","","","","","","","","","The algorithm specific information of a decrypted event.","A change in ambiguity of room members that an <code>m.room.member</code>…","Collection of ambiguity changes that room member events …","Struct containing information on how an event was …","The info if the event was encrypted using …","Wrapper around both MemberEvent-Types","A deserialized response for the rooms members API call.","Raw version of <code>MemberEvent</code>.","A member event from a room in invited state.","A member event from a room in invited state.","A member event from a room in joined or left state.","A member event from a room in joined or left state.","A customized version of a room event coming from a sync …","","The device is trusted.","The device is not known to us.","The device is not trusted.","The verification state of the device that sent an event to …","Information about the algorithm that was used to encrypt …","Has another user become ambiguous because of this event.","Collection of ambiguity changes that room member events …","","","","","","","","","","","","","","","","","","","","","A map from room id to a map of an event id to the …","The list of members events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to deserialize the inner JSON as the expected type.","","Has another user been disambiguated because of this event.","","","","","","","","","","","The encryption info about the event. Will be <code>None</code> if the …","The encryption info about the event. Will be <code>None</code> if the …","The actual event.","The actual event.","Get the event id of this <code>SyncTimelineEvent</code> if the event …","The ID of this event.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the member that is contained in the state key of the …","The membership state of the user","The Server Timestamp of this event.","The inner Content of the wrapped Event","The sender of this event.","The user ID of the event sender, note this is untrusted …","The device ID of the device that sent us the event, note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user id associated to this member event","The verification state of the device that sent us the …","","","","","","","","","","","The curve25519 key of the device that created the megolm …","The signing keys that have created the megolm key that was …","The account that owns the sessions, group sessions, and …","The provided algorithm is not supported.","The provided algorithm is not supported.","A problem with the underlying database backend","The device been blacklisted from communicating.","An error occurred in the crypto store.","The crypto store’s error type.","The encrypted megolm message couldn’t be decoded.","Some data in the encrypted attachment coldn’t be …","The key export string isn’t valid base64.","The room key key couldn’t be decoded.","The event could not have been decrypted.","The event could not have been decrypted.","Error type for attachment decryption.","The user’s device is missing a curve25519 key.","A high-level API to manage the client’s encryption.","Error that occurs when decrypting an event that is …","The event that should have been decrypted is malformed.","The event that should have been decrypted is malformed.","An error occurred while importing the key export.","A Matrix identifier failed to be validated.","The trust state of the device is being ignored.","Error when creating an Olm Session from an incoming Olm …","The given curve25519 key is not a valid key.","The key export doesn’t contain valid headers.","Error deserializing the one-time key.","The public key isn’t a valid ed25519 key.","The ID of the signing key isn’t a valid key ID.","The MAC of the encrypted payload is invalid.","The signature could not be decoded.","Failed to verify the one-time key signatures.","The decrypted key export isn’t valid UTF-8.","An IO error happened.","The key export doesn’t all the required fields.","An IO error occurred.","The decrypted key export doesn’t contain valid JSON.","The received decrypted event couldn’t be deserialized.","The received decrypted event couldn’t be deserialized.","The signed object couldn’t be deserialized.","The key that we tried to import was invalid.","Error representing a failure during key export or import.","The supplied key or IV has an invalid length.","The local trust state of a device.","Struct holding all the information that is needed to …","Error representing a failure during a group encryption …","An error type for the creation of group sessions.","Decryption failed because of a mismatch between the …","The public key that was part of the message doesn’t …","The public key of the imported private key doesn’t match …","The room ID of the room key doesn’t match the room ID of …","The sender of the plaintext doesn’t match the sender of …","The Encrypted message doesn’t contain a ciphertext for …","The session export is missing a claimed Ed25519 sender key.","A hash is missing from the encryption info.","Decryption failed because we’re missing the room key …","The Encrypted message is missing the sender key.","Encryption failed because the device does not have a valid …","The Encrypted message is missing the signing key of the …","The signing key that should create or check a signature is …","The provided JSON value that was signed and the signature …","The provided JSON value isn’t an object.","The provided JSON value that was signed and the signature …","Error representing a failure during a device to device …","An error type for the export of inbound group sessions.","The signed one-time key is missing.","The requested one-time key isn’t a signed curve key.","The one-time key algorithm is unsupported.","Failed to decrypt an pickled object.","An Olm message got replayed while the Olm ratchet has …","Error for the room key importing functionality.","Return type for the room key importing.","Error describing what went wrong when importing private …","An error de/serializing type for the <code>StateStore</code>","The store failed to (de)serialize a data type.","The received room key couldn’t be converted into a valid …","The received room key couldn’t be converted into a valid …","Error that occurs when a room key can’t be converted …","The room key that should be exported can’t be converted …","The session with a device has become corrupted.","Error type describing different errors that happen when we …","The signing key that used to sign the object has been …","The storage layer returned an error.","The storage layer returned an error.","The new version of the identity couldn’t be stored.","The crypto store isn’t yet open. Logging in is required …","The supplied data was encrypted with an unknown version of …","Failed to decrypt an pickled object.","The trust state is unset.","The Encrypted message has been encrypted with a …","The signature was made using an unsupported algorithm.","The database format has changed in a backwards …","The key export has been encrypted with an unsupported …","The user id of signing key differs from the user id that …","The signature couldn’t be verified.","The device has been verified and is trusted.","Create a new <code>Backend</code> error.","Create and upload a new cross signing identity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the status of the private cross signing keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the public ed25519 key of our own device. This is …","","","","","Export E2EE keys that match the given predicate encrypting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Get a specific device of a user.","Get a map holding all the devices of an user.","Get a E2EE identity of an user.","Get a verification object with the given flow id.","Get a <code>VerificationRequest</code> object for the given user with …","The hashes that can be used to check the validity of the …","Cryptographic identities used in Matrix.","Import E2EE keys from the given file path.","The number of room keys that were imported.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The initialization vector that was used to encrypt the …","The web key that was used to encrypt the file.","The map of keys that were imported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total number of room keys that were found in the …","Get all the tracked users we know about","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interactive verification for E2EE capable users and …","The version of the encryption scheme.","Re-exported Error types from the vodozemac crate.","","","","","","","","","","","","","","","","","The Curve25519 identity key of the device sending the room …","The Ed25519 identity key of the device sending the room …","The Curve25519 key recorded in the room key’s to-device …","The Ed25519 key recorded in the room key’s to-device …","The exact error describing why the signature verification …","The one-time key that failed the signature verification.","The key that was used to verify the signature.","A device represents a E2EE capable client or device of an …","Error that happens when we try to upload the user or …","Error for the manual verification step, when we manually …","Wrapper for a cross signing key marking it as the master …","Error when requesting a verification.","Verifying other users requires having a DM open with them, …","An ordinary error coming from the SDK, i.e. when we fail …","Error that happens when we try to sign the user or device.","The collection of all the <code>Device</code>s a user has.","A struct representing a E2EE capable identity of a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator over all the devices of the user devices.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get the specific device with the given device ID.","Get the first available master key.","Get the master key with the given key id.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is the device considered to be verified.","Is the user identity considered to be verified.","Iterator over all the device ids of the user devices.","Get the keys map of containing the master keys.","Get the public part of the Master key of this user …","","","Request an interactive verification with this <code>Device</code>.","Request an interactive verification with this <code>UserIdentity</code>.","Request an interactive verification with this <code>Device</code>.","Request an interactive verification with this <code>UserIdentity</code> …","","Set the local trust state of the device to the given state.","Get the signatures map of this cross signing key.","","","Start an interactive verification with this <code>Device</code>","","","","","","","","","","","","","","","","","","","","","","","","","Get the list of <code>KeyUsage</code> that is set for this key.","The ID of the user this identity belongs to.","Get the user id of the master key’s owner.","Manually verify this device.","Manually verify this <code>UserIdentity</code>.","","","","","","","Customize the accept-reply for a verification process","The verification has been accepted and both sides agreed …","Struct containing the protocols that were agreed to be …","Information about the cancellation of a verification …","The verification process has been cancelled.","The verification process has been confirmed from our side, …","Error type describing errors that happen while QR data is …","The verification process has been successfully concluded.","An emoji that is used for interactive verification using a …","The short auth string for the emoji method of SAS …","Error type describing errors that happen while QR data is …","Error encoding the given flow id, the flow id is too large.","The ID uniquely identifying this verification flow didn’…","The QR code data is missing the mandatory Matrix header.","A key mismatch happened during the validation of the QR …","The QR code data doesn’t contain valid ed25519 keys.","The public keys have been exchanged and the short auth …","One of the users that is participating in this …","The device of the user that is participating in this …","The QR code data is using an unsupported or invalid …","Error generating a QR code from the data, likely because …","The <code>m.qr_code.*.v1</code> verification variant.","An object controlling QR code style key verification flows.","An enum representing the different modes a QR verification …","The QR code data does not contain all the necessary fields.","An Enum describing the state the SAS verification is in.","The <code>m.sas.v1</code> verification variant.","An object controlling the short auth string verification …","An error for the different failure modes that can happen …","The QR verification is self-verifying and the current …","The QR verification is self-verifying in which the current …","The QR code data uses an invalid shared secret.","The verification has been started, the protocols that …","An IO error inside the crypto store happened during the …","The QR code data is containing an invalid, non UTF-8, flow …","An enum over the different verification types the SDK …","The QR verification is verifying another user","An object controlling the interactive verification flow.","The QR code data uses an invalid or unsupported version.","Accept the verification request.","Accept the interactive verification flow.","Accept the verification request signaling that our client …","Accept the interactive verification flow with specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Are we in a state where we can show the short auth string.","Abort the verification flow and notify the other side that …","Cancel the verification request","Cancel the interactive verification flow.","Get the <code>CancelCode</code> that cancelled this verification.","Get info about the cancellation if the verification flow …","Get info about the cancellation if the verification …","Get info about the cancellation if the verification flow …","Get info about the cancellation if the verification flow …","Was the verification cancelled by us?","Listen for changes in the SAS verification process.","","","","","","","","","","","","","","","","","","","","","Confirm that the other side has scanned our QR code.","Confirm that the short auth strings match on both sides.","Get the decimal version of the short auth string.","","All methods are allowed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The description of the emoji, for example ‘Dog’.","","","","","","","","","","","","","","","Get the emoji version of the short auth string.","A list of seven emojis that should be used for the SAS …","","","","","","","","Get the first key of this <code>QrVerificationData</code>.","Get the flow id for this <code>QrVerificationData</code>.","Get the transaction id of this verification request","","","","","","","","","","","","","","","","","","Format the the list of emojis as a two line string.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Parse the decoded payload of a QR code in byte slice form …","Generate a QR code","Whether the QrCode was scanned by the other device.","The hash method the device is choosing to use.","A list of seven indices that should be used for the SAS …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Has the verification been cancelled.","Has the verification been cancelled.","Is the verification process canceled.","Has the verification been cancelled.","Has this verification finished.","Has this verification finished.","Is the verification process done.","Has this verification finished.","Has the verification request been answered by another …","Is the verification request ready to start a verification …","Is this a verification that is veryfying one of our own …","Is this a verification that is veryfying one of our own …","Is this a verification that is veryfying one of our own …","Is this a verification that is veryfying one of our own …","The key agreement protocol the device is choosing to use.","The message authentication code the device is choosing to …","Cancel the interactive verification flow because the short …","Get the other users device that we’re verifying.","Get the user id of the other user participating in this …","Get the user id of the other user participating in this …","Get the user id of the other user participating in this …","Get the user id of the other user participating in this …","Get our own user id.","Get our own user id.","Get our own user id.","Get our own user id.","","","","","Try to deconstruct this verification enum into a QR code …","Get the human readable reason of the cancellation.","Try to deconstruct this verification enum into a SAS …","Start a QR code verification by providing a scanned QR …","Get the second key of this <code>QrVerificationData</code>.","Get the secret of this <code>QrVerificationData</code>.","The SAS methods both devices involved in the verification …","","","","Transition from this verification request into a SAS …","Did this verification flow start from a verification …","Get the current state the verification process is in.","Does this verification flow support emoji for the short …","The emoji symbol that represents a part of the short auth …","Get the supported verification methods of the other side.","Encode the <code>QrVerificationData</code> into a vector of bytes that …","Generate a the raw bytes that should be encoded as a QR …","","","","","","","","","","","Encode the <code>QrVerificationData</code> into a <code>QrCode</code>.","Generate a QR code object that is representing this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did we initiate the verification flow.","Did we initiate the verification flow.","Did we initiate the verification flow.","Did we initiate the verification flow.","Create settings restricting the allowed SAS methods","The protocols that were accepted in the …","The list of decimals that represent the short auth string.","The emojis that represent the short auth string, will be …","The protocols that were proposed in the …","The list of devices that has been verified.","The list of user identities that has been verified.","The expected ed25519 key.","The expected verification flow id.","The ed25519 key that we got.","The verification flow id that we instead got.","The signature wasn’t valid base64.","The encoded session key wasn’t valid base64.","The pickle wasn’t valid base64.","The message wasn’t valid base64.","","Error type describing the different ways message decoding …","The pre-key message that was used to establish the Session …","The encrypted pickle could not have been decrypted.","An embedded public key couldn’t be decoded.","","The message authentication code of the message was invalid.","The message authentication code of the message was invalid.","The length of the message authentication code of the …","The length of the message authentication code of the …","The embedded message authentication code couldn’t be …","The ciphertext of the message isn’t padded correctly.","The ciphertext of the message isn’t padded correctly.","The message has a unsupported version.","Error type describing failures that can happen when we try …","Error type for Megolm-based decryption failuers.","The message doesn’t have enough data to be correctly …","The Olm message has an invalid type.","The pre-key message contains a curve25519 identity key …","The session is missing the correct message key to decrypt …","The pre-key message contained an unknown one-time key. …","The message is missing a valid version.","At least one of the keys did not have contributory …","Error type for Olm-based decryption failuers.","Error describing failure modes when creating a Olm Session …","Error type describing the various ways Vodozemac pickles …","The message couldn’t be decoded as a valid protocol …","The encoded session key contains an invalid public key.","The encoded session key didn’t contain enough data to be …","The serialized Vodozemac object couldn’t be deserialzied.","Error type describing failure modes for the <code>SessionKey</code> and …","The signature failed to be verified.","","The signature on the message was invalid.","The signature on the session key was invalid.","An embedded signature couldn’t be decoded.","Error type describing signature verification failures.","Too many messages have been skipped to attempt decrypting …","The session is missing the correct message key to decrypt …","The encoded session key had a unsupported version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A custom value registered with <code>.add_event_handler_context</code>.","Interface for event handlers.","Context for an event handler.","A guard type that removes an event handler when it drops …","Handle to remove a registered event handler by passing it …","Return types supported for event handlers implement this …","The raw JSON form of an event.","A statically-known event kind/type that can be retrieved …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code>.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","The file that was uploaded.","A high-level API to interact with the media API.","Trait for media event content.","The requested format of a media file.","A request for media data.","The requested size of a media thumbnail.","A thumbnail of the file that was uploaded.","A trait to uniquely identify values of the same type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The requested format of the media data.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the file of the given media event content.","Get a media file’s content.","Get a thumbnail of the given media event content.","The desired height of the thumbnail. The actual thumbnail …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The desired resizing method.","Remove the file of the given media event content from the …","Remove a media file’s content from the store.","Delete all the media content corresponding to the given …","Remove the thumbnail of the given media event content from …","Get the source of the file for <code>Self</code>.","The source of the media file.","Get the source of the thumbnail for <code>Self</code>.","","","","","","","","","","","","","","","","","A string that uniquely identifies <code>Self</code> compared to other …","","","","Upload some media to the server.","","","","","The desired width of the thumbnail. The actual thumbnail …","A struct containing methods that are common for Joined, …","A room in the invited state.","The room in the <code>invited</code> state.","A room in the joined state.","The room in the <code>join</code> state.","A room in the left state.","The room in the <code>left</code> state.","The result of a <code>Room::messages</code> call.","Options for <code>messages</code>.","An enum that abstracts over the different states a room …","The high-level <code>RoomMember</code> representation","Accept the invitation.","Get account data in this room.","Get account data of statically-known type in this room.","Get active members for this room, includes invited, joined …","Get active members for this room, includes invited, joined …","Register a handler for events of a specific type, within …","Gets the avatar of this room, if set.","Gets the avatar of this member, if set.","Creates <code>MessagesOptions</code> with <code>dir</code> set to <code>Backward</code>.","Ban the user with <code>UserId</code> from this room.","","","","","","","","","","","","","","","","","A list of room events.","Get the inner client saved in this room instance.","","","","","","","","","","","","","Check if all members of this room are verified and all …","Tries to decrypt a room event.","","","","","","","","","","","","","","","","","","","","","","","The direction to return events in.","","","","","","","","","Enable End-to-end encryption in this room.","The token the pagination ends at.","Fetch the event with the given <code>EventId</code> in this room.","A <code>RoomEventFilter</code> to filter returned events with.","","","","","","","","","Forget this room.","Creates <code>MessagesOptions</code> with <code>dir</code> set to <code>Forward</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>MessagesOptions</code> from <code>self</code> with the <code>from</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","The token to start returning events from.","Get a specific member of this room.","Get a specific member of this room.","Get a specific state event in this room.","Get a specific state event of statically-known type with …","Get a specific state event of statically-known type in …","Get all state events of a given type in this room.","Get all state events of a given statically-known type in …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The membership details of the (latest) invite for this …","Invite the specified user by third party id to this room.","Invite the specified user by <code>UserId</code> to this room.","Check whether this room is encrypted. If the room …","Get the sync state of this room, i.e. whether it was fully …","Join this room.","Get all the joined members of this room.","Get all the joined members of this room.","Kick a user out of this room.","Leave this room.","The maximum number of events to return.","Get a <code>matrix:</code> permalink to an event in this room.","Get a <code>matrix:</code> permalink to this room.","Get a <code>matrix.to</code> permalink to an event in this room.","Get a <code>matrix.to</code> permalink to this room.","Get all members for this room, includes invited, joined …","Get all members for this room, includes invited, joined …","Sends a request to …","Creates <code>MessagesOptions</code> with the given direction.","Send a request to notify this room that the user has read …","Send a request to notify this room that the user has read …","Strips all information out of an event of the room.","Reject the invitation.","Removes a tag from the room.","Get a list of servers that should know this room.","Send a room message to this room.","Send an attachment to this room.","Send a room message to this room from a json <code>Value</code>.","Send a state event with an empty state key to the …","Send a state event to the homeserver.","Send a raw room state event to the homeserver.","Sets whether this room is a DM.","Adds a tag to the room, or updates it if it already exists.","The token the pagination starts from.","A list of state events relevant to showing the <code>chunk</code>.","Sync the member list with the server.","Wait for the room to be fully synced.","The token to stop returning events at.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Activate typing notice for this room.","","","","","","","","","Updates to joined rooms.","Updates to left rooms.","Updates to rooms in a <code>SyncResponse</code>.","The processed response of a <code>/sync</code> request.","Events in the room.","Counts of unread notifications for a room.","The private data that this user has attached to this room.","The private data that this user has attached to this room.","The global private data created by this user.","Collection of ambiguity changes that room member events …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information on E2E device updates.","For each key algorithm, the number of unclaimed one-time …","","","","","","","The ephemeral events in the room that aren’t recorded in …","A list of events.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The number of unread notifications for this room with the …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The rooms that the user has been invited to.","The rooms that the user has joined.","The rooms that the user has left or been banned from.","True if the number of events returned was limited by the …","The batch token to supply in the <code>since</code> param of the next …","The total number of unread notifications for this room.","New notifications per room.","Updates to the presence status of other users.","A token that can be supplied to to the <code>from</code> parameter of …","Updates to rooms.","","","","","","Updates to the state, between the time indicated by the …","Updates to the state, between the time indicated by the …","The timeline of messages and state changes in the room.","The timeline of messages and state changes in the room up …","Messages sent directly between devices.","","","","","","","","","","","","","","","","","","","","","","","","","Counts of unread notifications for this room.","","","","","","","Error type notifying that a timeout has elapsed.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Wait for <code>future</code> to be completed. <code>future</code> needs to return a …","","","","","",""],"i":[0,53,37,0,37,38,46,44,38,0,0,55,53,0,35,56,0,0,44,55,38,38,0,53,53,44,0,80,46,38,0,0,0,44,38,0,38,38,37,52,38,52,44,52,0,0,0,38,46,53,38,37,38,35,80,38,44,37,0,56,37,0,0,0,0,0,38,0,46,0,0,38,0,44,0,80,35,37,56,44,38,44,46,38,38,1,54,1,4,17,4,9,11,4,17,1,1,17,17,17,17,17,17,1,17,17,17,9,11,17,9,35,37,38,37,38,37,38,0,0,1,41,9,44,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,45,1,0,9,11,4,37,38,41,9,52,11,53,54,4,45,55,1,56,9,41,9,52,11,53,54,4,45,55,1,56,0,9,1,4,17,4,1,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,52,11,53,54,0,66,67,1,54,1,9,45,41,9,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,0,1,9,52,53,54,55,52,53,54,55,41,0,1,9,0,41,9,52,11,53,53,54,4,45,46,46,44,44,55,1,17,35,35,37,37,38,38,80,80,56,56,66,67,41,9,52,11,53,54,54,4,45,46,46,46,46,44,44,44,44,44,44,55,1,17,35,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,80,80,56,56,54,4,4,4,1,4,1,1,1,1,9,1,4,1,1,9,11,45,11,11,54,9,1,45,45,67,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,54,1,9,9,11,9,9,9,9,9,1,1,9,9,1,9,9,1,0,1,1,1,1,1,1,11,11,11,11,11,11,11,11,11,11,9,0,1,9,17,41,41,9,41,1,17,41,17,9,41,17,17,46,44,35,37,38,80,56,45,1,1,17,1,17,1,1,54,1,1,1,4,4,45,1,66,67,0,1,45,1,0,17,9,11,17,9,11,11,1,0,66,67,1,119,52,11,53,54,45,67,67,45,1,17,1,1,1,4,4,4,4,11,11,45,46,44,35,37,38,80,56,17,1,45,17,17,17,0,1,1,1,17,1,1,9,0,41,9,52,11,53,54,4,45,55,1,56,53,46,44,35,37,38,80,56,9,9,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,9,11,9,11,4,45,41,1,54,9,66,67,41,9,52,11,53,54,4,45,46,44,55,1,17,35,37,38,80,56,1,0,0,173,0,0,0,0,0,173,173,0,173,167,168,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,167,168,169,170,171,167,168,169,170,171,174,174,172,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,168,169,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,0,172,167,168,171,172,174,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,172,167,168,169,170,171,167,168,169,170,171,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,172,167,168,169,170,173,171,174,172,167,168,169,170,173,171,174,172,167,168,171,172,0,0,0,156,141,157,156,141,157,156,141,157,156,141,157,156,156,141,157,156,141,157,156,141,157,141,156,141,157,157,156,141,157,141,156,141,157,157,156,141,157,156,141,157,156,141,157,141,141,157,141,156,141,157,156,141,157,157,156,141,157,156,141,157,156,141,157,156,141,157,0,0,0,0,183,0,0,0,191,190,191,190,0,0,182,182,182,0,184,187,189,182,183,184,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,188,189,182,183,184,185,186,187,188,189,190,182,183,184,185,186,187,188,189,190,187,188,189,182,183,184,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,182,183,184,185,191,190,187,182,183,184,185,186,187,188,189,191,190,185,186,185,186,185,190,182,183,184,185,186,187,188,189,191,190,182,183,184,185,185,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,187,190,190,190,190,184,184,182,183,184,185,191,182,183,184,185,186,187,188,189,190,182,183,184,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,182,183,184,185,186,187,188,189,191,190,190,184,182,183,184,185,186,187,188,189,191,190,325,325,100,206,207,100,195,201,0,99,98,205,206,94,99,0,204,0,0,94,99,201,100,195,204,204,205,204,203,203,205,203,204,205,201,205,100,205,94,99,203,208,0,98,0,0,0,0,99,202,208,202,202,202,207,98,99,202,94,202,203,203,202,203,0,0,204,204,204,100,94,0,0,0,201,100,94,100,0,94,94,0,203,94,99,208,201,98,100,195,202,203,100,205,203,203,195,100,73,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,73,195,196,73,195,196,73,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,198,195,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,73,195,196,195,196,73,201,201,73,94,94,99,99,202,202,203,203,204,204,98,98,198,205,205,195,206,206,207,207,208,208,100,100,196,201,201,201,201,201,73,94,94,94,94,94,94,94,99,99,99,99,99,99,202,203,203,203,203,203,203,204,204,204,204,98,98,198,198,205,205,205,205,205,195,195,206,206,207,208,208,208,100,100,100,100,100,100,196,73,73,73,73,73,198,0,73,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,198,198,196,201,94,99,202,203,204,98,205,206,207,208,100,198,195,201,94,99,203,204,98,205,206,208,100,73,195,196,201,94,99,202,203,204,98,205,206,207,208,100,196,73,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,0,198,0,201,73,94,99,202,203,204,98,198,205,195,206,207,208,100,196,326,326,326,326,327,327,327,0,229,0,0,0,230,230,229,0,0,226,221,222,223,229,230,226,221,222,223,229,230,226,221,223,226,221,223,226,221,221,222,223,229,230,226,221,222,223,229,230,226,226,222,221,222,223,229,230,226,226,226,221,222,223,229,229,230,230,226,221,222,223,229,229,229,230,230,226,222,226,226,221,222,223,229,230,226,221,222,223,229,230,226,226,221,223,222,226,223,229,230,221,223,221,223,226,221,226,229,230,221,221,223,226,229,230,221,222,223,229,230,226,226,221,222,223,229,230,226,221,222,223,229,230,226,226,223,226,221,223,221,222,223,229,230,226,0,245,0,0,245,245,0,245,0,0,0,248,97,247,97,247,245,97,97,247,248,224,0,0,247,0,224,0,0,242,242,247,245,97,247,0,242,0,247,225,237,225,237,247,248,242,239,225,237,224,97,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,237,239,225,237,240,239,225,237,224,240,237,242,239,225,237,224,243,244,245,246,240,242,239,225,237,224,243,244,245,246,240,239,237,237,243,238,247,248,242,239,225,237,224,97,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,246,247,248,242,239,225,237,224,97,243,244,245,238,246,240,237,244,242,243,245,246,242,243,246,242,242,225,247,247,248,248,242,239,225,237,224,97,97,243,244,245,238,246,240,0,247,247,247,247,248,248,248,242,242,242,242,239,225,237,224,224,224,97,97,243,244,245,245,238,246,240,240,242,225,239,243,244,247,248,242,239,225,237,224,97,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,239,225,237,224,239,225,237,224,225,225,239,225,237,224,243,243,237,237,239,225,237,224,239,225,237,224,246,247,248,97,224,240,224,225,242,242,243,247,248,97,225,237,237,237,246,225,242,239,242,239,225,237,224,243,244,245,246,240,242,239,247,248,97,247,248,242,242,242,239,225,237,224,97,243,243,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,247,248,242,239,225,237,224,97,243,244,245,238,246,240,239,225,237,224,238,328,329,329,330,331,331,332,333,332,333,214,219,220,210,213,0,215,220,210,213,211,209,211,209,210,211,209,210,0,0,210,210,215,209,215,210,213,0,0,0,210,219,219,220,0,214,213,211,219,210,0,209,211,219,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,214,213,213,211,211,219,219,215,215,209,209,220,220,210,210,214,214,214,213,213,213,211,211,211,211,219,219,219,219,219,215,215,209,209,209,220,220,220,220,210,210,210,210,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,214,213,211,219,215,209,220,210,0,0,0,0,0,0,0,0,269,270,19,76,269,270,19,76,269,19,269,19,269,269,270,270,19,76,269,270,19,76,269,270,19,76,76,269,270,19,76,269,270,19,76,269,270,19,76,269,270,19,76,269,19,269,270,19,76,269,270,19,76,269,270,19,76,269,270,19,76,0,0,0,147,147,147,147,147,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,0,0,0,0,278,278,281,281,278,279,282,283,281,278,279,282,283,281,278,281,278,279,279,282,282,283,283,281,278,279,279,282,283,283,281,283,278,279,279,282,282,283,283,281,278,279,279,282,282,283,283,281,278,278,278,279,282,283,281,281,281,278,281,278,279,282,283,281,278,279,282,283,281,278,281,283,278,278,279,282,283,279,278,281,281,281,279,282,283,278,279,282,283,281,278,279,282,283,281,278,278,279,282,283,281,281,281,281,278,279,282,283,281,278,279,282,283,281,281,281,281,106,0,0,0,0,0,106,0,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,291,106,290,291,125,125,125,125,290,106,290,291,125,106,290,291,125,290,125,125,125,125,292,291,292,106,290,291,125,106,290,291,125,106,290,291,125,106,290,291,125,334,106,290,291,125,106,290,291,125,290,0,0,114,0,114,0,114,0,0,0,0,109,295,295,295,295,295,295,298,299,59,295,300,299,109,59,110,298,114,295,300,299,109,59,110,298,114,300,295,295,109,59,110,298,114,295,109,59,110,298,114,295,295,295,295,300,299,109,109,59,59,110,110,298,298,114,114,295,300,299,109,59,110,298,114,299,295,300,299,109,59,110,298,114,59,300,295,299,295,300,299,109,59,110,298,114,110,299,295,300,299,299,109,59,110,298,114,114,114,114,114,299,295,295,295,295,295,295,295,295,300,299,109,59,110,298,114,295,300,299,109,59,110,298,114,109,59,59,295,295,110,295,295,59,59,299,295,295,295,295,295,295,295,299,59,59,59,109,295,295,59,59,59,59,59,59,295,295,300,300,295,59,299,295,109,59,110,298,114,295,300,299,109,59,110,298,114,295,300,299,109,59,110,298,114,295,300,299,109,59,110,298,114,59,295,300,299,109,59,110,298,114,0,0,0,0,0,0,320,321,158,158,319,320,163,321,322,158,319,320,163,321,322,158,319,320,163,321,322,158,319,320,163,321,322,158,319,163,322,158,319,320,163,321,322,158,319,320,163,321,322,158,319,320,163,321,322,158,158,319,320,163,321,322,158,320,322,319,320,163,321,322,158,319,320,163,163,321,322,158,163,319,320,163,321,322,158,319,320,163,321,322,158,319,319,319,322,158,163,158,158,322,158,319,320,163,321,322,320,321,320,321,158,319,320,163,321,322,158,319,320,163,321,322,158,319,320,163,321,322,158,319,320,163,321,322,158,320,319,320,163,321,322,158,0,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,0,324,324,324,324,324,324],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],0,[1,4],[4,[[6,[[3,[5]]]]]],0,[[4,7],[[6,[[3,[[5,[8]]]]]]]],[9,10],[11,12],[[4,13,14,[3,[15]]],[[6,[16]]]],[[17,18,[5,[18]]]],[1,19],[1],[[17,20,21]],[[17,22,[5,[22]]]],[[17,20,23]],[[17,20,24,[5,[25]]]],[[17,11]],[[17,20,26,[5,[26]]]],[[1,20],19],[[17,20,27,[5,[27]]]],[[17,20,28,[5,[[30,[29]]]]]],[[17,11]],[9,[[33,[31,32]]]],[11],0,[9,34],[35,[[3,[36]]]],[37,[[3,[36]]]],[38,[[3,[36]]]],[37,[[3,[35]]]],[38,[[3,[35]]]],[37,[[3,[39]]]],[38,[[3,[39]]]],0,0,[1,[[3,[40]]]],[41,[[3,[42]]]],[9,[[3,[43]]]],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,[[47,[1,46]]]],[[],45],0,[9,[[3,[31]]]],[11,[[3,[48]]]],[[4,49,[3,[15]]],[[6,[50]]]],[37,[[3,[51]]]],[38,[[3,[51]]]],[41,41],[9,9],[52,52],[11,11],[53,53],[54,54],[4,4],[45,45],[55,55],[1,1],[56,56],[9,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9,[[3,[57]]]],[[1,58],[[60,[59]]]],[[4,[3,[49]],[3,[15]]],[[6,[61]]]],[[],17],[[4,49,62,[3,[49]]],[[6,[63]]]],[[1,[3,[15]]],[[60,[64]]]],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[],[[47,[52]]]],[[],[[47,[11]]]],[[],[[47,[53]]]],[[],[[47,[54]]]],0,[[66,49],66],[[67,49],67],[1,[[3,[68]]]],0,[1,[[60,[69]]]],[9,[[72,[70,71]]]],[45,45],[41,[[3,[49]]]],[9,10],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],0,[1,73],[9,[[3,[74]]]],[[52,52],34],[[53,53],34],[[54,54],34],[[55,55],34],[[],34],[[],34],[[],34],[[],34],[41,75],0,[[1,19],76],[[9,24],10],0,[[41,77],[[47,[78]]]],[[9,77],[[47,[78]]]],[[52,77],[[47,[78]]]],[[11,77],[[47,[78]]]],[[53,77],[[47,[78]]]],[[53,77],[[47,[78]]]],[[54,77],[[47,[78]]]],[[4,77],79],[[45,77],79],[[46,77],79],[[46,77],79],[[44,77],[[47,[78]]]],[[44,77],[[47,[78]]]],[[55,77],79],[[1,77],[[6,[78]]]],[[17,77],[[47,[78]]]],[[35,77],79],[[35,77],79],[[37,77],79],[[37,77],79],[[38,77],79],[[38,77],79],[[80,77],79],[[80,77],79],[[56,77],79],[[56,77],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,54],[[]],[[]],[82,46],[37,46],[83,46],[[]],[84,44],[[]],[85,44],[86,44],[87,44],[88,44],[[]],[[]],[[]],[[]],[[[89,[36]]],37],[[[89,[90]]],37],[[[89,[91]]],37],[[]],[56,37],[92,37],[93,37],[94,38],[37,38],[[]],[93,38],[95,38],[80,38],[96,38],[97,38],[82,38],[86,38],[44,38],[98,38],[99,38],[100,38],[101,38],[88,38],[102,80],[[]],[[]],[36,56],[[103,104],54],[4,[[6,[105]]]],[[4,106],[[6,[[3,[[33,[107]]]]]]]],[4,[[6,[[3,[43]]]]]],[1,[[60,[108]]]],[4,[[6,[[3,[2]]]]]],[[1,20],[[3,[109]]]],[[1,20],[[3,[59]]]],[[1,20],[[3,[110]]]],[1,[[60,[111]]]],[[9,28],10],[[1,49,112],[[6,[2]]]],[4,[[6,[113]]]],[[1,20],[[3,[114]]]],[[1,49,[3,[49]]],[[6,[2]]]],[9,115],[[11,25]],[45,45],[[11,27],34],[[11,116],34],[54],[9,117],[1,40],[[45,[118,[49]]],45],[[45,[75,[119]]],45],[[67,49],67],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[66,49],66],[[67,49],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66],[67],[54],[1,[[33,[109]]]],[9,34],[9,34],[11,34],[9,34],[9,34],[9,34],[9,34],[9,34],[[1,20],[[6,[59]]]],[[1,120],[[6,[59]]]],[9,121],[9,10],[1,[[33,[59]]]],[9,10],[9,[[3,[2]]]],[1,[[33,[110]]]],0,[1,34],[[1,122,49],66],[1,67],[[1,49],66],[[1,[118,[49]],49],66],[1,[[60,[123]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[9,124],0,[1,125],[9,10],0,[41,126],[41,49],[9,[[3,[2]]]],[41,34],[40,[[6,[1,37]]]],[2,17],[41,124],0,[9,28],[41,124],0,0,[127],[127],[127],[127],[127],[127],[127],[[45,[118,[49]]],45],[[1,[3,[128]],[3,[49]],[3,[129]]],[[60,[130]]]],[[1,131],[[60,[132]]]],0,[[1,133,134],6],0,[1,[[60,[[3,[135]]]]]],[1,[[3,[2]]]],0,[[1,136],[[60,[137]]]],[1,1],[[1,19]],[[4,13,49,138],[[6,[139]]]],[[4,13,49,49,138],[[6,[140]]]],[[45,141],45],[1,141],[66,66],[67,67],0,[[1,48],[[60,[142]]]],[[45,34],45],[[1,54],6],0,0,[9,20],[11,20],0,[9,52],[11,[[3,[143]]]],[11,[[3,[144]]]],[1,[[33,[114]]]],0,[66,[[6,[81]]]],[67,[[6,[81]]]],[[1,[3,[141]]],60],[[[146,[145]],147],[[149,[[148,[10]]]]]],[52,47],[11,47],[53,47],[54,47],[[45,129],45],[[67,49],67],[[67,49],67],[[45,150],45],[1,[[3,[54]]]],0,[1,[[3,[104]]]],[1,151],[1,151],[4,[[6,[152]]]],[[4,7,[5,[8]]],[[6,[152]]]],[[4,[3,[42]]],6],[[4,[3,[49]]],6],[[11,[3,[74]]]],[[11,[3,[49]]],34],[[45,[118,[153]],[3,[49]]],45],[46,[[3,[154]]]],[44,[[3,[154]]]],[35,[[3,[154]]]],[37,[[3,[154]]]],[38,[[3,[154]]]],[80,[[3,[154]]]],[56,[[3,[154]]]],0,[1,155],[[45,156],45],0,0,0,0,[[1,157],[[6,[38]]]],[[1,157],[[6,[158]]]],[[1,157],159],0,[[1,157,160],[[6,[38]]]],[[1,157,160],[[6,[38]]]],[9,10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[9,[[3,[161]]]],[9,[[3,[2]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[9,163],[[11,163]],[[9,11]],[[11,164],34],[[4,165,[33,[107]]],[[6,[43]]]],[[45,[118,[49]]],45],[41,28],[1,[[3,[28]]]],0,[[9,28],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[60,[166]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[168,168],[169,169],[170,170],[171,171],[[]],[[]],[[]],[[]],[[]],0,0,[[],172],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],0,0,[[167,77],79],[[168,77],79],[[169,77],79],[[170,77],79],[[173,77],79],[[171,77],79],[[174,77],79],[[172,77],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[165,[0,[175,176]],3],[[47,[80]]]],[[172,3],172],0,0,0,[[172,173],172],0,[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],172],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[172,133],172],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[174,172],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[141,141],[157,157],[[]],[[]],[[]],[[156,177],156],[[],156],[[],141],[[],157],[65],[65],[65],[65],[65],[65],[141,141],[65],[65],[65],[[157,178],157],[[156,77],[[47,[78]]]],[[141,77],79],[[157,77],79],[141,141],[[]],[[]],[[]],[[157,34],157],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[],156],[[],141],[[],157],[[141,12],141],[[141,147],141],[[157,179],157],[[],141],[[156,180],156],[[141,147],141],[[157,147],157],[[]],[[]],[[]],[[157,[181,[2]]],157],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],187],[[],188],[[],189],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[],[[47,[182]]]],[[],[[47,[183]]]],[[],[[47,[184]]]],[[],[[47,[185]]]],[191,[[47,[190,88]]]],[[],[[47,[190]]]],0,[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],0,0,0,0,[185,[[3,[192]]]],[190,[[3,[24]]]],[[182,77],[[47,[78]]]],[[183,77],[[47,[78]]]],[[184,77],[[47,[78]]]],[[185,77],[[47,[78]]]],[[186,77],[[47,[78]]]],[[187,77],[[47,[78]]]],[[188,77],[[47,[78]]]],[[189,77],[[47,[78]]]],[[191,77],[[47,[78]]]],[[190,77],[[47,[78]]]],[[]],[[]],[[]],[[]],[186,185],[[[5,[193]]],185],[[]],[[]],[[]],[[]],[[]],[[]],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[190,126],[190,[[3,[194]]]],[190,[[3,[29]]]],[190,28],0,0,[182,47],[183,47],[184,47],[185,47],[191,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[190,28],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],100],[[73,[3,[15]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[195,195],[196,196],[[]],[[]],[[]],[73,[[3,[197]]]],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[],[[47,[198]]]],[[],[[47,[195]]]],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[73,[[3,[2]]]],[[195,195],34],[[196,196],34],[[],34],[[],34],[[73,199,49,200],6],[[201,77],79],[[201,77],79],[[73,77],79],[[94,77],[[47,[78]]]],[[94,77],[[47,[78]]]],[[99,77],[[47,[78]]]],[[99,77],[[47,[78]]]],[[202,77],[[47,[78]]]],[[202,77],[[47,[78]]]],[[203,77],[[47,[78]]]],[[203,77],[[47,[78]]]],[[204,77],[[47,[78]]]],[[204,77],[[47,[78]]]],[[98,77],[[47,[78]]]],[[98,77],[[47,[78]]]],[[198,77],[[47,[78]]]],[[205,77],[[47,[78]]]],[[205,77],[[47,[78]]]],[[195,77],[[47,[78]]]],[[206,77],[[47,[78]]]],[[206,77],[[47,[78]]]],[[207,77],[[47,[78]]]],[[207,77],[[47,[78]]]],[[208,77],[[47,[78]]]],[[208,77],[[47,[78]]]],[[100,77],[[47,[78]]]],[[100,77],[[47,[78]]]],[[196,77],[[47,[78]]]],[[]],[205,201],[100,201],[101,201],[88,201],[[]],[202,94],[[]],[204,94],[100,94],[88,94],[209,94],[207,94],[210,99],[100,99],[88,99],[[]],[211,99],[202,99],[[]],[88,203],[212,203],[86,203],[213,203],[[]],[214,203],[215,204],[213,204],[88,204],[[]],[[]],[216,98],[217,198],[[]],[218,205],[101,205],[88,205],[[]],[216,205],[124,195],[[]],[[]],[219,206],[[]],[[]],[213,208],[100,208],[86,100],[[]],[220,100],[101,100],[206,100],[88,100],[[]],[[73,28,68],[[6,[[3,[221]],100]]]],[[73,28],[[6,[222,38]]]],[[73,28],[[6,[[3,[223]],100]]]],[[73,28,49],[[3,[224]]]],[[73,28,[118,[49]]],[[3,[225]]]],0,0,[[73,199,49],[[6,[196,201]]]],0,[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[127],[127],[127],[127],[127],[127],[127],[127],[127],[127],[127],[127],[198,47],[195,47],[201,[[3,[154]]]],[94,[[3,[154]]]],[99,[[3,[154]]]],[203,[[3,[154]]]],[204,[[3,[154]]]],[98,[[3,[154]]]],[205,[[3,[154]]]],[206,[[3,[154]]]],[208,[[3,[154]]]],[100,[[3,[154]]]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[73,[[6,[[72,[70]],100]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[226,227],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[221,221],[223,223],[226,226],[[]],[[]],[[]],[221],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[],[[47,[226]]]],[222,228],[65],[65],[65],[65],[65],[65],[[226,226],34],[[],34],[[221,77],79],[[222,77],79],[[223,77],79],[[229,77],79],[[229,77],79],[[230,77],79],[[230,77],79],[[226,77],[[47,[78]]]],[[]],[[]],[[]],[203,229],[37,229],[[]],[[]],[38,230],[[]],[[222,68],[[3,[221]]]],[226,[[3,[231]]]],[[226,232],[[3,[233]]]],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[226],[221,34],[223,34],[222,228],[226,234],[223,226],[127],[127],[221,[[6,[225]]]],[223,[[47,[225,230]]]],[[221,[33,[235]]],[[6,[225]]]],[[223,[33,[235]]],[[47,[225,230]]]],[226,47],[[221,195],[[6,[100]]]],[226,236],[229,[[3,[154]]]],[230,[[3,[154]]]],[221,[[6,[237]]]],[[]],[[]],[[]],[[],2],[[],2],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[227,[[47,[226]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[226],[223,28],[226,28],[221,[[6,[229]]]],[223,[[47,[229]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[225,6],[237,6],[[225,[33,[235]]],6],[[237,238],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[237,34],[239,6],[225,6],[237,6],[240,241],[239,[[3,[240]]]],[225,[[3,[240]]]],[237,[[3,[240]]]],[224,[[3,[240]]]],[240,34],[237,159],[242,242],[239,239],[225,225],[237,237],[224,224],[243,243],[244,244],[245,245],[246,246],[240,240],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[239,6],[237,6],[237,3],[[],243],[[],238],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],0,[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[237,3],0,[[242,242],34],[[243,243],34],[[245,245],34],[[246,246],34],[[],34],[[],34],[[],34],[242,231],[242,49],[225,49],[[247,77],[[47,[78]]]],[[247,77],[[47,[78]]]],[[248,77],[[47,[78]]]],[[248,77],[[47,[78]]]],[[242,77],[[47,[78]]]],[[239,77],79],[[225,77],79],[[237,77],79],[[224,77],79],[[97,77],[[47,[78]]]],[[97,77],[[47,[78]]]],[[243,77],[[47,[78]]]],[[244,77],[[47,[78]]]],[[245,77],[[47,[78]]]],[[238,77],[[47,[78]]]],[[246,77],[[47,[78]]]],[[240,77],[[47,[78]]]],[[],2],[[]],[218,247],[101,247],[213,247],[249,248],[250,248],[[]],[251,242],[252,242],[[]],[253,242],[[]],[[]],[[]],[[]],[239,224],[237,224],[[]],[100,97],[[]],[[]],[[]],[254,245],[[]],[[]],[[]],[255,240],[118,[[47,[242,247]]]],[225,[[6,[[3,[239]]]]]],[239,34],0,0,[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[239,34],[225,34],[237,34],[224,34],[239,34],[225,34],[237,34],[224,34],[225,34],[225,34],[239,34],[225,34],[237,34],[224,34],0,0,[237,6],[237,256],[239,28],[225,28],[237,28],[224,28],[239,28],[225,28],[237,28],[224,28],[[246,246],[[3,[257]]]],[127],[127],[127],[224,[[3,[239]]]],[240,49],[224,[[3,[237]]]],[[225,242],[[6,[[3,[239]]]]]],[242,231],[242,258],0,[247,[[3,[154]]]],[248,[[3,[154]]]],[97,[[3,[154]]]],[225,[[6,[[3,[237]]]]]],[237,34],[237,245],[237,34],0,[225,[[3,[[33,[235]]]]]],[242,[[47,[[33,[107,32]],248]]]],[239,[[6,[[33,[107]],248]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[242,[[47,[259,248]]]],[239,[[6,[259,248]]]],[[],2],[[],2],[[],2],[[],47],[[],47],[[],[[47,[242]]]],[[],47],[[[33,[107,32]]],[[47,[242]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[260,[[47,[243]]]],[261,[[47,[243]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[239,34],[225,34],[237,34],[224,34],[[[33,[262,32]]],238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[214,77],[[47,[78]]]],[[214,77],[[47,[78]]]],[[213,77],[[47,[78]]]],[[213,77],[[47,[78]]]],[[211,77],[[47,[78]]]],[[211,77],[[47,[78]]]],[[219,77],[[47,[78]]]],[[219,77],[[47,[78]]]],[[215,77],[[47,[78]]]],[[215,77],[[47,[78]]]],[[209,77],[[47,[78]]]],[[209,77],[[47,[78]]]],[[220,77],[[47,[78]]]],[[220,77],[[47,[78]]]],[[210,77],[[47,[78]]]],[[210,77],[[47,[78]]]],[263,214],[264,214],[[]],[264,213],[[]],[214,213],[214,211],[265,211],[[]],[266,211],[[]],[214,219],[213,219],[101,219],[264,219],[209,215],[[]],[[]],[266,209],[265,209],[[]],[267,220],[264,220],[88,220],[264,210],[[]],[213,210],[268,210],[214,210],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127],[127],[127],[127],[127],[127],[127],[127],[214,[[3,[154]]]],[213,[[3,[154]]]],[211,[[3,[154]]]],[219,[[3,[154]]]],[215,[[3,[154]]]],[209,[[3,[154]]]],[220,[[3,[154]]]],[210,[[3,[154]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[269,269],[19,19],[[]],[[]],[269],[65],[270],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[76],[65],[[269,77],79],[[[270,[271]],77],79],[[19,77],79],[[76,77],79],[[]],[[]],[[]],[[]],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[]],[[]],[[]],[[]],[[],272],0,0,0,0,0,0,0,0,0,[[147,147],147],[[147,147]],[147,273],[147,273],[147,273],[147,12],[147,274],[147,275],[[]],[[]],[[]],[[]],[[147,147],[[3,[147]]]],[[147,128],[[3,[147]]]],[[147,128],[[3,[147]]]],[[147,147],[[3,[147]]]],[147,147],[[]],[[147,147],257],[[],147],[65],[65],[[],[[47,[147]]]],[[147,128],147],[[147,128]],[[147,147],274],[[147,147],275],[[147,274],147],[[147,275],147],[65],[[147,147],34],[[],34],[[147,77],[[47,[78]]]],[276,147],[[]],[12,147],[12,147],[12,147],[12,147],[274,147],[275,147],[147],[[],65],[[]],[147,34],[[147,128],147],[[147,128]],[[147,274],147],[[147,275],147],[[12,128],147],[[],275],[[147,147],[[3,[257]]]],[[147,147],147],[[147,128],147],[[147,147],147],[147,47],[[147,147],147],[[147,147]],[147,128],[147,128],[147,128],[[],147],[[],147],[[]],[[],47],[274,[[47,[147,277]]]],[275,[[47,[147,277]]]],[[],47],[[],162],[[]],0,0,0,0,0,[278,279],[[[75,[278]]],280],[281,282],[281,283],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],278],[[],281],[65],[65],[279],[65],[282],[65],[283],[65],[65],[279],[65],[65],[65],[283],[65],[283,282],[65],[279],[65],[282],[65],[283],[65],[65],[[278,77],[[47,[78]]]],[[279,77],[[47,[78]]]],[[279,77],[[47,[78]]]],[[282,77],[[47,[78]]]],[[282,77],[[47,[78]]]],[[283,77],[[47,[78]]]],[[283,77],[[47,[78]]]],[[281,77],[[47,[78]]]],[[]],[[],278],[284],[[]],[[]],[[]],[[],281],[284],[[]],[278],[281],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[278],[281],[283,285],[278,10],[[[75,[278]]],10],[279,286],[282,282],[283,285],[279,278],[[],278],[[],281],[281,10],[[[75,[281]]],10],[[],2],[[],2],[[],2],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[278,[[47,[279,287]]]],[[[75,[278]]],[[47,[280,287]]]],[279,[[47,[286,279]]]],[282,[[47,[282,282]]]],[283,[[47,[285,283]]]],[281,[[47,[282,287]]]],[[[75,[281]]],[[47,[288,287]]]],[281,[[47,[283,287]]]],[[[75,[281]]],[[47,[289,287]]]],[[],162],[[],162],[[],162],[[],162],[[],162],[[]],[[]],[[]],[[]],[[]],[128,281],[281,10],[[[75,[281]]],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[290,290],[291,291],[125,125],[[]],[[]],[[]],[[]],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[106,77],[[47,[78]]]],[[290,77],[[47,[78]]]],[[291,77],[[47,[78]]]],[[125,77],79],0,[[]],[[]],[[]],[[]],[[125,292,34],[[6,[[3,[[33,[107]]]]]]]],[[125,291,34],[[6,[[33,[107]]]]]],[[125,292,290,34],[[6,[[3,[[33,[107]]]]]]]],0,[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],0,[[125,292],6],[[125,291],6],[[125,42],6],[[125,292,290],6],[[],[[3,[293]]]],0,[[],[[3,[293]]]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],2],[106,2],[290,2],[291,2],[[125,165,[33,[107]]],[[6,[294]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[109,[[6,[59]]]],[[295,296],[[6,[[3,[[5,[26]]]]]]]],[295,[[6,[[3,[[5,[297]]]]]]]],[295,[[6,[[33,[298]]]]]],[295,[[6,[[33,[298]]]]]],[295,19],[[295,106],[[6,[[3,[[33,[107]]]]]]]],[[298,106],[[6,[[3,[[33,[107]]]]]]]],[[],299],[[59,28,[3,[49]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[295,1],[295,295],[109,109],[59,59],[110,110],[298,298],[114,114],[[]],[[]],[[]],[[]],[[]],[[]],[295,[[6,[34]]]],[[295,5],[[6,[186]]]],[295],[65],[65],[65],[65],[109],[65],[59],[65],[110],[65],[298],[114],[65],[65],[65],[65],[65],[65],[65],[65],[65],0,[65],[65],[65],[65],[65],[65],[65],[65],[59,6],0,[[295,24],[[6,[186]]]],0,[[295,77],79],[[300,77],79],[[299,77],79],[[109,77],79],[[59,77],79],[[110,77],79],[[298,77],79],[[114,77],79],[110,6],[[],299],[[]],[[]],[[299,[181,[[3,[49]]]]],299],[[]],[[]],[[]],[[]],[[]],[109,114],[110,114],[59,114],[295,114],[[]],0,[[295,28],[[6,[[3,[298]]]]]],[[295,28],[[6,[[3,[298]]]]]],[[295,301,49],[[6,[[3,[[5,[27]]]]]]]],[295,[[6,[[3,[[5,[302]]]]]]]],[295,[[6,[[3,[[5,[302]]]]]]]],[[295,301],[[6,[[33,[[5,[27]]]]]]]],[295,[[6,[[33,[[5,[302]]]]]]]],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,[[6,[0]]]],[[59,303],6],[[59,28],6],[295,[[6,[34]]]],[295,34],[110,[[6,[59]]]],[295,[[6,[[33,[298]]]]]],[295,[[6,[[33,[298]]]]]],[[59,28,[3,[49]]],6],[59,[[6,[110]]]],0,[[295,[181,[192]]],[[6,[304]]]],[[295,34],[[6,[304]]]],[[295,[181,[192]]],[[6,[305]]]],[295,[[6,[305]]]],[295,[[6,[[33,[298]]]]]],[295,[[6,[[33,[298]]]]]],[[295,299],[[6,[300]]]],[306,299],[[59,24,[3,[24]]],6],[[59,24],6],[[59,24,[3,[49]],[3,[307]]],[[60,[308]]]],[109,[[6,[110]]]],[[295,309],[[60,[310]]]],[295,[[6,[[33,[311]]]]]],[[59,312,[3,[133]]],[[6,[313]]]],[[59,49,165,[33,[107]],172],[[6,[313]]]],[[59,314,49,[3,[133]]],[[6,[313]]]],[[59,315],[[6,[316]]]],[59,[[6,[316]]]],[[59,314,49,49],[[6,[316]]]],[[295,34],6],[[295,309,317],[[60,[318]]]],0,0,[295,[[6,[[3,[189]]]]]],[59],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],[[59,34],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[319,319],[320,320],[163,163],[321,321],[322,322],[158,158],[[]],[[]],[[]],[[]],[[]],[[]],[[],319],[[],163],[[],322],[[],158],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[65],[[],[[47,[319]]]],[[],[[47,[320]]]],[[],[[47,[163]]]],[[],[[47,[321]]]],[[],[[47,[322]]]],0,0,[65],[65],[65],[65],[65],[65],0,0,[[319,77],[[47,[78]]]],[[320,77],[[47,[78]]]],[[163,77],[[47,[78]]]],[[321,77],[[47,[78]]]],[[322,77],[[47,[78]]]],[[158,77],79],[[]],[[]],[323,163],[[]],[[]],[[]],[[]],0,[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[319,47],[320,47],[163,47],[321,47],[322,47],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],162],[[],162],[[],162],[[],162],[[],162],[[],162],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[324,324],[[]],[65],[65],[65],[[324,324],34],[[],34],[[324,77],[[47,[78]]]],[[324,77],[[47,[78]]]],[[]],[[],65],[[]],[127],[147,10],[[]],[[],2],[[],47],[[],47],[[],162],[[]]],"p":[[3,"Client"],[3,"String"],[4,"Option"],[3,"Account"],[3,"Raw"],[6,"Result"],[4,"GlobalAccountDataEventType"],[4,"AnyGlobalAccountDataEventContent"],[3,"BaseRoom"],[8,"Future"],[3,"RoomInfo"],[15,"u64"],[3,"ClientSecret"],[3,"SessionId"],[4,"AuthData"],[3,"Response"],[3,"StateChanges"],[4,"AnyGlobalAccountDataEvent"],[3,"EventHandlerHandle"],[3,"RoomId"],[3,"Notification"],[3,"PresenceEvent"],[3,"ReceiptEventContent"],[3,"EventId"],[3,"OriginalSyncRoomRedactionEvent"],[4,"AnyRoomAccountDataEvent"],[4,"AnySyncStateEvent"],[3,"UserId"],[3,"RoomMemberEventContent"],[3,"StrippedStateEvent"],[3,"OwnedRoomAliasId"],[3,"Global"],[3,"Vec"],[15,"bool"],[4,"RumaApiError"],[3,"Error"],[4,"HttpError"],[4,"Error"],[3,"UiaaInfo"],[3,"Url"],[3,"BaseRoomMember"],[3,"MxcUri"],[3,"OwnedMxcUri"],[4,"StoreError"],[3,"ClientBuilder"],[4,"ClientBuildError"],[4,"Result"],[3,"RoomAliasId"],[15,"str"],[3,"Response"],[4,"ErrorKind"],[4,"RoomType"],[4,"DisplayName"],[3,"Session"],[4,"LoopCtrl"],[4,"RefreshTokenError"],[3,"RoomCreateEventContent"],[3,"Request"],[3,"Joined"],[6,"HttpResult"],[3,"Response"],[4,"Medium"],[3,"Response"],[3,"Response"],[15,"usize"],[3,"LoginBuilder"],[3,"SsoLoginBuilder"],[3,"DeviceId"],[3,"Response"],[3,"OwnedUserId"],[3,"RandomState"],[3,"HashSet"],[3,"Encryption"],[3,"RoomEncryptionEventContent"],[3,"Arc"],[3,"EventHandlerDropGuard"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"ImageError"],[3,"Response"],[4,"ParseError"],[4,"OpenStoreError"],[4,"SledStoreError"],[4,"Error"],[4,"Error"],[3,"Utf8Error"],[3,"Error"],[4,"FromHttpResponseError"],[4,"UiaaResponse"],[3,"MatrixError"],[4,"IntoHttpError"],[3,"Error"],[4,"OlmError"],[4,"Error"],[3,"InvalidUserTagName"],[4,"ScanError"],[4,"DecryptorError"],[4,"MegolmError"],[4,"CryptoStoreError"],[3,"Error"],[4,"ImageError"],[3,"SessionMeta"],[3,"SessionTokens"],[3,"Response"],[4,"MediaFormat"],[15,"u8"],[3,"Capabilities"],[3,"Invited"],[3,"Left"],[3,"Response"],[3,"FilterDefinition"],[3,"Response"],[4,"Room"],[4,"GuestAccess"],[4,"AnyStrippedStateEvent"],[4,"HistoryVisibility"],[8,"AsRef"],[8,"HttpSend"],[3,"RoomOrAliasId"],[4,"JoinRule"],[4,"UserIdentifier"],[3,"Response"],[15,"i64"],[3,"Media"],[4,"MembershipState"],[3,"Demand"],[15,"u32"],[3,"ServerName"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"TransactionId"],[3,"Response"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"UInt"],[3,"Response"],[3,"Response"],[3,"RequestConfig"],[3,"Response"],[4,"RoomType"],[4,"RoomVersionId"],[3,"Bytes"],[3,"Request"],[3,"Duration"],[3,"Box"],[3,"Pin"],[8,"IntoIterator"],[8,"Signal"],[3,"Response"],[3,"Path"],[8,"Error"],[8,"StateStore"],[3,"StoreConfig"],[3,"SyncSettings"],[3,"SyncResponse"],[8,"Stream"],[8,"Fn"],[3,"RoomTombstoneEventContent"],[3,"TypeId"],[3,"UnreadNotificationsCount"],[3,"RoomSummary"],[3,"Mime"],[3,"Response"],[3,"BaseImageInfo"],[3,"BaseVideoInfo"],[3,"BaseAudioInfo"],[3,"BaseFileInfo"],[3,"BaseThumbnailInfo"],[3,"AttachmentConfig"],[4,"AttachmentInfo"],[3,"Thumbnail"],[8,"BufRead"],[8,"Seek"],[8,"IntoCryptoStore"],[4,"Filter"],[4,"PresenceState"],[8,"IntoStateStore"],[8,"Into"],[4,"VerificationState"],[4,"AlgorithmInfo"],[3,"EncryptionInfo"],[3,"SyncTimelineEvent"],[3,"TimelineEvent"],[3,"AmbiguityChange"],[3,"AmbiguityChanges"],[3,"MembersResponse"],[4,"MemberEvent"],[4,"RawMemberEvent"],[3,"OwnedEventId"],[4,"AnySyncTimelineEvent"],[3,"MilliSecondsSinceUnixEpoch"],[4,"LocalTrust"],[3,"RoomKeyImportResult"],[3,"CrossSigningStatus"],[3,"MediaEncryptionInfo"],[3,"PathBuf"],[8,"FnMut"],[4,"RoomKeyImportError"],[4,"EventError"],[4,"SignatureError"],[4,"SessionCreationError"],[4,"KeyExportError"],[4,"MegolmSessionCreationError"],[4,"OlmSessionExportError"],[4,"SecretImportError"],[4,"OlmDecryptionError"],[4,"DecodeError"],[4,"MegolmDecryptionError"],[4,"CanonicalJsonError"],[4,"KeyError"],[4,"SignatureError"],[4,"OlmSessionCreationError"],[4,"DecodeError"],[3,"EncryptedFile"],[3,"FromUtf8Error"],[4,"SessionKeyDecodeError"],[4,"PickleError"],[3,"Device"],[3,"UserDevices"],[3,"UserIdentity"],[4,"Verification"],[3,"VerificationRequest"],[3,"MasterPubkey"],[3,"CrossSigningKey"],[8,"Iterator"],[4,"ManualVerifyError"],[4,"RequestVerificationError"],[3,"Ed25519PublicKey"],[3,"DeviceKeyId"],[4,"SigningKey"],[3,"SigningKeys"],[4,"VerificationMethod"],[3,"Signatures"],[3,"SasVerification"],[3,"AcceptSettings"],[3,"QrVerification"],[3,"CancelInfo"],[4,"CancelCode"],[4,"QrVerificationData"],[3,"AcceptedProtocols"],[3,"EmojiShortAuthString"],[4,"SasState"],[3,"Emoji"],[4,"DecodingError"],[4,"EncodingError"],[3,"TryFromIntError"],[4,"QrError"],[3,"SelfVerificationNoMasterKey"],[3,"SelfVerificationData"],[3,"VerificationData"],[4,"InnerSas"],[3,"Cancelled"],[3,"ReadOnlyDevice"],[4,"Ordering"],[3,"Base64"],[3,"QrCode"],[3,"SasV1Content"],[3,"SasV1Content"],[4,"ShortAuthenticationString"],[3,"Error"],[4,"DecodeError"],[3,"MacError"],[3,"UnpadError"],[4,"DecryptionError"],[3,"DecodeError"],[3,"RawEvent"],[3,"Ctx"],[8,"Debug"],[3,"JoinHandle"],[15,"u128"],[15,"f32"],[15,"f64"],[3,"Delay"],[3,"TryFromFloatSecsError"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[15,"never"],[3,"RwLockMappedWriteGuard"],[3,"MappedMutexGuard"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"MediaThumbnailSize"],[3,"MediaRequest"],[8,"MediaEventContent"],[4,"MediaSource"],[3,"Response"],[3,"Common"],[4,"RoomAccountDataEventType"],[3,"RoomAccountDataEvent"],[3,"RoomMember"],[3,"MessagesOptions"],[3,"Messages"],[4,"StateEventType"],[4,"SyncStateEvent"],[3,"Invite3pid"],[3,"MatrixUri"],[3,"MatrixToUri"],[4,"Direction"],[3,"OwnedTransactionId"],[3,"Response"],[4,"TagName"],[3,"Response"],[3,"OwnedServerName"],[8,"MessageLikeEventContent"],[3,"Response"],[4,"Value"],[8,"StateEventContent"],[3,"Response"],[3,"TagInfo"],[3,"Response"],[3,"Rooms"],[3,"JoinedRoom"],[3,"LeftRoom"],[3,"Timeline"],[3,"UnreadNotificationsCount"],[3,"ElapsedError"],[13,"MegolmV1AesSha2"],[13,"MismatchedIdentityKeys"],[13,"InvalidSignature"],[13,"Accepted"],[13,"KeysExchanged"],[13,"Started"],[13,"Done"],[13,"KeyMismatch"],[13,"FlowIdMismatch"],[8,"UniqueKey"]]},\
"matrix_sdk_appservice":{"doc":"Matrix Application Service library","t":[3,3,2,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,0,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,3,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AppService","AppServiceBuilder","AppServiceRegistration","AppServiceRouter","Error","FromHttpRequest","HostPortToSocketAddrs","Http","Hyper","Identifier","InvalidUri","Io","Matrix","MissingAccessToken","MissingRegistrationHost","MissingRegistrationPort","NoClientForLocalpart","Regex","Result","Serde","SerdeJson","SerdeYaml","UnknownHttpRequestBuilder","UriEmptyPath","UriPathUnknown","Url","UserBuilder","Utf8","as_uiaa_response","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","call","client_builder","clone","clone","clone","clone_into","clone_into","clone_into","compare_hs_token","default_request_config","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","event_handler","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_make_service","matrix_sdk","new","poll_ready","provide","register_room_query","register_user","register_user_query","registration","registration","ruma","run","service","set_default_request_config","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user","user","user_builder","user_id_is_in_namespace","user_with_client_builder","users","vzip","vzip","vzip","vzip","EventHandler","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_ref","init","into","rooms","to_owned","try_from","try_into","type_id","users","vzip","AppServiceRegistration","Host","NamespaceCache","Port","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_ref","from_ref","from_registration","get_host_and_port","init","init","into","into","to_owned","to_owned","try_from","try_from","try_from_yaml_file","try_from_yaml_str","try_into","try_into","type_id","type_id","vzip","vzip","UserBuilder","borrow","borrow_mut","build","client_builder","deref","deref_mut","device_id","drop","fmt","from","init","into","login","new","restored_session","try_from","try_into","type_id","vzip"],"q":["matrix_sdk_appservice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_appservice::event_handler","","","","","","","","","","","","","","","","","","","","","matrix_sdk_appservice::registration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_appservice::user","","","","","","","","","","","","","","","","","","",""],"d":["AppService","Builder for an AppService","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to destructure the error into an universal interactive …","","","","","","","","","Build the AppService.","Create a new <code>AppServiceBuilder</code>.","","Set the client builder to use for the appservice user.","","","","","","","Compare the given <code>hs_token</code> against the registration’s …","Set the default <code>[RequestConfig]</code> to use for appservice …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new AppService builder.","","","Register a responder for queries about the existence of a …","Register an appservice user by sending a …","Register a responder for queries about the existence of a …","AppService Registration.","Get the <code>AppServiceRegistration</code>.","","Convenience method that runs an http server.","Returns a <code>Service</code> that processes appservice requests.","Set the default RequestConfig","","","","","","","","","","","","","","","","","","AppService users.","Create an appservice user client.","Create a new appservice user builder for the given …","Check if given <code>user_id</code> is in any of the …","Same as <code>user()</code> but with the ability to pass in a …","Get the map containing all constructed appservice user …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","AppService Registration","","Cache data for the registration namespaces.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a new registration cache from a <code>Registration</code> value","Get the host and port from the registration URL","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Try to load registration from yaml file","Try to load registration from yaml string","","","","","","","Builder for an appservice user","","","Build the appservice user","Sets the client builder to use for the appservice user","","","Set the device ID of the appservice user","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Log in as the appservice user","Create a new appservice user builder","Restore a persisted session","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,10,5,4,1,10,5,4,4,5,10,4,10,5,4,10,5,4,5,4,1,10,5,4,1,10,5,4,1,10,5,4,0,1,1,10,5,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,5,4,10,5,4,1,10,5,4,1,10,5,4,10,0,4,10,1,5,5,5,0,5,0,5,5,5,1,10,5,4,1,1,10,5,4,1,10,5,4,1,10,5,4,0,5,5,5,5,5,1,10,5,4,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,9,54,9,54,9,54,9,54,9,9,54,9,54,9,54,9,54,9,9,54,9,54,54,9,9,54,9,54,9,54,9,54,9,9,9,54,9,54,9,54,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[5]]]],[[7,8,9],4],[[10,11]],[[4,12],4],[10,10],[5,5],[4,4],[[]],[[]],[[]],[[5,[14,[13]]],15],[[4,16],4],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],0,[[1,18],19],[[1,18],19],[[[10,[20]],18],19],[[5,18],19],[[4,18],19],[21,1],[22,1],[23,1],[24,1],[25,1],[[]],[26,1],[27,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],36],0,[[7,8,9],4],[[10,37],[[38,[6]]]],[39],[[5,[41,[40]]]],[[5,13,[3,[42]]],6],[[5,[41,[40]]]],0,[5,9],0,[[5,[44,[43]],[44,[45]]],6],[5,10],[[5,[3,[16]]],6],[1,[[3,[46]]]],[[]],[[]],[[]],[[],43],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],48],[[],48],[[],48],[[],48],0,[[5,[3,[13]]],[[6,[49]]]],[[5,13],50],[[5,[14,[13]]],15],[[5,[3,[13]],12],[[6,[49]]]],[5,[[52,[[51,[43,49]]]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[53,53],[[]],[[],53],[17],[17],[17],[[53,18],19],[[]],[[]],[[],17],[[]],0,[[]],[[],47],[[],47],[[],48],0,[[]],0,0,0,0,[[]],[[]],[[]],[[]],[9,9],[54,54],[[]],[[]],[17],[9],[17],[17],[17],[17],[17],[[9,18],19],[[54,18],19],[55,9],[[]],[[]],[[]],[[]],[55,[[6,[54]]]],[9,6],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],47],[[],47],[[[44,[56]]],[[6,[9]]]],[[[14,[13]]],[[6,[9]]]],[[],47],[[],47],[[],48],[[],48],[[]],[[]],0,[[]],[[]],[50,[[6,[49]]]],[[50,12],50],[17],[17],[[50,[3,[57]]],50],[17],[[50,18],19],[[]],[[],17],[[]],[50,50],[[5,13],50],[[50,58],50],[[],47],[[],47],[[],48],[[]]],"p":[[4,"Error"],[3,"UiaaInfo"],[4,"Option"],[3,"AppServiceBuilder"],[3,"AppService"],[6,"Result"],[3,"Url"],[3,"OwnedServerName"],[3,"AppServiceRegistration"],[3,"AppServiceRouter"],[3,"Request"],[3,"ClientBuilder"],[15,"str"],[8,"AsRef"],[15,"bool"],[3,"RequestConfig"],[15,"usize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"HttpError"],[4,"Error"],[3,"Error"],[4,"ParseError"],[3,"Error"],[4,"StoreError"],[4,"FromHttpRequestError"],[3,"Error"],[3,"Utf8Error"],[3,"Error"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"InvalidUri"],[3,"Error"],[3,"IntoMakeService"],[3,"Context"],[4,"Poll"],[3,"Demand"],[8,"FnMut"],[3,"Box"],[3,"DeviceId"],[3,"String"],[8,"Into"],[15,"u16"],[8,"Error"],[4,"Result"],[3,"TypeId"],[3,"Client"],[3,"UserBuilder"],[3,"DashMap"],[3,"Arc"],[3,"EventHandler"],[3,"NamespaceCache"],[3,"Registration"],[3,"PathBuf"],[3,"OwnedDeviceId"],[3,"Session"]]},\
"matrix_sdk_base":{"doc":"This crate implements the base to build a Matrix client …","t":[13,8,13,3,13,13,4,13,13,13,4,13,13,13,13,6,4,13,13,13,3,13,3,6,3,3,3,4,8,3,3,3,2,2,13,2,8,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,2,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,3,3,13,4,3,4,13,13,13,13,3,3,13,13,13,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,5,3,6,18,18,18,18,18,6,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,4,3,3,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,13,6,13,13,13,13,8,13,13,3,13,13,6,13,3,8,8,3,4,4,13,13,13,13,12,11,10,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,11,11,10,11,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,12,12,10,11,10,11,10,11,12,12,10,11,10,11,12,10,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Aliased","AsyncTraitDeps","BadCryptoStoreState","BaseClient","Calculated","CryptoStore","DisplayName","Empty","EmptyWas","EncryptionNotEnabled","Error","Invited","Joined","Left","MegolmError","MinimalRoomMemberEvent","MinimalStateEvent","Named","OlmError","Original","OriginalMinimalStateEvent","Redacted","RedactedMinimalStateEvent","Result","Room","RoomInfo","RoomMember","RoomType","SendOutsideWasm","Session","SessionMeta","SessionTokens","StateChanges","StateStore","StateStore","StoreError","SyncOutsideWasm","access_token","access_token","active_members","active_members_count","alt_aliases","alt_aliases","are_members_synced","as_original","avatar_url","avatar_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_alias","canonical_alias","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_info","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","content","content","create_content","crypto","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialized_responses","device_id","device_id","direct_targets","display_name","display_name","encryption_settings","eq","eq","eq","equivalent","equivalent","equivalent","event","event_id","event_id","event_id","event_read_receipts","executor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_parts","get_filter","get_member","get_or_create_room","get_push_room_context","get_push_rules","get_room","get_rooms","get_stripped_rooms","guest_access","handle_redaction","handle_state_event","handle_stripped_state_event","hash","history_visibility","into","into","into","into","into","into","into","into","into","into","into","into","into","into_original","into_parts","is_direct","is_encrypted","is_encrypted","is_encryption_state_synced","is_public","is_space","is_state_fully_synced","is_tombstoned","join_rule","joined_members","joined_user_ids","last_prev_batch","locks","logged_in","mark_as_invited","mark_as_joined","mark_as_left","mark_encryption_state_missing","mark_encryption_state_synced","mark_members_missing","mark_members_synced","mark_state_fully_synced","mark_state_not_synced","mark_state_partially_synced","max_power_level","media","members","membership","membership","membership","name","name","name_ambiguous","new","normalized_power_level","olm_machine","once_cell","own_user_id","power_level","provide","receive_filter_upload","receive_login_response","receive_members","receive_sync_response","redact","refresh_token","refresh_token","room_id","room_id","room_joined","room_left","room_type","room_type","room_version","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session","session_meta","session_tokens","set_encryption_event","set_prev_batch","set_session_meta","set_session_tokens","share_room_key","source","store","store","sync","sync_lock","sync_token","tags","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","tombstone","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unread_notification_counts","update_notification_count","update_push_room_context","update_summary","update_summary","update_with_refresh_response","user_id","user_id","user_id","user_read_receipt","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_store_config","AlgorithmInfo","AmbiguityChange","AmbiguityChanges","EncryptionInfo","MegolmV1AesSha2","MemberEvent","MembersResponse","RawMemberEvent","Stripped","Stripped","Sync","Sync","SyncTimelineEvent","TimelineEvent","Trusted","UnknownDevice","Untrusted","VerificationState","algorithm_info","ambiguated_member","ambiguity_changes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disambiguated_member","encryption_info","encryption_info","event","event","event_id","event_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","member_ambiguous","membership","origin_server_ts","original_content","sender","sender","sender_device","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","verification_state","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","curve25519_key","sender_claimed_keys","spawn","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","deserialize","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","equivalent","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","serialize","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","vzip","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","blocking_lock","blocking_lock_owned","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","downgrade","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut","get_mut","into","into","into","into","into","into_inner","into_inner","into_mapped","lock","lock_owned","map","map","map","mutex","new","new","read","read_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","File","MediaEventContent","MediaFormat","MediaRequest","MediaThumbnailSize","Thumbnail","UniqueKey","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","format","from","from","from","height","into","into","into","method","source","source","thumbnail_source","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_key","unique_key","unique_key","unique_key","vzip","vzip","vzip","width","Backend","BoxStream","Codec","Encryption","Encryption","Identifier","IntoStateStore","Json","Length","MemoryStore","Random","Redaction","Result","Serialization","StateChanges","StateStore","StateStoreExt","StoreConfig","StoreEncryptionError","StoreError","StoreLocked","UnencryptedStore","UnsupportedDatabaseVersion","Version","account_data","add_account_data","add_media_content","add_media_content","add_notification","add_presence_event","add_receipts","add_redaction","add_room","add_room_account_data","add_state_event","add_stripped_member","add_stripped_room","ambiguity_maps","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","crypto_store","default","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_account_data_event","get_account_data_event","get_account_data_event_static","get_custom_value","get_custom_value","get_event_room_receipt_events","get_event_room_receipt_events","get_filter","get_filter","get_invited_user_ids","get_invited_user_ids","get_joined_user_ids","get_joined_user_ids","get_media_content","get_media_content","get_member_event","get_member_event","get_presence_event","get_presence_event","get_profile","get_profile","get_room_account_data_event","get_room_account_data_event","get_room_account_data_event_static","get_room_infos","get_room_infos","get_state_event","get_state_event","get_state_event_static","get_state_event_static_for_key","get_state_events","get_state_events","get_state_events_static","get_stripped_room_infos","get_stripped_room_infos","get_sync_token","get_sync_token","get_user_ids","get_user_ids","get_user_room_receipt_event","get_user_room_receipt_event","get_users_with_display_name","get_users_with_display_name","into","into","into","into","into","into_state_store","members","new","new","new","notifications","presence","profiles","provide","provide","receipts","redactions","remove_media_content","remove_media_content","remove_media_content_for_uri","remove_media_content_for_uri","remove_room","remove_room","room_account_data","room_infos","save_changes","save_changes","save_filter","save_filter","session","set_custom_value","set_custom_value","source","source","state","state_store","stripped_members","stripped_room_infos","stripped_state","sync_token","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","JoinedRoom","LeftRoom","Rooms","SyncResponse","Timeline","UnreadNotificationsCount","account_data","account_data","account_data","ambiguity_changes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","device_lists","device_one_time_keys_count","ephemeral","events","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","highlight_count","into","into","into","into","into","into","invite","join","leave","limited","notification_count","notifications","presence","prev_batch","rooms","serialize","serialize","serialize","serialize","serialize","state","state","timeline","timeline","to_device_events","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unread_notifications","vzip","vzip","vzip","vzip","vzip","vzip","ElapsedError","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","into","provide","timeout","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":["matrix_sdk_basematrix_sdk_base::deserialized_responsesmatrix_sdk_base::deserialized_responses::AlgorithmInfo","","matrix_sdk_base::executor","matrix_sdk_base::instant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_base::locks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_base::media","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_base::storematrix_sdk_base::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_base::timeout","","","","","","","","","","","","","","","","","",""],"d":["The room has a canonical alias that should be used","Super trait that is used for our store traits, this trait …","Attempting to restore a session after the olm-machine has …","A no IO Client implementation.","The room has not given an explicit name but a name could be","An error occurred in the crypto store.","The name of the room, either from the metadata or …","No useful name could be calculated or ever found","The room doesn’t have a name right now, but used to have …","The room where a group session should be shared is not …","Internal representation of errors.","The room is in a invited state.","The room is in a joined state.","The room is in a left state.","An error occurred during a group E2EE operation.","A minimal <code>m.room.member</code> event.","A minimal state event.","The room has been named explicitly as","An error occurred during a E2EE operation.","An unredacted event.","An unredacted minimal state event.","A redacted event.","A redacted minimal state event.","Result type of the rust-sdk.","The underlying room data structure collecting state for …","The underlying pure data structure for joined and left …","A member of a room.","Enum keeping track in which state the room is, e.g. if our …","Alias for <code>Send</code> on non-wasm, empty trait (implemented by …","A user session, containing an access token, an optional …","The immutable parts of the session: the user ID and device …","The mutable parts of the session: the access token and …","","","A generic error returned when the state store fails not …","","Alias for <code>Sync</code> on non-wasm, empty trait (implemented by …","The access token used for this session.","The access token used for this session.","Get the list of <code>RoomMember</code>s that are considered to be …","The number of active members (invited + joined) in the …","Get the canonical alias of this room.","Get the alternative aliases of this room.","Check if the room has its members fully synced.","Returns the inner event, if it isn’t redacted.","Get the avatar url of the member, if there is one.","Get the avatar url of this room.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the canonical alias of this room.","Get the canonical alias of this room.","","","","","","","","","","","","","Clone the inner RoomInfo","","","","","","","","","","","","","The event’s content.","The event’s content.","Get the <code>m.room.create</code> content of this room.","","","","","","","","","","SDK-specific variations of response types from Ruma.","The ID of the client device.","The ID of the client device.","If this room is a direct message, get the members that we…","Get the display name of the member if there is one.","Calculate the canonical display name of the room, taking …","Get the <code>m.room.encryption</code> content that enabled end to end …","","","","","","","Get the original member event","Get the inner event’s ID.","The event’s ID, if known.","The event’s ID, if known.","Get the read receipts as a list of <code>UserId</code> and <code>Receipt</code> …","Abstraction over an executor so we can spawn tasks under …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Session</code> from a <code>SessionMeta</code> and <code>SessionTokens</code>.","Get the filter id of a previously uploaded filter.","Get the <code>RoomMember</code> with the given <code>user_id</code>.","Lookup the Room for the given RoomId, or create one, if it …","Get the push context for the given room.","Get the push rules.","Get the room with the given room id.","Get all the rooms this client knows about.","Get all the rooms this client knows about.","Get the guest access policy of this room.","Handle the given redaction.","Handle the given state event.","Handle the given stripped state event.","","Get the history visibility policy of this room.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts <code>self</code> to the inner <code>OriginalMinimalStateEvent&lt;C&gt;</code>, …","Split this <code>Session</code> between <code>SessionMeta</code> and <code>SessionTokens</code>.","Is this room considered a direct message.","Is the room encrypted.","Returns whether this is an encrypted Room.","Check if the room has its encryption event synced.","Is the room considered to be public.","Whether this room’s <code>RoomType</code> is <code>m.space</code>.","Check if the room states have been synced","Has the room been tombstoned.","Get the join rule policy of this room.","Get the list of <code>RoomMember</code>s that are considered to be …","Get the list of users ids that are considered to be joined …","Get the <code>prev_batch</code> token that was received from the last …","","Is the client logged in.","Mark this Room as invited.","Mark this Room as joined.","Mark this Room as left.","Mark this Room still missing encryption state information.","Mark this Room as having the encryption state synced.","Mark this Room still missing member information.","Mark this Room as having all the members synced.","Mark this Room still having all state synced.","Mark this Room still having no state synced.","Mark this Room still missing some state information.","Get the maximum power level that this room contains.","Common types for media content.","Get the all <code>RoomMember</code>s of this room that are known to the …","Obtain the membership state, regardless of whether this …","Get the membership state of this member.","Obtain the membership state, regardless of whether this …","Get the name of the member.","Get the <code>m.room.name</code> of this room.","Is the name that the member uses ambiguous in the room.","Create a new default client.","Get the normalized power level of this member.","Get the olm machine.","","Get our own user id.","Get the power level of this member.","","Receive a successful filter upload response, the filter id …","Receive a login response and update the session of the …","Receive a get member events response and convert it to a …","Receive a response from a sync call.","Redacts this event.","The token used for refreshing the access token, if any.","The token used for refreshing the access token, if any.","Get the unique room id of the room.","Get the room ID of this room.","User has joined a room.","User has left a room.","Get the type of the room.","Get the room type of this room.","Get the room version of this room.","","","","","","","","Get the user login session.","Get the session meta information.","Get the session tokens.","Set the encryption event content in this room.","Set the <code>prev_batch</code>-token. Returns whether the token has …","Set the meta of the session.","Set the session tokens.","Get a to-device request that will share a room key with …","","The state store holds the overall state for rooms, users …","Get a reference to the store.","The SDK’s representation of the result of a <code>/sync</code> …","Get access to the store’s sync lock.","Get the current, if any, sync token of the client. This …","Get the <code>Tags</code> for this room.","","","","","","","","","","","","","","","","Get the <code>m.room.tombstone</code> content of this room if there is …","Get the topic of the room.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the unread notification counts.","Update the notifications count","Update the push context for the given room.","Update the summary with given RoomInfo","Update the RoomSummary","Update this <code>SessionTokens</code> with the values found in the …","Get the unique user id of this member.","The user the access token was issued for.","The user the access token was issued for.","Get the read receipt as a <code>EventId</code> and <code>Receipt</code> tuple for …","","","","","","","","","","","","","","Create a new client.","The algorithm specific information of a decrypted event.","A change in ambiguity of room members that an <code>m.room.member</code>…","Collection of ambiguity changes that room member events …","Struct containing information on how an event was …","The info if the event was encrypted using …","Wrapper around both MemberEvent-Types","A deserialized response for the rooms members API call.","Raw version of <code>MemberEvent</code>.","A member event from a room in invited state.","A member event from a room in invited state.","A member event from a room in joined or left state.","A member event from a room in joined or left state.","A customized version of a room event coming from a sync …","","The device is trusted.","The device is not known to us.","The device is not trusted.","The verification state of the device that sent an event to …","Information about the algorithm that was used to encrypt …","Has another user become ambiguous because of this event.","Collection of ambiguity changes that room member events …","","","","","","","","","","","","","","","","","","","","","A map from room id to a map of an event id to the …","The list of members events.","","","","","","","","","","","","","","","","","","","","","","","","","","Try to deserialize the inner JSON as the expected type.","","Has another user been disambiguated because of this event.","The encryption info about the event. Will be <code>None</code> if the …","The encryption info about the event. Will be <code>None</code> if the …","The actual event.","The actual event.","Get the event id of this <code>SyncTimelineEvent</code> if the event …","The ID of this event.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the member that is contained in the state key of the …","The membership state of the user","The Server Timestamp of this event.","The inner Content of the wrapped Event","The sender of this event.","The user ID of the event sender, note this is untrusted …","The device ID of the device that sent us the event, note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user id associated to this member event","The verification state of the device that sent us the …","","","","","","","","","","","The curve25519 key of the device that created the megolm …","The signing keys that have created the megolm key that was …","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code>.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","The file that was uploaded.","Trait for media event content.","The requested format of a media file.","A request for media data.","The requested size of a media thumbnail.","A thumbnail of the file that was uploaded.","A trait to uniquely identify values of the same type.","","","","","","","","","","","","","","","","The requested format of the media data.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The desired height of the thumbnail. The actual thumbnail …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The desired resizing method.","Get the source of the file for <code>Self</code>.","The source of the media file.","Get the source of the thumbnail for <code>Self</code>.","","","","","","","","","","","","","A string that uniquely identifies <code>Self</code> compared to other …","","","","","","","The desired width of the thumbnail. The actual thumbnail …","An error happened in the underlying database backend.","BoxStream of owned Types","The store failed to encode or decode some data.","Error encrypting or decrypting a value {0}","The store failed to encrypt or decrypt some data.","An error happened while deserializing a Matrix identifier, …","A type that can be type-erased into <code>Arc&lt;dyn StateStore&gt;</code>.","An error happened while serializing or deserializing some …","The ciphertext had an invalid length, expected {0}, got {1}","In-Memory, non-persistent implementation of the <code>StateStore</code>","Coulnd’t generate enough randomness for a cryptographic …","Redacting an event in the store has failed.","A <code>StateStore</code> specific result type.","Failed to serialize or deserialize a value {0}","Store state changes and pass them to the StateStore.","An abstract state store trait that can be used to …","Convenience functionality for state stores.","Configuration for the state store and, when <code>encryption</code> is …","Error type for the <code>StoreCipher</code> operations.","State store specific error type.","The store is locked with a passphrase and an incorrect …","An unencrypted store was tried to be unlocked with a …","The database format has changed in a backwards …","Unsupported ciphertext version, expected {0}, got {1}","A mapping of event type string to <code>AnyBasicEvent</code>.","Update the <code>StateChanges</code> struct with the given <code>AnyBasicEvent</code>…","Add a media file’s content in the media store.","","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given <code>PresenceEvent</code>…","Update the <code>StateChanges</code> struct with the given room with a …","Redact an event in the room","Update the <code>StateChanges</code> struct with the given <code>RoomInfo</code>.","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given room with a …","Update the <code>StateChanges</code> struct with the given <code>RoomInfo</code>.","A map from room id to a map of a display name and a set of …","Create a new <code>Backend</code> error.","","","","","","","","","","","","","","","Set a custom implementation of a <code>CryptoStore</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get an event out of the account data store.","","Get an event of a statically-known type from the account …","Get arbitrary data from the custom store","","Get events out of the event room receipt store.","","Get the filter id that was stored under the given filter …","","Get all the user ids of members that are in the invited …","","Get all the user ids of members that are in the joined …","","Get a media file’s content out of the media store.","","Get the <code>MemberEvent</code> for the given state key in the given …","","Get the stored presence event for the given user.","","Get the current profile for the given user in the given …","","Get an event out of the room account data store.","","Get an event of a statically-known type from the room …","Get all the pure <code>RoomInfo</code>s the store knows about.","","Get a state event out of the state store.","","Get a specific state event of statically-known type.","Get a specific state event of statically-known type.","Get a list of state events for a given room and …","","Get a list of state events of a statically-known type for …","Get all the pure <code>RoomInfo</code>s the store knows about.","","Get the last stored sync token.","","Get all the user ids of members for a given room, for …","","Get an event out of the user room receipt store.","","Get all the users that use the given display name in the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A mapping of <code>RoomId</code> to a map of users and their …","Create a new empty MemoryStore","Create a new <code>StateChanges</code> struct with the given sync_token.","Create a new default <code>StoreConfig</code>.","A map of <code>RoomId</code> to a vector of <code>Notification</code>s","A mapping of <code>UserId</code> to <code>PresenceEvent</code>.","A mapping of <code>RoomId</code> to a map of users and their …","","","A map of <code>RoomId</code> to <code>ReceiptEventContent</code>.","A map of <code>RoomId</code> to maps of <code>OwnedEventId</code> to be redacted by …","Removes a media file’s content from the media store.","","Removes all the media files’ content associated to an …","","Removes a room and all elements associated from the state …","","A mapping of <code>RoomId</code> to a map of event type string to …","A map of <code>RoomId</code> to <code>RoomInfo</code>.","Save the set of state changes in the store.","","Save the given filter id under the given name.","","A user session, containing an access token and information …","Put arbitrary data into the custom store","","","","A mapping of <code>RoomId</code> to a map of event type string to a …","Set a custom implementation of a <code>StateStore</code>.","A mapping of <code>RoomId</code> to a map of users and their …","A map of <code>RoomId</code> to <code>RoomInfo</code> for stripped rooms (e.g. for …","A mapping of <code>RoomId</code> to a map of event type to a map of …","The sync token that relates to this update.","","","","","","","","","","","","","","","","","","","","","","","","","Updates to joined rooms.","Updates to left rooms.","Updates to rooms in a <code>SyncResponse</code>.","Internal representation of a <code>/sync</code> response.","Events in the room.","Counts of unread notifications for a room.","The global private data created by this user.","The private data that this user has attached to this room.","The private data that this user has attached to this room.","Collection of ambiguity changes that room member events …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information on E2E device updates.","For each key algorithm, the number of unclaimed one-time …","The ephemeral events in the room that aren’t recorded in …","A list of events.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The number of unread notifications for this room with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The rooms that the user has been invited to.","The rooms that the user has joined.","The rooms that the user has left or been banned from.","True if the number of events returned was limited by the …","The total number of unread notifications for this room.","New notifications per room.","Updates to the presence status of other users.","A token that can be supplied to to the <code>from</code> parameter of …","Updates to rooms.","","","","","","Updates to the state, between the time indicated by the …","Updates to the state, between the time indicated by the …","The timeline of messages and state changes in the room.","The timeline of messages and state changes in the room up …","Messages sent directly between devices.","","","","","","","","","","","","","","","","","","","","","","","","","Counts of unread notifications for this room.","","","","","","","Error type notifying that a timeout has elapsed.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Wait for <code>future</code> to be completed. <code>future</code> needs to return a …","","","","","",""],"i":[17,0,35,0,17,35,0,17,17,35,0,16,16,16,35,0,0,17,35,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,18,20,1,5,1,5,1,9,2,1,15,35,2,1,16,5,17,18,19,20,9,10,24,15,35,2,1,16,5,17,18,19,20,9,10,24,1,5,15,2,1,16,5,17,18,19,20,9,10,24,1,15,2,1,16,5,17,18,19,20,9,10,24,10,24,1,0,15,16,5,17,18,9,10,24,0,18,19,1,2,1,1,16,17,18,16,17,18,2,9,10,24,1,0,15,35,35,2,1,16,5,17,17,18,19,9,10,24,15,35,35,35,35,35,2,1,16,5,17,18,18,19,20,9,9,9,9,9,9,9,9,9,9,9,9,10,24,18,15,1,15,15,15,15,15,15,1,5,5,5,18,1,15,35,2,1,16,5,17,18,19,20,9,10,24,9,18,1,1,5,1,1,1,1,1,1,1,1,1,0,15,5,5,5,5,5,5,5,5,5,5,1,0,1,74,2,9,2,1,2,15,2,15,0,1,2,35,15,15,15,15,9,18,20,1,5,15,15,1,5,5,16,5,17,18,9,10,24,15,15,15,5,5,15,15,15,35,0,15,0,15,15,1,0,15,2,1,16,5,17,18,19,20,9,10,24,35,17,1,1,15,35,2,1,16,5,17,18,19,20,9,10,24,15,35,2,1,16,5,17,18,19,20,9,10,24,15,35,2,1,16,5,17,18,19,20,9,10,24,1,5,15,1,5,20,2,18,19,1,15,35,2,1,16,5,17,18,19,20,9,10,24,15,0,0,0,0,98,0,0,0,105,104,105,104,0,0,97,97,97,0,99,102,81,97,98,99,100,101,102,103,81,105,104,97,98,99,100,101,102,103,81,105,104,103,81,97,98,99,100,101,102,103,81,104,97,98,99,100,101,102,103,81,104,102,103,81,97,98,99,100,105,104,102,100,101,100,101,100,104,97,98,99,100,101,102,103,81,105,104,97,98,99,100,100,100,101,102,103,81,105,104,97,98,99,100,101,102,103,81,105,104,102,104,104,104,104,99,99,97,98,99,100,105,97,98,99,100,101,102,103,81,104,97,98,99,100,101,102,103,81,105,104,97,98,99,100,101,102,103,81,105,104,97,98,99,100,101,102,103,81,105,104,104,99,97,98,99,100,101,102,103,81,105,104,164,164,0,0,0,113,113,113,113,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,0,0,0,120,120,90,90,120,121,123,124,90,120,121,123,124,90,120,90,121,123,124,121,124,124,121,123,124,120,121,121,123,123,124,124,90,120,120,120,121,123,124,90,90,90,120,90,120,121,123,124,90,120,90,124,120,120,121,123,124,121,120,90,90,90,121,123,124,120,121,123,124,90,120,121,123,124,90,120,120,121,123,124,90,90,90,90,120,121,123,124,90,120,121,123,124,90,90,90,90,132,0,0,0,0,132,0,132,133,134,132,133,134,132,133,134,132,133,134,132,133,134,134,132,133,134,133,132,133,134,133,165,134,165,132,133,134,132,133,134,132,133,134,132,133,134,166,132,133,134,132,133,134,133,39,0,39,147,39,39,0,39,147,0,147,39,0,147,0,0,0,0,0,0,39,39,39,147,63,63,89,140,63,63,63,63,63,63,63,63,63,63,39,147,140,39,63,96,147,140,39,63,96,140,96,140,96,96,140,63,96,147,147,140,39,39,63,96,147,147,147,147,140,39,39,39,39,39,63,96,89,140,167,89,140,89,140,89,140,89,140,89,140,89,140,89,140,89,140,89,140,89,140,167,89,140,89,140,167,167,89,140,167,89,140,89,140,89,140,89,140,89,140,147,140,39,63,96,140,63,140,63,96,63,63,63,147,39,63,63,89,140,89,140,89,140,63,63,89,140,89,140,63,89,140,147,39,63,96,63,63,63,63,140,96,147,39,147,140,39,63,96,147,140,39,63,96,147,140,39,63,96,147,140,39,63,96,0,0,0,0,0,0,83,159,160,83,83,158,159,93,160,161,83,158,159,93,160,161,83,158,159,93,160,161,83,158,159,93,160,161,83,158,93,161,158,159,93,160,161,83,83,159,161,83,158,159,93,160,161,83,158,159,93,93,160,161,93,83,158,159,93,160,161,158,158,158,161,93,83,83,161,83,158,159,93,160,161,159,160,159,160,83,83,158,159,93,160,161,83,158,159,93,160,161,83,158,159,93,160,161,83,158,159,93,160,161,159,83,158,159,93,160,161,0,163,163,163,163,163,163,163,163,163,163,163,0,163,163,163,163,163,163],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[5,6],[1,[[3,[7]]]],[5],[1,8],[9,[[11,[10]]]],[2,[[11,[12]]]],[1,[[11,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[11,[7]]]],[5,[[11,[14]]]],[15,15],[2,2],[1,1],[16,16],[5,5],[17,17],[18,18],[19,19],[20,20],[[[9,[[0,[21,22,23]]]]],[[9,[[0,[21,22,23]]]]]],[10,10],[24,24],[1,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,[[11,[25]]]],0,[[],15],[[],[[26,[16]]]],[[],[[26,[5]]]],[[],[[26,[17]]]],[[],[[26,[18]]]],[[],[[26,[9]]]],[[],[[26,[10]]]],[[],[[26,[24]]]],0,0,0,[1,[[28,[27]]]],[2,[[11,[29]]]],[1,[[4,[17]]]],[1,[[11,[30]]]],[[16,16],8],[[17,17],8],[[18,18],8],[[],8],[[],8],[[],8],[2,31],[9,[[11,[32]]]],0,0,[[1,32],[[4,[3]]]],0,[[15,33],34],[[35,33],34],[[35,33],34],[[2,33],34],[[1,33],34],[[16,33],34],[[5,33],34],[[17,33],34],[[17,33],34],[[18,33],34],[[19,33],34],[[[9,[[0,[36,22,23]]]],33],34],[[10,33],34],[[24,33],34],[[]],[37,35],[[]],[38,35],[39,35],[40,35],[[]],[[]],[[]],[[]],[[]],[41,18],[[]],[[]],[[]],[42,[[9,[43]]]],[44,9],[45,[[9,[25]]]],[46,[[9,[47]]]],[48,[[9,[49]]]],[50,[[9,[51]]]],[52,[[9,[53]]]],[54,[[9,[55]]]],[56,[[9,[57]]]],[[]],[44,9],[58,[[9,[59]]]],[[]],[[]],[[19,20],18],[[15,29],[[4,[[11,[60]]]]]],[[1,61],[[4,[[11,[2]]]]]],[[15,62,16],1],[[15,1,5,63],[[65,[[11,[64]]]]]],[[15,63],[[65,[66]]]],[[15,62],[[11,[1]]]],[15,[[3,[1]]]],[15,[[3,[1]]]],[1,67],[[5,68]],[[5,69],8],[[5,70],8],[18],[1,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[11,[10]]]],[18],[1,8],[1,8],[5,8],[1,8],[1,8],[1,8],[1,8],[1,8],[1,72],[1,[[4,[[3,[2]]]]]],[1,[[4,[[3,[27]]]]]],[1,[[11,[60]]]],0,[15,8],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[1,73],0,[1,[[4,[[3,[2]]]]]],[74,75],[2,75],[[[9,[76]]],75],[2,29],[1,[[11,[60]]]],[2,8],[[],15],[2,73],[15,[[11,[77]]]],0,[1,61],[2,73],[78],[[15,29,79],65],[[15,41],65],[[15,62,80],[[65,[81]]]],[[15,82],[[65,[83]]]],[[9,84]],0,0,[1,62],[5,62],[[15,62],[[65,[1]]]],[[15,62],[[65,[1]]]],[1,16],[5,[[11,[85]]]],[5,[[11,[84]]]],[16,26],[5,26],[17,26],[18,26],[9,26],[10,26],[24,26],[15,[[11,[18]]]],[15,[[11,[19]]]],[15,[[86,[[11,[20]]]]]],[[5,[11,[30]]]],[[5,[11,[29]]],8],[[15,19],65],[[15,20]],[[15,62],[[65,[[3,[[31,[87]]]]]]]],[35,[[11,[88]]]],0,[15,89],0,[15,90],[15,[[11,[60]]]],[1,[[4,[[11,[91]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[1,[[11,[59]]]],[1,[[11,[60]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[1,93],[[5,93]],[[15,64,61,5,63]],[[1,5]],[[5,94],8],[[20,95]],[2,61],0,0,[[1,61],[[4,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[81,81],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],102],[[],103],[[],81],[[],[[26,[97]]]],[[],[[26,[98]]]],[[],[[26,[99]]]],[[],[[26,[100]]]],[105,[[106,[104]]]],[[],[[26,[104]]]],0,0,0,0,0,[100,[[11,[107]]]],[104,[[11,[32]]]],[[97,33],[[26,[108]]]],[[98,33],[[26,[108]]]],[[99,33],[[26,[108]]]],[[100,33],[[26,[108]]]],[[101,33],[[26,[108]]]],[[102,33],34],[[103,33],34],[[81,33],34],[[105,33],34],[[104,33],34],[[]],[[]],[[]],[[]],[[[110,[109]]],100],[101,100],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[104,75],[104,[[11,[111]]]],[104,[[11,[76]]]],[104,61],0,0,[97,26],[98,26],[99,26],[100,26],[105,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],[104,61],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],112],0,0,0,0,0,0,0,0,0,[[113,113],113],[[113,113]],[113,114],[113,114],[113,114],[113,6],[113,115],[113,116],[[]],[[]],[[]],[[]],[[113,113],[[11,[113]]]],[[113,117],[[11,[113]]]],[[113,117],[[11,[113]]]],[[113,113],[[11,[113]]]],[113,113],[[]],[[113,113],118],[[],113],[[],[[26,[113]]]],[[113,117],113],[[113,117]],[[113,113],115],[[113,113],116],[[113,115],113],[[113,116],113],[[113,113],8],[[],8],[[113,33],[[26,[108]]]],[[]],[6,113],[6,113],[6,113],[6,113],[115,113],[116,113],[113],[[]],[113,8],[[113,117],113],[[113,117]],[[113,115],113],[[113,116],113],[[6,117],113],[[],116],[[113,113],[[11,[118]]]],[[113,113],113],[[113,117],113],[[113,113],113],[113,26],[[113,113],113],[[113,113]],[113,117],[113,117],[113,117],[[],113],[[],113],[[]],[[],26],[115,[[26,[113,119]]]],[116,[[26,[113,119]]]],[[],26],[[],92],[[]],0,0,0,0,0,[120,121],[[[31,[120]]],122],[90,123],[90,124],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],120],[[],90],[121],[123],[124],[121],[124],[124,123],[121],[123],[124],[[120,33],[[26,[108]]]],[[121,33],[[26,[108]]]],[[121,33],[[26,[108]]]],[[123,33],[[26,[108]]]],[[123,33],[[26,[108]]]],[[124,33],[[26,[108]]]],[[124,33],[[26,[108]]]],[[90,33],[[26,[108]]]],[[],120],[125],[[]],[[]],[[]],[[]],[125],[[]],[[],90],[120],[90],[[]],[[]],[[]],[[]],[[]],[120],[90],[124,126],[120,127],[[[31,[120]]],127],[121,128],[123,123],[124,126],[121,120],[[],120],[[],90],[90,127],[[[31,[90]]],127],[[],60],[[],60],[[],60],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[120,[[26,[121,129]]]],[[[31,[120]]],[[26,[122,129]]]],[121,[[26,[128,121]]]],[123,[[26,[123,123]]]],[124,[[26,[126,124]]]],[90,[[26,[123,129]]]],[[[31,[90]]],[[26,[130,129]]]],[90,[[26,[124,129]]]],[[[31,[90]]],[[26,[131,129]]]],[[],92],[[],92],[[],92],[[],92],[[],92],[[]],[[]],[[]],[[]],[[]],[117,90],[90,127],[[[31,[90]]],127],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[133,133],[134,134],[[]],[[]],[[]],[[132,33],34],[[133,33],34],[[134,33],34],0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,[[],[[11,[135]]]],0,[[],[[11,[135]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],92],[[],92],[[],92],[[],60],[132,60],[133,60],[134,60],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[63,136,[110,[136]]]],[[134,[3,[137]]],[[139,[[138,[127]]]]]],[[140,134,[3,[137]]],[[139,[[138,[127]]]]]],[[63,62,141]],[[63,142,[110,[142]]]],[[63,62,143]],[[63,62,32,[110,[68]]]],[[63,5]],[[63,62,144,[110,[144]]]],[[63,62,69,[110,[69]]]],[[63,62,61,[110,[145]]]],[[63,5]],0,[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[140,140],[96,96],[[]],[[]],[[96,146],96],[[],140],[[],63],[[],96],[[147,33],[[26,[108]]]],[[147,33],[[26,[108]]]],[[140,33],34],[[39,33],34],[[39,33],34],[[63,33],34],[[96,33],[[26,[108]]]],[148,147],[[]],[149,147],[150,147],[[]],[[]],[151,39],[147,39],[152,39],[148,39],[[]],[[]],[153,[[139,[[138,[127]]]]]],[[140,153],[[139,[[138,[127]]]]]],[[],[[139,[[138,[127]]]]]],[[],[[139,[[138,[127]]]]]],[140,[[139,[[138,[127]]]]]],[[62,154,32],[[139,[[138,[127]]]]]],[[140,62,154,32],[[139,[[138,[127]]]]]],[29,[[139,[[138,[127]]]]]],[[140,29],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[140,62],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[140,62],[[139,[[138,[127]]]]]],[134,[[139,[[138,[127]]]]]],[[140,134],[[139,[[138,[127]]]]]],[[62,61],[[139,[[138,[127]]]]]],[[140,62,61],[[139,[[138,[127]]]]]],[61,[[139,[[138,[127]]]]]],[[140,61],[[139,[[138,[127]]]]]],[[62,61],[[139,[[138,[127]]]]]],[[140,62,61],[[139,[[138,[127]]]]]],[[62,155],[[139,[[138,[127]]]]]],[[140,62,155],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[],[[139,[[138,[127]]]]]],[140,[[139,[[138,[127]]]]]],[[62,156,29],[[139,[[138,[127]]]]]],[[140,62,156,29],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[62,156],[[139,[[138,[127]]]]]],[[140,62,156],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[],[[139,[[138,[127]]]]]],[140,[[139,[[138,[127]]]]]],[[],[[139,[[138,[127]]]]]],[140,[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[140,62],[[139,[[138,[127]]]]]],[[62,154,61],[[139,[[138,[127]]]]]],[[140,62,154,61],[[139,[[138,[127]]]]]],[[62,29],[[139,[[138,[127]]]]]],[[140,62,29],[[139,[[138,[127]]]]]],[[]],[[]],[[]],[[]],[[]],[[],[[31,[89]]]],0,[[],140],[60,63],[[],96],0,0,0,[78],[78],0,0,[134,[[139,[[138,[127]]]]]],[[140,134],[[139,[[138,[127]]]]]],[12,[[139,[[138,[127]]]]]],[[140,12],[[139,[[138,[127]]]]]],[62,[[139,[[138,[127]]]]]],[[140,62],[[139,[[138,[127]]]]]],0,0,[63,[[139,[[138,[127]]]]]],[[140,63],[[139,[[138,[127]]]]]],[[29,29],[[139,[[138,[127]]]]]],[[140,29,29],[[139,[[138,[127]]]]]],0,[[[3,[137]]],[[139,[[138,[127]]]]]],[[140,[3,[137]]],[[139,[[138,[127]]]]]],[147,[[11,[88]]]],[39,[[11,[88]]]],0,[[96,157],96],0,0,0,0,[[]],[[]],[[],60],[[],60],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],92],[[],92],[[],92],[[],92],[[],92],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[158,158],[159,159],[93,93],[160,160],[161,161],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],158],[[],93],[[],161],[[],[[26,[158]]]],[[],[[26,[159]]]],[[],[[26,[93]]]],[[],[[26,[160]]]],[[],[[26,[161]]]],0,0,0,0,[[83,33],34],[[158,33],34],[[159,33],34],[[93,33],34],[[160,33],34],[[161,33],34],[[]],[[]],[[]],[162,93],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[158,26],[159,26],[93,26],[160,26],[161,26],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],92],[[],92],[[],92],[[],92],[[],92],[[],92],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[163,163],[[]],[[163,163],8],[[],8],[[163,33],[[26,[108]]]],[[163,33],[[26,[108]]]],[[]],[[]],[78],[113,127],[[]],[[],60],[[],26],[[],26],[[],92],[[]]],"p":[[3,"Room"],[3,"RoomMember"],[3,"Vec"],[6,"Result"],[3,"RoomInfo"],[15,"u64"],[3,"OwnedRoomAliasId"],[15,"bool"],[4,"MinimalStateEvent"],[3,"OriginalMinimalStateEvent"],[4,"Option"],[3,"MxcUri"],[3,"OwnedMxcUri"],[3,"RoomAliasId"],[3,"BaseClient"],[4,"RoomType"],[4,"DisplayName"],[3,"Session"],[3,"SessionMeta"],[3,"SessionTokens"],[8,"Clone"],[8,"StateEventContent"],[8,"RedactContent"],[3,"RedactedMinimalStateEvent"],[3,"RoomCreateEventContent"],[4,"Result"],[3,"OwnedUserId"],[3,"HashSet"],[15,"str"],[3,"RoomEncryptionEventContent"],[3,"Arc"],[3,"EventId"],[3,"Formatter"],[6,"Result"],[4,"Error"],[8,"Debug"],[4,"CryptoStoreError"],[4,"OlmError"],[4,"StoreError"],[4,"MegolmError"],[3,"Response"],[6,"StrippedRoomNameEvent"],[3,"RoomNameEventContent"],[4,"SyncStateEvent"],[6,"StrippedRoomCreateEvent"],[6,"StrippedRoomAvatarEvent"],[3,"RoomAvatarEventContent"],[6,"StrippedRoomHistoryVisibilityEvent"],[3,"RoomHistoryVisibilityEventContent"],[6,"StrippedRoomGuestAccessEvent"],[3,"RoomGuestAccessEventContent"],[6,"StrippedRoomJoinRulesEvent"],[3,"RoomJoinRulesEventContent"],[6,"StrippedRoomCanonicalAliasEvent"],[3,"RoomCanonicalAliasEventContent"],[6,"StrippedRoomTopicEvent"],[3,"RoomTopicEventContent"],[6,"StrippedRoomTombstoneEvent"],[3,"RoomTombstoneEventContent"],[3,"String"],[3,"UserId"],[3,"RoomId"],[3,"StateChanges"],[3,"PushConditionRoomCtx"],[6,"Result"],[3,"Ruleset"],[4,"GuestAccess"],[3,"OriginalSyncRoomRedactionEvent"],[4,"AnySyncStateEvent"],[4,"AnyStrippedStateEvent"],[4,"HistoryVisibility"],[4,"JoinRule"],[15,"i64"],[6,"MinimalRoomMemberEvent"],[4,"MembershipState"],[3,"RoomMemberEventContent"],[3,"OlmMachine"],[3,"Demand"],[3,"Response"],[3,"Response"],[3,"MembersResponse"],[3,"Response"],[3,"SyncResponse"],[4,"RoomVersionId"],[4,"RoomType"],[3,"ReadOnlyMutable"],[3,"ToDeviceRequest"],[8,"Error"],[8,"StateStore"],[3,"RwLock"],[6,"Tags"],[3,"TypeId"],[3,"UnreadNotificationsCount"],[3,"RoomSummary"],[3,"Response"],[3,"StoreConfig"],[4,"VerificationState"],[4,"AlgorithmInfo"],[3,"EncryptionInfo"],[3,"SyncTimelineEvent"],[3,"TimelineEvent"],[3,"AmbiguityChange"],[3,"AmbiguityChanges"],[4,"MemberEvent"],[4,"RawMemberEvent"],[6,"Result"],[3,"OwnedEventId"],[3,"Error"],[4,"AnySyncTimelineEvent"],[3,"Raw"],[3,"MilliSecondsSinceUnixEpoch"],[3,"JoinHandle"],[3,"Duration"],[15,"u128"],[15,"f32"],[15,"f64"],[15,"u32"],[4,"Ordering"],[3,"TryFromFloatSecsError"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[15,"never"],[3,"RwLockMappedWriteGuard"],[8,"Future"],[3,"MappedMutexGuard"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[4,"MediaFormat"],[3,"MediaThumbnailSize"],[3,"MediaRequest"],[4,"MediaSource"],[4,"AnyGlobalAccountDataEvent"],[15,"u8"],[3,"Box"],[3,"Pin"],[3,"MemoryStore"],[3,"Notification"],[3,"PresenceEvent"],[3,"ReceiptEventContent"],[4,"AnyRoomAccountDataEvent"],[6,"StrippedRoomMemberEvent"],[8,"IntoCryptoStore"],[4,"StoreEncryptionError"],[3,"Error"],[3,"Error"],[3,"Error"],[3,"Utf8Error"],[4,"Error"],[4,"GlobalAccountDataEventType"],[4,"ReceiptType"],[4,"RoomAccountDataEventType"],[4,"StateEventType"],[8,"IntoStateStore"],[3,"Rooms"],[3,"JoinedRoom"],[3,"LeftRoom"],[3,"Timeline"],[3,"UnreadNotificationsCount"],[3,"ElapsedError"],[13,"MegolmV1AesSha2"],[8,"MediaEventContent"],[8,"UniqueKey"],[8,"StateStoreExt"]]},\
"matrix_sdk_common":{"doc":"Common types that are used in the different matrix-sdk …","t":[8,8,8,0,0,2,0,0,4,3,13,3,3,13,13,13,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,5,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["AsyncTraitDeps","SendOutsideWasm","SyncOutsideWasm","deserialized_responses","executor","instant","locks","timeout","AlgorithmInfo","EncryptionInfo","MegolmV1AesSha2","SyncTimelineEvent","TimelineEvent","Trusted","UnknownDevice","Untrusted","VerificationState","algorithm_info","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","encryption_info","encryption_info","event","event","event_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","sender","sender_device","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verification_state","vzip","vzip","vzip","vzip","vzip","curve25519_key","sender_claimed_keys","spawn","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","blocking_lock","blocking_lock_owned","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","downgrade","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut","get_mut","into","into","into","into","into","into_inner","into_inner","into_mapped","lock","lock_owned","map","map","map","mutex","new","new","read","read_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","ElapsedError","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","into","provide","timeout","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":["matrix_sdk_common","","","","","","","","matrix_sdk_common::deserialized_responses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_common::deserialized_responses::AlgorithmInfo","","matrix_sdk_common::executor","matrix_sdk_common::locks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_common::timeout","","","","","","","","","","","","","","","","","",""],"d":["Super trait that is used for our store traits, this trait …","Alias for <code>Send</code> on non-wasm, empty trait (implemented by …","Alias for <code>Sync</code> on non-wasm, empty trait (implemented by …","","Abstraction over an executor so we can spawn tasks under …","","","","The algorithm specific information of a decrypted event.","Struct containing information on how an event was …","The info if the event was encrypted using …","A customized version of a room event coming from a sync …","","The device is trusted.","The device is not known to us.","The device is not trusted.","The verification state of the device that sent an event to …","Information about the algorithm that was used to encrypt …","","","","","","","","","","","","","","","","","","","","","","","","","The encryption info about the event. Will be <code>None</code> if the …","The encryption info about the event. Will be <code>None</code> if the …","The actual event.","The actual event.","Get the event id of this <code>SyncTimelineEvent</code> if the event …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The user ID of the event sender, note this is untrusted …","The device ID of the device that sent us the event, note …","","","","","","","","","","","","","","","","","","","","","","","","","The verification state of the device that sent us the …","","","","","","The curve25519 key of the device that created the megolm …","The signing keys that have created the megolm key that was …","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code>.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Error type notifying that a timeout has elapsed.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Wait for <code>future</code> to be completed. <code>future</code> needs to return a …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,1,0,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,4,5,4,5,4,1,2,3,4,5,1,2,3,4,4,4,5,1,2,3,4,5,3,3,1,2,3,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,3,1,2,3,4,5,36,36,0,0,0,0,0,0,15,15,19,19,15,16,20,21,19,15,16,20,21,19,15,19,16,20,21,16,21,21,16,20,21,15,16,16,20,20,21,21,19,15,15,15,16,20,21,19,19,19,15,19,15,16,20,21,19,15,19,21,15,15,16,20,21,16,15,19,19,19,16,20,21,15,16,20,21,19,15,16,20,21,19,15,15,16,20,21,19,19,19,19,15,16,20,21,19,15,16,20,21,19,19,19,19,0,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[],[[6,[1]]]],[[],[[6,[2]]]],[[],[[6,[3]]]],[[],[[6,[4]]]],0,0,0,0,[4,[[8,[7]]]],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[]],[[]],[[]],[[[12,[11]]],4],[5,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,6],[2,6],[3,6],[4,6],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],0,0,[[],14],0,0,0,0,0,[15,16],[[[17,[15]]],18],[19,20],[19,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],19],[16],[20],[21],[16],[21],[21,20],[16],[20],[21],[[15,9],[[6,[22]]]],[[16,9],[[6,[22]]]],[[16,9],[[6,[22]]]],[[20,9],[[6,[22]]]],[[20,9],[[6,[22]]]],[[21,9],[[6,[22]]]],[[21,9],[[6,[22]]]],[[19,9],[[6,[22]]]],[[]],[23],[[],15],[[]],[[]],[[]],[23],[[]],[[],19],[15],[19],[[]],[[]],[[]],[[]],[[]],[15],[19],[21,24],[15,25],[[[17,[15]]],25],[16,26],[20,20],[21,24],[16,15],[[],15],[[],19],[19,25],[[[17,[19]]],25],[[],27],[[],27],[[],27],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[15,[[6,[16,28]]]],[[[17,[15]]],[[6,[18,28]]]],[16,[[6,[26,16]]]],[20,[[6,[20,20]]]],[21,[[6,[24,21]]]],[19,[[6,[20,28]]]],[[[17,[19]]],[[6,[29,28]]]],[19,[[6,[21,28]]]],[[[17,[19]]],[[6,[30,28]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[31,19],[19,25],[[[17,[19]]],25],0,[[]],[[]],[32,32],[[]],[[32,32],33],[[],33],[[32,9],10],[[32,9],10],[[]],[[]],[34],[35,[[6,[32]]]],[[]],[[],27],[[],6],[[],6],[[],13],[[]]],"p":[[4,"VerificationState"],[4,"AlgorithmInfo"],[3,"EncryptionInfo"],[3,"SyncTimelineEvent"],[3,"TimelineEvent"],[4,"Result"],[3,"OwnedEventId"],[4,"Option"],[3,"Formatter"],[6,"Result"],[4,"AnySyncTimelineEvent"],[3,"Raw"],[3,"TypeId"],[3,"JoinHandle"],[3,"Mutex"],[3,"MutexGuard"],[3,"Arc"],[3,"OwnedMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Error"],[15,"never"],[3,"RwLockMappedWriteGuard"],[8,"Future"],[3,"MappedMutexGuard"],[3,"String"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[15,"u32"],[3,"ElapsedError"],[15,"bool"],[3,"Demand"],[3,"Duration"],[13,"MegolmV1AesSha2"]]},\
"matrix_sdk_crypto":{"doc":"A no-network-IO implementation of a state machine that …","t":[3,13,3,3,3,13,3,13,13,13,13,13,13,2,3,2,13,13,13,13,13,4,3,13,13,13,13,3,3,3,4,13,13,13,3,13,13,2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,2,13,2,4,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,2,2,2,13,13,3,13,3,4,3,3,3,4,3,13,13,13,13,3,2,3,4,13,4,13,2,4,13,13,4,13,13,4,13,13,13,13,13,13,2,2,13,13,13,13,13,2,3,13,4,3,4,13,3,4,13,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,2,12,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,0,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,3,13,3,3,3,3,18,13,3,3,3,3,3,3,3,3,3,3,4,4,3,3,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,11,11,12,11,11,11,12,12,12,12,12,12,11,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,3,13,13,13,13,3,13,13,3,4,4,13,13,3,13,13,13,13,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,13,13,3,3,3,8,4,3,3,13,3,8,13,18,13,13,3,13,13,3,6,3,4,4,13,13,13,3,13,3,13,13,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,10,11,10,11,10,11,10,11,11,11,10,11,11,12,11,11,10,11,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,11,10,11,10,11,10,11,11,12,12,11,11,11,12,12,12,11,12,11,11,12,12,12,12,10,11,10,11,10,11,11,10,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,3,13,13,13,4,3,13,13,13,3,13,4,13,13,4,4,3,3,13,4,3,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,18,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,0,11,11,11,11,11,11,11,0,0,0,0,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,6,13,13,3,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,6,3,6,6,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,0,12,11,11,11,12,11,12,11,11,11,11,12,11,6,6,13,3,13,3,3,4,4,13,13,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,6,4,6,13,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,3,13,4,3,6,4,13,3,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,4,4,4,13,13,13,13,4,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AcceptSettings","Accepted","AcceptedProtocols","AttachmentDecryptor","AttachmentEncryptor","BlackListed","CancelInfo","Cancelled","Cancelled","Cancelled","Confirmed","Confirmed","Created","CrossSigningKeyExport","CrossSigningStatus","CryptoStoreError","Decode","Decode","Decode","Decryption","Decryption","DecryptorError","Device","DeviceMissingCurveKey","Done","Done","Done","Emoji","EmojiShortAuthString","EncryptionSettings","EventError","EventError","EventError","FlowIdMismatch","GossipRequest","Ignored","InboundCreation","IncomingResponse","InvalidCurveKey","InvalidHeaders","InvalidJson","InvalidKey","InvalidKeyId","InvalidMac","InvalidSignature","InvalidSignature","InvalidUtf8","Io","Json","JsonError","JsonError","JsonError","KeyExportError","KeyMismatch","KeyNonceLength","KeyRequest","KeysBackupRequest","KeysExchanged","KeysQueryRequest","LocalTrust","MasterPubkey","MediaEncryptionInfo","MegolmError","MismatchedIdentityKeys","MismatchedKeys","MismatchedRoom","MismatchedSender","MissingCiphertext","MissingCrossSigningIdentity","MissingDeviceKeys","MissingHash","MissingRoomKey","MissingSenderKey","MissingSession","MissingSigningKey","MissingSigningKey","NoSignatureFound","NotAnObject","NotAnObject","OlmError","OlmMachine","OneTimeKeyMissing","OneTimeKeyNotSigned","OneTimeKeyUnknown","Other","Other","OutgoingRequest","OutgoingRequests","OutgoingVerificationRequest","Own","Own","OwnUserIdentity","QrV1","QrVerification","QrVerificationState","ReadOnlyAccount","ReadOnlyDevice","ReadOnlyOwnUserIdentity","ReadOnlyUserIdentities","ReadOnlyUserIdentity","Ready","Reciprocated","ReplayedMessage","Requested","RoomKeyImportResult","RoomMessageRequest","Sas","SasState","SasV1","ScanError","Scanned","SecretImportError","SecretInfo","SecretRequest","SessionCreation","SessionCreationError","SessionExport","SessionWedged","SignatureError","SigningKeyChanged","Started","Started","Store","Store","Store","ToDeviceRequest","TrackedUser","UnknownVersion","Unset","UnsupportedAlgorithm","UnsupportedAlgorithm","UnsupportedVersion","UploadSigningKeysRequest","UserDevices","UserIdMismatch","UserIdentities","UserIdentity","Verification","VerificationError","VerificationRequest","VerificationRequestState","Verified","accept","accept","accept_with_methods","accept_with_settings","algorithm","algorithms","as_ref","bootstrap_cross_signing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_presented","cancel","cancel","cancel","cancel_code","cancel_info","cancel_info","cancel_info","cancel_with_code","cancel_with_code","cancelled_by_us","changes","changes","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirm","confirm_scanning","cross_signing_status","curve25519_key","decimals","decrypt_room_event","decrypt_room_key_export","default","default","deref","deref","deref","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","device_id","device_id","device_id","devices","display_name","display_name","ed25519_key","emoji","emoji_index","emojis","encrypt_room_event","encrypt_room_event_raw","encrypt_room_key_export","encrypt_room_key_for_forwarding","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","export_cross_signing_keys","export_room_keys","finish","flow_id","flow_id","flow_id","flow_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_emojis","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_account","generate_qr_code","get","get_device","get_first_key","get_identity","get_key","get_key","get_missing_sessions","get_user_devices","get_verification","get_verification_request","get_verification_requests","has_been_accepted","has_been_confirmed","has_been_scanned","has_master","has_self_signing","has_user_signing","hash","hashes","have_we_confirmed","history_visibility","identity_keys","identity_keys","import_cross_signing_keys","import_room_keys","imported_count","indices","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invalidate_group_session","is_any_verified","is_blacklisted","is_cancelled","is_cancelled","is_cancelled","is_cancelled","is_cross_signing_trusted","is_deleted","is_done","is_done","is_done","is_done","is_locally_trusted","is_our_own_device","is_owner_of_session","is_passive","is_ready","is_self_verification","is_self_verification","is_self_verification","is_self_verification","is_verified","is_verified","is_verified","iv","key","key_agreement_protocol","keys","keys","keys","keys","local_trust_state","mark_as_verified","mark_request_as_sent","master_key","master_key","master_key","matrix_sdk_qrcode","message_auth_code","new","new","new","new","olm","olm_session_config","only_allow_trusted_devices","other","other","other_device","other_device_id","other_device_id","other_device_id","other_user","other_user","other_user_id","other_user_id","our_supported_methods","outgoing_requests","own","own","own_user_id","partial_cmp","provide","provide","provide","provide","provide","provide","provide","provide","qr_v1","read","read","reason","receive_sync_changes","receive_unencrypted_verification_event","receive_verification_event","reciprocate","reciprocated","request","request_id","request_recipient","request_room_key","request_verification","request_verification","request_verification","request_verification_with_methods","request_verification_with_methods","requests","room_id","room_id","room_id","rotation_period","rotation_period_msgs","sas_v1","scan_qr_code","self_signing_key","self_signing_key","self_signing_key","sent_out","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_local_trust","share_room_key","short_auth_string","sign","signatures","signatures","source","source","source","source","source","source","source","start_sas","start_verification","started_from_request","state","state","state","store","supports_emoji","supports_olm","symbol","their_supported_methods","timed_out","timed_out","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_qr_code","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_count","tracked_users","trusts_our_own_device","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update_tracked_users","usage","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_signing_key","user_signing_key","verification_request_content","verify","verify","verify","version","vodozemac","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","we_started","we_started","we_started","with_allowed_methods","with_store","device_curve25519","device_ed25519","key_curve25519","key_ed25519","verified_devices","verified_identities","accepted_protocols","decimals","emojis","protocols","verified_devices","verified_identities","expected","expected","found","found","error","one_time_key","signing_key","other_device_id","other_device_id","our_methods","our_methods","their_methods","their_methods","Algorithm","Algorithm","CrossSigningStatus","Curve25519PublicKey","Decode","EncryptionSettings","ExportedRoomKey","IdentityKeys","InboundGroupSession","LENGTH","MissingEd25519Key","OlmMessageHash","OutboundGroupSession","PickledAccount","PickledCrossSigningIdentity","PickledInboundGroupSession","PickledOutboundGroupSession","PickledSession","PrivateCrossSigningIdentity","ReadOnlyAccount","Session","SessionCreationError","SessionExportError","SessionKey","ShareInfo","algorithm","algorithm","algorithm","algorithm","algorithm","as_bytes","backed_up","backed_up","bootstrap_cross_signing","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_sign_devices","can_sign_users","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","create_group_session_pair","create_inbound_session","create_outbound_session","create_outbound_session_helper","created_using_fallback_key","created_using_fallback_key","creation_time","creation_time","creation_time","curve25519","decode","decrypt","decrypt","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","device_id","device_id","device_id","device_keys","drop","ed25519","empty","encrypt","encrypt","eq","eq","eq","eq","eq","equivalent","equivalent","expired","export","export_at_index","export_secret","first_known_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forwarding_curve25519_key_chain","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_base64","from_bytes","from_bytes","from_export","from_pickle","from_pickle","from_pickle","from_pickle","from_pickle","from_slice","generate_one_time_keys","generate_one_time_keys_helper","has_been_imported","has_master","has_master_key","has_self_signing","has_user_signing","hash","hash","history_visibility","history_visibility","identity_keys","identity_keys","import_secrets_unchecked","imported","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidate_session","invalidated","invalidated","is_empty","keys","keys_for_upload","last_use_time","last_use_time","mark_as_backed_up","mark_as_shared","mark_as_shared","mark_as_shared","mark_keys_as_published","mark_request_as_sent","master_key_id","master_public_key","max_one_time_keys","message_count","message_index","message_index","new","new","new","new","one_time_keys","only_allow_trusted_devices","our_identity_keys","pickle","pickle","pickle","pickle","pickle","pickle","pickle","pickle","pickle","provide","provide","requests","reset_backup_state","room_id","room_id","room_id","room_id","room_id","room_id","rotation_period","rotation_period_msgs","self_signing_public_key","sender_claimed_keys","sender_key","sender_key","sender_key","sender_key","sender_key","sender_key","sender_key","sender_key","sender_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session_config","session_id","session_id","session_id","session_id","session_id","session_id","session_key","session_key","settings","settings","shared","shared","shared","shared","shared","shared","shared_with_set","sign","sign_cross_signing_key","sign_json","sign_master_key","signed_fallback_keys","signed_one_time_keys","signing_key","signing_key_id","signing_keys","signing_keys","source","status","to_base64","to_base64","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsigned_device_keys","update_uploaded_key_count","uploaded_key_count","uploaded_signed_key_count","user_id","user_id","user_id","user_id","user_id","user_id","user_signing_public_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","InRoom","IncomingResponse","KeysBackup","KeysBackup","KeysBackupRequest","KeysClaim","KeysClaim","KeysQuery","KeysQuery","KeysQueryRequest","KeysUpload","KeysUpload","OutgoingRequest","OutgoingRequests","OutgoingVerificationRequest","RoomMessage","RoomMessage","RoomMessageRequest","SignatureUpload","SignatureUpload","SigningKeysUpload","ToDevice","ToDevice","ToDeviceRequest","ToDeviceRequest","UploadSigningKeysRequest","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","content","deserialize","device_keys","event_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","master_key","message_count","messages","request","request_id","request_id","room_id","rooms","self_signing_key","serialize","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_id","txn_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_signing_key","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccountUnset","Backend","BackupKeys","Changes","CrossSigningKeyExport","CryptoStore","CryptoStoreError","DeviceChanges","GossipRequest","IdentifierValidation","IdentityChanges","IntoCryptoStore","Io","KEY_SIZE","Key","KeyRequest","MemoryStore","MismatchedPublicKeys","Pickle","RecoveryKey","Result","RoomKeyCounts","SecretImportError","SecretInfo","SecretRequest","Serialization","SessionCreation","Store","Store","TrackedUser","UnpicklingError","UnsupportedDatabaseVersion","account","account","as_key","backed_up","backend","backup_version","backup_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caches","changed","changed","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_group_session","default","default","default","default","default","default","delete_outgoing_secret_requests","delete_outgoing_secret_requests","deleted","deref","deserialize","deserialize","deserialize","deserialize","device_display_name","device_id","devices","dirty","drop","drop","eq","export_secret","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_device","get_device","get_device","get_device_from_curve_key","get_identity","get_inbound_group_session","get_inbound_group_session","get_inbound_group_sessions","get_inbound_group_sessions","get_outbound_group_sessions","get_outbound_group_sessions","get_outgoing_secret_requests","get_outgoing_secret_requests","get_readonly_device","get_readonly_devices_filtered","get_readonly_devices_unfiltered","get_secret_request_by_info","get_secret_request_by_info","get_sessions","get_sessions","get_unsent_secret_requests","get_unsent_secret_requests","get_user_devices","get_user_devices","get_user_devices","get_user_devices_filtered","get_user_identity","get_user_identity","has_users_for_key_query","identities","import_cross_signing_keys","import_secret","inbound_group_session_counts","inbound_group_session_counts","inbound_group_sessions","inbound_group_sessions_for_backup","inbound_group_sessions_for_backup","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_crypto_store","is_empty","is_message_known","is_message_known","is_user_tracked","key_requests","load_account","load_account","load_backup_keys","load_backup_keys","load_identity","load_identity","load_tracked_users","load_tracked_users","mark_user_as_changed","master_key","message_hashes","new","new","new","new","new","outbound_group_sessions","private_identity","private_identity","provide","provide","recovery_key","recovery_key","request_id","request_recipient","reset_backup_state","reset_backup_state","save_account","save_account","save_changes","save_changes","save_sessions","save_tracked_users","save_tracked_users","save_tracked_users","self_signing_key","sent_out","serialize","serialize","serialize","serialize","sessions","source","source","to_base64","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total","tracked_users","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_signing_key","users_for_key_query","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize","DeviceStore","GroupSessionStore","SessionStore","add","add","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","default","default","default","fmt","fmt","fmt","from","from","from","get","get","get","get_all","into","into","into","new","new","new","remove","set_for_sender","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_devices","vzip","vzip","vzip","CrossSigningKey","Curve25519","DeviceKey","DeviceKeys","Ed25519","Ed25519","Ed25519","EventEncryptionAlgorithm","InvalidSignature","Key","MegolmBackupV1Curve25519AesSha2","MegolmV1AesSha2","MegolmV1AuthData","OlmV1Curve25519AesSha2","OneTimeKey","Other","Other","RoomKeyBackupInfo","Signature","Signatures","SignedKey","SignedKey","SigningKey","SigningKeys","Unknown","Unknown","Unknown","UnsignedDeviceInfo","add_signature","algorithms","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","curve25519_key","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_display_name","device_id","ed25519","ed25519","ed25519_key","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","fallback","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_parts","get","get","get_first_key_and_id","get_key","get_signature","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_raw","is_empty","is_empty","is_empty","iter","key","keys","keys","new","new","new","new","new","new","new_fallback","partial_cmp","public_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature_count","signatures","signatures","signatures","signatures","signatures_mut","source","to_base64","to_base64","to_base64","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsigned","usage","user_id","user_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","algorithm","auth_data","Custom","Dummy","EVENT_TYPE","EventType","ForwardedRoomKey","KeyVerificationAccept","KeyVerificationCancel","KeyVerificationDone","KeyVerificationKey","KeyVerificationMac","KeyVerificationReady","KeyVerificationRequest","KeyVerificationStart","RoomEncrypted","RoomKey","RoomKeyRequest","SecretRequest","SecretSend","ToDeviceCustomEvent","ToDeviceEvent","ToDeviceEvents","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_into","content","content","deserialize","deserialize","deserialize","event_type","event_type","event_type","fmt","fmt","fmt","forwarded_room_key","from","from","from","into","into","into","new","olm_v1","room","room_key","room_key_request","secret_send","sender","sender","sender","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ForwardedMegolmV1AesSha2Content","ForwardedMegolmV2AesSha2Content","ForwardedRoomKeyContent","ForwardedRoomKeyEvent","MegolmV1AesSha2","Unknown","UnknownRoomKeyContent","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claimed_ed25519_key","claimed_sender_key","claimed_sender_key","claimed_signing_keys","clone","clone_into","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","forwarding_curve25519_key_chain","from","from","from","from","into","into","into","into","room_id","room_id","serialize","serialize","serialize","serialize","session_id","session_id","session_key","session_key","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnyDecryptedOlmEvent","Custom","DecryptedForwardedRoomKeyEvent","DecryptedOlmV1Event","DecryptedRoomKeyEvent","DecryptedSecretSendEvent","ForwardedRoomKey","OlmV1Keys","RoomKey","SecretSend","ToDeviceCustomEvent","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","deserialize","deserialize","deserialize","deserialize","ed25519","event_type","event_type","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","keys","keys","keys","recipient","recipient","recipient","recipient_keys","recipient_keys","recipient_keys","room_key_info","room_key_info","sender","sender","sender","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Event","borrow","borrow_mut","content","deserialize","encrypted","event_id","fmt","from","into","origin_server_ts","room_key_info","sender","serialize","try_from","try_into","type_id","unsigned","vzip","EncryptedEvent","EncryptedToDeviceEvent","MegolmV1AesSha2","MegolmV1AesSha2Content","OlmV1Curve25519AesSha2","OlmV1Curve25519AesSha2Content","RoomEncryptedEventContent","RoomEventEncryptionScheme","ToDeviceEncryptedEventContent","Unknown","Unknown","UnknownEncryptedContent","algorithm","algorithm","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","ciphertext","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","recipient_key","relates_to","room_key_info","scheme","sender_key","sender_key","serialize","serialize","serialize","serialize","serialize","serialize","session_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","MegolmV1AesSha2","MegolmV1AesSha2Content","MegolmV2AesSha2Content","RoomKeyContent","RoomKeyEvent","Unknown","UnknownRoomKey","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","new","room_id","serialize","serialize","serialize","session_id","session_key","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Action","Cancellation","MegolmV1AesSha2","MegolmV1AesSha2","MegolmV1AesSha2Content","Request","RequestedKeyInfo","RoomKeyRequestContent","RoomKeyRequestEvent","SupportedKeyInfo","Unknown","UnknownRoomKeyRequest","action","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","new_request","request_id","requesting_device_id","room_id","room_id","sender_key","serialize","serialize","serialize","serialize","serialize","serialize","session_id","session_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","SecretSendContent","SecretSendEvent","borrow","borrow_mut","deserialize","drop","fmt","from","into","new","request_id","secret","secret_name","serialize","try_from","try_into","type_id","vzip","zeroize","Base64","Base64","Base64","Base64","Base64Error","DecodeError","Decryption","Decryption","InvalidKey","InvalidKeyLength","InvalidMAC","InvalidMAC","InvalidMACLength","InvalidMACLength","InvalidMacLength","InvalidPadding","InvalidPadding","InvalidVersion","KeyError","MegolmDecryptionError","MessageTooShort","MessageType","MismatchedIdentityKey","MissingMessageKey","MissingOneTimeKey","MissingVersion","NonContributoryKey","OlmDecryptionError","OlmSessionCreationError","PickleError","ProtoBufError","PublicKey","Read","Serialization","SessionKeyDecodeError","Signature","Signature","Signature","Signature","Signature","SignatureError","TooBigMessageGap","UnknownMessageIndex","Version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","provide","provide","provide","provide","provide","provide","provide","provide","source","source","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["matrix_sdk_cryptomatrix_sdk_crypto::MegolmError","","","","matrix_sdk_crypto::QrVerificationState","","matrix_sdk_crypto::SasState","","","","","","matrix_sdk_crypto::ScanError","","","","matrix_sdk_crypto::SessionCreationError","","","matrix_sdk_crypto::VerificationRequestState","","","","","","matrix_sdk_crypto::olmmatrix_sdk_crypto::requestsmatrix_sdk_crypto::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::store::caches","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::typesmatrix_sdk_crypto::types::RoomKeyBackupInfo","","matrix_sdk_crypto::types::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::forwarded_room_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::olm_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::room","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::room::encrypted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::room_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::room_key_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::types::events::secret_send","","","","","","","","","","","","","","","","","","","matrix_sdk_crypto::vodozemac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Customize the accept-reply for a verification process","The verification has been accepted and both sides agreed …","Struct containing the protocols that were agreed to be …","A wrapper that transparently encrypts anything that …","A wrapper that transparently encrypts anything that …","The device been blacklisted from communicating.","Information about the cancellation of a verification …","The verification process has been cancelled.","The verification process has been cancelled.","The verification process has been cancelled.","The scanning of the QR code has been confirmed by us.","The verification process has been confirmed from our side, …","The verification request has been newly created by us.","","Struct representing the state of our private cross signing …","","The encrypted megolm message couldn’t be decoded.","Some data in the encrypted attachment coldn’t be …","The key export string isn’t valid base64.","The event could not have been decrypted.","The event could not have been decrypted.","Error type for attachment decryption.","A device represents a E2EE capable client of an user.","The user’s device is missing a curve25519 key.","The verification process has been successfully concluded.","The verification flow that was started with this request …","The verification process has been successfully concluded.","An emoji that is used for interactive verification using a …","The short auth string for the emoji method of SAS …","Settings for an encrypted room.","Error that occurs when decrypting an event that is …","The event that should have been decrypted is malformed.","The event that should have been decrypted is malformed.","The ID uniquely identifying this verification flow didn’…","A struct describing an outgoing key request.","The trust state of the device is being ignored.","Error when creating an Olm Session from an incoming Olm …","","The given curve25519 key is not a valid key.","The key export doesn’t contain valid headers.","Error deserializing the one-time key.","The public key isn’t a valid ed25519 key.","The ID of the signing key isn’t a valid key ID.","The MAC of the encrypted payload is invalid.","The signature could not be decoded.","Failed to verify the one-time key signatures.","The decrypted key export isn’t valid UTF-8.","The key export doesn’t all the required fields.","The decrypted key export doesn’t contain valid JSON.","The received decrypted event couldn’t be deserialized.","The received decrypted event couldn’t be deserialized.","The signed object couldn’t be deserialized.","Error representing a failure during key export or import.","A key mismatch happened during the validation of the QR …","The supplied key or IV has an invalid length.","Info for the <code>m.room_key_request</code> variant","","The public keys have been exchanged and the short auth …","","The local trust state of a device.","Wrapper for a cross signing key marking it as the master …","Struct holding all the information that is needed to …","Error representing a failure during a group encryption …","Decryption failed because of a mismatch between the …","The public key that was part of the message doesn’t …","The room ID of the room key doesn’t match the room ID of …","The sender of the plaintext doesn’t match the sender of …","The Encrypted message doesn’t contain a ciphertext for …","One of the users that is participating in this …","The device of the user that is participating in this …","A hash is missing from the encryption info.","Decryption failed because we’re missing the room key …","The Encrypted message is missing the sender key.","Encryption failed because the device does not have a valid …","The Encrypted message is missing the signing key of the …","The signing key that should create or check a signature is …","The provided JSON value that was signed and the signature …","The provided JSON value isn’t an object.","The provided JSON value that was signed and the signature …","Error representing a failure during a device to device …","State machine implementation of the Olm/Megolm encryption …","The signed one-time key is missing.","The requested one-time key isn’t a signed curve key.","The one-time key algorithm is unsupported.","An identity belonging to another user.","Identities of other users.","","","","Our own user identity.","Our own user identity.","Struct representing a cross signing identity of a user.","The <code>m.qr_code.*.v1</code> verification variant.","An object controlling QR code style key verification flows.","An Enum describing the state the QrCode verification is in.","Account holding identity keys for which sessions can be …","A read-only version of a <code>Device</code>.","Struct representing a cross signing identity of our own …","Enum over the different user identity types we can have.","Struct representing a cross signing identity of a user.","The verification request is ready to start a verification …","We have successfully scanned the QR code and are able to …","An Olm message got replayed while the Olm ratchet has …","The verification request was received from the other party.","Return type for the room key importing.","","Short authentication string object.","An Enum describing the state the SAS verification is in.","The <code>m.sas.v1</code> verification variant.","An error for the different failure modes that can happen …","The QR verification has been scanned by the other side.","","An enum over the various secret request types we can have.","Info for the <code>m.secret.request</code> variant","The received room key couldn’t be converted into a valid …","Error that occurs when a room key can’t be converted …","The room key that should be exported can’t be converted …","The session with a device has become corrupted.","Error type describing different errors that happen when we …","The signing key that used to sign the object has been …","The QR verification has been started.","The verification has been started, the protocols that …","The storage layer returned an error.","The storage layer returned an error.","An IO error inside the crypto store happened during the …","","","The supplied data was encrypted with an unknown version of …","The trust state is unset.","The Encrypted message has been encrypted with a …","The signature was made using an unsupported algorithm.","The key export has been encrypted with an unsupported …","","A read only view over all devices belonging to a user.","The user id of signing key differs from the user id that …","Enum over the different user identity types we can have.","Struct representing a cross signing identity of a user.","An enum over the different verification types the SDK …","The signature couldn’t be verified.","An object controlling key verification requests.","An Enum describing the state the verification request is …","The device has been verified and is trusted.","Accept the verification request.","Accept the SAS verification.","Accept the verification request signaling that our client …","Accept the SAS verification customizing the accept method.","The encryption algorithm that should be used in the room.","Get the list of algorithms this device supports.","","Create a new cross signing identity and get the upload …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Are we in a state where we can show the short auth string.","Cancel the verification flow.","Cancel the verification request","Cancel the verification.","Get the <code>CancelCode</code> that cancelled this verification.","Get info about the cancellation if the verification flow …","Get info about the cancellation if the verification …","Get info about the cancellation if the verification flow …","Cancel the verification.","Cancel the verification.","Was the verification cancelled by us?","Listen for changes in the QrCode verification process.","Listen for changes in the verification request.","Listen for changes in the SAS verification process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirm the Sas verification.","Confirm that the other side has scanned our QR code.","Get the status of the private cross signing keys.","Get the Curve25519 key of the given device.","Get the decimal version of the short auth string.","Decrypt an event from a room timeline.","Try to decrypt a reader into a list of exported room keys.","","All methods are allowed","","","","The description of the emoji, for example ‘Dog’.","","","","","","","","The unique ID of the device.","The unique device ID that identifies this <code>OlmMachine</code>.","Get our own device ID.","The device_id of this entry","Iterator over all the devices of the user devices.","Get the human readable name of the device.","Get the display name of our own device","Get the Ed25519 key of the given device.","Get the emoji version of the short auth string.","Get the index of the emoji representing the short auth …","A list of seven emojis that should be used for the SAS …","Encrypt a room message for the given room.","Encrypt a json <code>Value</code> content for the given room.","Encrypt the list of exported room keys using the given …","Encrypt the given inbound group session as a forwarded …","","","","","","","","","","","","","","Export all the private cross signing keys we have.","Export the keys that match the given predicate.","Consume the encryptor and get the encryption key.","Get the unique ID that identifies this QR code …","Get the unique ID of this verification request","Get the unique ID that identifies this SAS verification …","Get the ID that uniquely identifies this verification flow.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format the the list of emojis as a two line string.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>ReadOnlyDevice</code> from an <code>Account</code>","Generate a QR code that can be used by another client to …","Get the specific device with the given device ID.","Get a specific device of a user.","Get the first available master key.","Get the cross signing user identity of a user.","Get the key of the given key algorithm belonging to this …","Get the master key with the given key id.","Get the a key claiming request for the user/device pairs …","Get a map holding all the devices of an user.","Get a verification object for the given user id with the …","Get a verification request object with the given flow id.","Get all the verification requests of a given user.","Has the verification been accepted by both parties.","Has the scanning of the QR code been confirmed by us.","Has the QR verification been scanned by the other side.","Do we have the master key.","Do we have the self signing key, this one is necessary to …","Do we have the user signing key, this one is necessary to …","The hash method the device is choosing to use.","The hashes that can be used to check the validity of the …","Have we confirmed that the short auth string matches.","The history visibility of the room when the session was …","Get the public parts of our Olm identity keys.","The associated identity keys","Import our private cross signing keys.","Import the given room keys into our store.","The number of room keys that were imported.","A list of seven indices that should be used for the SAS …","The info of the requested secret.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Invalidate the currently active outbound group session for …","Returns true if there is at least one devices of this user …","Is the device locally marked as blacklisted.","Has the verification flow been cancelled.","Has the verification flow that was started with this …","Is the SAS flow canceled.","Has the verification been cancelled.","Is this device considered to be verified using cross …","Is the device deleted.","Has the verification flow completed.","Has the verification flow that was started with this …","Is the SAS flow done.","Has this verification finished.","Is the device locally marked as trusted.","Is this our own device?","Does the given <code>InboundGroupSession</code> belong to this device?","Has the verification request been answered by another …","Is the verification request ready to start a verification …","Is this a verification that is veryfying one of our own …","Is this a verification that is veryfying one of our own …","Is this a verification that is veryfying one of our own …","Is this a verification verifying a device that belongs to …","Is this device considered to be verified.","Is this user identity verified.","Check if our identity is verified.","The initialization vector that was used to encrypt the …","The web key that was used to encrypt the file.","The key agreement protocol the device is choosing to use.","Get a map containing all the device keys.","Iterator over all the device ids of the user devices.","Get the keys map of containing the master keys.","The map of keys that were imported.","Get the trust state of the device.","Mark our identity as verified.","Mark the request with the given request id as sent.","Get the master key of the identity.","Get the public master key of the identity.","Get the public master key of the identity.","","The message authentication code the device is choosing to …","Wrap the given reader decrypting all the data we read from …","Wrap the given reader encrypting all the data we read from …","Create a new Device, this constructor skips signature …","Create a new memory based OlmMachine.","The crypto specific Olm objects.","Get the optimal <code>SessionConfig</code> for this device.","Should untrusted devices receive the room key, or should …","Destructure the enum into an <code>UserIdentity</code> if it’s of the …","Destructure the enum into an <code>UserIdentity</code> if it’s of the …","Get the device of the other user.","Get the device ID of the other side.","The id of the other device that is participating in this …","Get the device ID of the other side.","The id of the other user that is participating in this …","Get the other user id that is participating in this …","Get the user id of the other user that is participating in …","Get the user id of the other side.","Get our own supported verification methods that we …","Get the outgoing requests that need to be sent out.","Destructure the enum into an <code>OwnUserIdentity</code> if it’s of …","Destructure the enum into an <code>ReadOnlyOwnUserIdentity</code> if it…","Our own user id.","","","","","","","","","","Try to deconstruct this verification enum into a QR code …","","","Get the human readable reason of the cancellation.","Handle a to-device and one-time key counts from a sync …","Receive an unencrypted verification event.","Receive a verification event.","Notify the other side that we have successfully scanned …","Have we successfully scanned the QR code and are able to …","Create an event content that can be sent as a room event …","The unique id of the secret request.","The user we requested the secret from","Request a room key from our devices.","Request an interactive verification with this <code>Device</code>.","Send a verification request to our other devices.","Create a <code>VerificationRequest</code> object after the verification …","Request an interactive verification with this <code>Device</code>.","Send a verification request to our other devices while …","Modules containing customized request types.","Get the room id if the verification is happening inside a …","Get the room id if the verification is happening inside a …","Get the room id if the verification is happening inside a …","How long the session should be used before changing it.","How many messages should be sent before changing the …","Try to deconstruct this verification enum into a SAS …","Start a QR code verification by providing a scanned QR …","Get the self-signing key of the identity.","Get the public self-signing key of the identity.","Get the public self-signing key of the identity.","Has the request been sent out.","","","","","","","","Set the local trust state of the device to the given state.","Get to-device requests to share a room key with users in a …","The SAS methods both devices involved in the verification …","Sign the given message using our device key and if …","Get a map containing all the device signatures.","Get the signatures map of this cross signing key.","","","","","","","","Transition from this verification request into a SAS …","Start a interactive verification with this <code>Device</code>","Did this verification flow start from a verification …","Get the current state the verification process is in.","Get the current state the verification request is in.","Get the current state of the verification process.","Types and traits to implement the storage layer for the …","Does this verification flow support displaying emoji for …","Does this device support any of our known Olm encryption …","The emoji symbol that represents a part of the short auth …","Get the supported verification methods of the other side.","Has the verification flow timed out.","Has the SAS verification flow timed out.","Generate a the raw bytes that should be encoded as a QR …","","","","","","","","","","","","","","","","","","","","","","","","Generate a QR code object that is representing this …","","","","","","","","","The total number of room keys that were found in the …","Get the list of “tracked users”.","Does our user identity trust our own device, i.e. have we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Module containing customized types modeling Matrix keys …","Update the list of tracked users.","Get the list of <code>KeyUsage</code> that is set for this key.","The user id of the device owner.","Get the user id of the master key’s owner.","The unique user id of this identity.","Get the user id of this identity.","Get the user id of this identity.","The unique user id that owns this <code>OlmMachine</code> instance.","Get our own user id.","Get our own user id.","Get our own user id that is participating in this …","The user_id this account belongs to","Get the user-signing key of the identity, this is only …","Get the public user-signing key of the identity.","Send a verification request to the given user.","Manually verify this device.","Mark our user identity as verified.","Manually verify this user.","The version of the encryption scheme.","Re-exported Error types from the vodozemac crate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did we initiate the verification request","Did we initiate the verification request","Did we initiate the verification flow.","Create settings restricting the allowed SAS methods","Create a new OlmMachine with the given <code>CryptoStore</code>.","The Curve25519 identity key of the device sending the room …","The Ed25519 identity key of the device sending the room …","The Curve25519 key recorded in the room key’s to-device …","The Ed25519 key recorded in the room key’s to-device …","The list of devices that has been verified.","The list of user identities that has been verified.","The protocols that were accepted in the …","The list of decimals that represent the short auth string.","The emojis that represent the short auth string, will be …","The protocols that were proposed in the …","The list of devices that has been verified.","The list of user identities that has been verified.","The expected ed25519 key.","The expected verification flow id.","The ed25519 key that we got.","The verification flow id that we instead got.","The exact error describing why the signature verification …","The one-time key that failed the signature verification.","The key that was used to verify the signature.","The device ID of the device that responded to the …","The device ID of the device that responded to the …","The verification methods supported by us.","The verification methods supported by the us.","The verification methods supported by the sender.","The verification methods supported by the other side.","The provided algorithm is not supported.","The provided algorithm is not supported.","Struct representing the state of our private cross signing …","Struct representing a Curve25519 public key.","The room key key couldn’t be decoded.","Settings for an encrypted room.","An exported version of an <code>InboundGroupSession</code>","Struct holding the two public identity keys of an <code>Account</code>.","Inbound group session.","The number of bytes a Curve25519 public key has.","The session export is missing a claimed Ed25519 sender key.","A hash of a successfully decrypted Olm message.","Outbound group session.","A pickled version of an <code>Account</code>.","The pickled version of a <code>PrivateCrossSigningIdentity</code>.","A pickled version of an <code>InboundGroupSession</code>.","A pickled version of an <code>InboundGroupSession</code>.","A pickled version of a <code>Session</code>.","Private cross signing identity.","Account holding identity keys for which sessions can be …","Cryptographic session that enables secure communication …","An error type for the creation of group sessions.","An error type for the export of inbound group sessions.","The session key, can be used to create a …","Struct holding info about the share state of a outbound …","The algorithm that this inbound group session is using to …","Get the <code>EventEncryptionAlgorithm</code> of t his <code>Session</code>.","The algorithm of this inbound group session.","The encryption algorithm that should be used in the room.","The encryption algorithm that the session uses.","View this public key as a byte array.","Has the session been backed up to the server.","Flag remembering if the session has been backed up.","Bootstrap Cross-Signing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Can we sign our own devices, i.e. do we have a self …","Can we sign other users, i.e. do we have a user signing …","","","","","","","","","","","","","","","","","","","","","","","Check if the <code>InboundGroupSession</code> is better than the given …","Create a group session pair.","Create a new session with another account given a pre-key …","Create a new session with another account given a one-time …","Create a new session with another account given a one-time …","Has this been created using the fallback key","Was the session created using a fallback key.","The timestamp when this session was created.","When the session was created","The Unix timestamp when the session was created.","The curve25519 key, used for to establish shared secrets.","","Decrypt an event from a room timeline.","Decrypt the given Olm message.","","","","","","","","","","","","","","","Get the device ID that owns this account.","The device_id of this entry","The device ID of the account owner.","The specific <code>DeviceId</code> associated with this session","Sign the device keys of the account and return them so …","","The ed25519 key, used for signing.","Create a new empty identity.","Encrypt a room message for the given room.","Encrypt the given event content content as an …","","","","","","","","Check if the session has expired and if it should be …","Export this session at the first known message index.","Export this session at the given message index.","Export the seed of the private cross signing key","Get the first message index we know how to decrypt.","","","","","","","","","","","","","","","","","Chain of Curve25519 keys through which this session was …","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize the <code>SessionKey</code> from base64 encoded string.","Instantiate a Curve25519 public key from an unpadded base64","Deserialize the <code>SessionKey</code> from a byte slice.","Create a <code>Curve25519PublicKey</code> from a byte array.","Create a InboundGroupSession from an exported version of …","Restore an account from a previously pickled one.","Restore a Session from a previously pickled string.","Restore a Session from a previously pickled string.","Restore a Session from a previously pickled string.","Restore the private cross signing identity from a pickle.","Try to create a <code>Curve25519PublicKey</code> from a slice of bytes.","Generate new one-time keys that need to be uploaded to the …","Generate count number of one-time keys.","Has the session been imported from a file or server-side …","Do we have the master key.","Do we have the master key.","Do we have the self signing key, this one is necessary to …","Do we have the user signing key, this one is necessary to …","","The hash of the message.","History visibility of the room when the session was …","The history visibility of the room when the session was …","Get the public parts of the identity keys for the account.","The associated identity keys","Import the private parts of the cross signing keys into …","Flag remembering if the session was directly sent to us by …","The OlmSession","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This should be called if an the user wishes to rotate this …","Has the session been invalidated.","Has the session been invalidated.","Is the identity empty.","The pickled signing keys","Get a tuple of device, one-time, and fallback keys that …","When the session was last used","The Unix timestamp when the session was last used.","For testing, allow to manually mark this GroupSession to …","Mark the account as shared.","Mark the session as shared.","Mark the identity as shared.","Mark the current set of one-time keys as being published.","Mark the request with the given request id as sent.","Get the key ID of the master key.","Get the public part of the master key, if we have one.","Get the maximum number of one-time keys the account can …","The number of messages this session has already encrypted.","Get the current message index for this session.","The message index that the device received.","Create a fresh new account, this will generate the …","Create a new inbound group session for the given room.","Create new encryption settings using an …","Create a new outbound group session for the given room.","Get the one-time keys of the account.","Should untrusted devices receive the room key, or should …","The <code>IdentityKeys</code> associated with this session","Get a serializeable version of the <code>Account</code> so it can be …","Store the group session as a base64 encoded string.","Store the group session as a base64 encoded string and …","Store the session as a base64 encoded string.","Store the cross signing identity as a pickle.","The pickled version of the Olm account.","The pickle string holding the InboundGroupSession.","The pickle string holding the OutboundGroupSession.","The pickle string holding the Olm Session.","","","Requests that need to be sent out to share the session.","Reset the backup state of the inbound group session.","The room where this session is used in.","Get the room id of the room this session belongs to.","The Room this GroupSession belongs to","The id of the room that the session is used in.","The room id this session is used for.","The room where the session is used.","How long the session should be used before changing it.","How many messages should be sent before changing the …","Get the public part of the self-signing key, if we have …","The Ed25519 key of the device which initiated the session …","Get the sender key that this session was received from.","Get the sender key that was used to establish this Session.","The curve25519 key of the sender that sent us the Olm …","The sender_key associated to this GroupSession","The public curve25519 key of the account that sent us the …","The sender key of the device that was used to encrypt the …","The Curve25519 key of the device which initiated the …","The Key of the sender","The curve25519 key of the other user that we share this …","","","","","","","","","","","","","","Get the <code>SessionConfig</code> that this session is using.","Returns the unique identifier for this session.","Returns the unique identifier for this session.","Returns the unique identifier for this session.","The SessionId associated to this GroupSession","The ID of the session that the key is for.","Our sessionId","Get the session key of this session.","The key for the session.","Get the encryption settings of this outbound session.","The settings this session adheres to.","Has the account been shared with the server.","Check if the session has been marked as shared.","Has the identity been shared.","Was the account shared.","Is the session shared.","Have the public keys of the identity been shared.","The set of users the session has been already shared with.","Sign the given string using the accounts signing key.","Sign the given CrossSigning Key in place","Convert a JSON value to the canonical representation and …","Sign the given Master Key","Sign and prepare fallback keys to be uploaded.","Generate, sign and prepare one-time keys to be uploaded.","The public ed25519 key of the account that sent us the …","Get the key ID of our Ed25519 signing key.","Get the map of signing keys this session was received from.","Map of DeviceKeyAlgorithm to the public ed25519 key of the …","","Get the status of our private cross signing keys, i.e. if …","Serialize the <code>SessionKey</code> to a base64 encoded string.","Serialize a Curve25519 public key to an unpadded base64 …","Serialize the <code>SessionKey</code> to a byte vector.","Convert this public key to a byte array.","","","","","","","","","","","","","","","Convert the public key to a vector of bytes.","","","","","","","","","","","","","","","","","","","","Convert the content of a forwarded room key into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate the unsigned <code>DeviceKeys</code> from this ReadOnlyAccount","Update the uploaded key count.","Get the currently known uploaded key count.","The number of uploaded one-time keys we have on the server.","Get the user id of the owner of the account.","Get the user id that this identity belongs to.","The user_id this account belongs to","The user id of the account owner.","The <code>UserId</code> associated with this session","The user id of the identity owner.","Get the public part of the user-signing key, if we have …","","","","","","","","","","","","","","","","","","","","","","The in-room verification request variant.","Enum over all the incoming responses we need to receive.","A request that will back up a batch of room keys to the …","Response for the server-side room key backup request.","A request that will back up a batch of room keys to the …","The request to claim one-time keys for a user/device pair …","The key claiming requests, giving us new one-time keys of …","The keys query request, fetching the device and cross …","The keys query response, giving us the device and cross …","Customized version of …","The keys upload request, uploading device and one-time …","The keys upload response, notifying us about the amount of …","Outgoing request type, holds the unique ID of the request …","Enum over the different outgoing requests we can have.","An enum over the different outgoing verification based …","A room message request, usually for sending in-room …","A room message response, usually for interactive …","Customized owned request type for sending out room …","Signature upload request, this request is used after a …","The cross signing signature upload response.","The cross signing keys upload response, marking our …","The to-device response, an empty response.","The to-device verification request variant.","Customized version of …","The to-device requests, this request is used for a couple …","Request that will publish a cross signing identity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event content to send.","","The keys to be downloaded. An empty list indicates all …","Type of event being sent to each device.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The user’s master key.","Get the number of unique messages this request contains.","A map of users to devices to a content for a message event …","Get the underlying outgoing request.","Get the unique id of this request.","Get the unique id of this request.","The room to send the event to.","The map from room id to a backed up room key that we’re …","The user’s self-signing key. Must be signed with the …","","The time (in milliseconds) to wait when downloading keys …","","","","","","","","If the client is fetching keys as a result of a device …","","","","","","","","","","","","","","","","","","","A request identifier unique to the access token used to …","The transaction ID for this event.","","","","","","","","","","The user’s user-signing key. Must be signed with the …","The backup version that these room keys should be part of.","","","","","","","","","","The account that owns the sessions, group sessions, and …","A problem with the underlying database backend","Stored versions of the backup keys.","","A struct containing private cross signing keys that can be …","Represents a store that the <code>OlmMachine</code> uses to store E2EE …","The crypto store’s error type.","","A struct describing an outgoing key request.","A Matrix identifier failed to be validated.","","A type that can be type-erased into <code>Arc&lt;dyn CryptoStore&gt;</code>.","An IO error occurred.","The number of bytes the recovery key will hold.","The key that we tried to import was invalid.","Info for the <code>m.room_key_request</code> variant","An in-memory only store that will forget all the E2EE key …","The public key of the imported private key doesn’t match …","Failed to decrypt an pickled object.","The private part of a backup key.","A <code>CryptoStore</code> specific result type.","Struct holding info about how many room keys the store has.","Error describing what went wrong when importing private …","An enum over the various secret request types we can have.","Info for the <code>m.secret.request</code> variant","The store failed to (de)serialize a data type.","The received room key couldn’t be converted into a valid …","A wrapper for our CryptoStore trait object.","The new version of the identity couldn’t be stored.","A user for which we are tracking the list of devices.","Failed to decrypt an pickled object.","The database format has changed in a backwards …","The Account associated with this store","","Serialize <code>SecretInfo</code> into <code>String</code> for usage as database …","The number of backed up room keys the store has.","Create a new <code>Backend</code> error.","","The version that we are using for backups.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collection of small in-memory stores that can be used to …","","","","","","","","","","","","","","","","","Compare the given <code>InboundGroupSession</code> with an existing …","","","","","","","Delete an outgoing key request that we created that …","","","","","","","","Get the display name of our own device.","DeviceId associated with this store","","The outdate/dirty flag of the user, remembers if the list …","","","","Try to export the secret with the given secret name.","Merge the given <code>DeviceChanges</code> into this instance of …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Get the device for the given user with the given device ID.","","Get a Device copy associated with <code>device_id</code> for <code>user_id</code>","Get a device for the given user with the given curve25519 …","Get the Identity of <code>user_id</code>","Get the inbound group session from our store.","","Get all the inbound group sessions we have stored.","","Get the outbound group sessions we have stored that is …","","Get an outgoing secret request that we created that …","","Get the read-only device associated with <code>device_id</code> for …","Get the read-only version of all the devices that the …","Get the read-only version of all the devices that the …","Get an outgoing key request that we created that matches …","","Get all the sessions that belong to the given sender key.","","Get all outgoing secret requests that we have in the store.","","Get all the devices of the given user.","","Get all devices associated with the given <code>user_id</code>","Get all devices associated with the given <code>user_id</code>","Get the user identity that is attached to the given user …","","Are there any users that have the outdated/dirty flag set …","","Import the Cross Signing Keys","Import the given <code>secret</code> named <code>secret_name</code> into the …","Get the number inbound group sessions we have and how many …","","","Get all the inbound group sessions we have not backed up …","","The info of the requested secret.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Are there any changes stored or is this an empty <code>Changes</code> …","Check if a hash for an Olm message stored in the database.","","Are we tracking the list of devices this user has?","","Load an account that was previously stored.","","Get the backup keys we have stored.","","Try to load a private cross signing identity, if one is …","","Load the list of users whose devices we are keeping track …","","Mark that the given user has an outdated device list.","The seed of the master key encoded as unpadded base64.","","Create a new empty <code>MemoryStore</code>.","Create a new Store","Create a new random recovery key.","","","","PrivateCrossSigningIdentity associated with this store","","","","","The recovery key, the one used to decrypt backed up room …","The unique id of the secret request.","The user we requested the secret from","Reset the backup state of all the stored inbound group …","","Save the given account in the store.","","Save the set of changes to the store.","","Save the given Sessions to the store","Save a list of users and their respective dirty/outdated …","","Save the list of users and their outdated/dirty flags to …","The seed of the self signing key encoded as unpadded …","Has the request been sent out.","","","","","","","","Export the <code>RecoveryKey</code> as a base64 encoded string.","","","","","","","","","","The total number of room keys the store has.","See the docs for <code>crate::OlmMachine::tracked_users()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","UserId associated with this store","The user ID of the user.","The seed of the user signing key encoded as unpadded …","Get the set of users that has the outdate/dirty flag set …","","","","","","","","","","","","","","","","","In-memory store holding the devices of users.","In-memory store that holds inbound group sessions.","In-memory store for Olm Sessions.","Add a session to the store.","Add an inbound group session to the store.","Add a device to the store.","","","","","","","","","","","","","Get the number of <code>InboundGroupSession</code>s we have.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get all the sessions that belong to the given sender key.","Get a inbound group session from our store.","Get the device with the given device_id and belonging to …","Get all the group sessions the store knows about.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new empty Session store.","Create a new empty store.","Create a new empty device store.","Remove the device with the given device_id and belonging …","Add a list of sessions belonging to the sender key.","","","","","","","","","","","","","Get a read-only view over all devices of the given user.","","","","A cross signing key.","The curve25519 device key.","An enum over the different key types a device can have.","Identity keys for a device.","The ed25519 cross-signing key.","The ed25519 device key.","A Ed25519 digital signature.","An encryption algorithm to be used to encrypt messages …","Represents a signature that could not be decoded.","An unsigned Curve25519 one-time key.","The <code>m.megolm_backup.v1.curve25519-aes-sha2</code> variant of a …","Megolm version 1 using AES-256 and SHA-256.","Auth data for the <code>m.megolm_backup.v1.curve25519-aes-sha2</code> …","Olm version 1 using Curve25519, AES-256, and SHA-256.","A one-time public key for “pre-key” messages.","Any other unknown backup variant.","A digital signature in an unsupported algorithm. The raw …","Information pertaining to a room key backup. Can be used …","Represents a potentially decoded signature (but <em>not</em> a …","Signatures for a signed object.","A key for the SignedCurve25519 algorithm","A signed Curve25519 one-time key.","An enum over the different key types a cross-signing key …","A collection of signing keys, a map from the key id to the …","An unknown cross-signing key.","An unknown device key.","An unknown one-time key type.","Additional data added to device key information by …","Add the given signature from the given signer and the …","The encryption algorithms supported by this device.","","Creates a string slice from this <code>EventEncryptionAlgorithm</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all the signatures we currently hold.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the Curve25519 key of the given device.","","","","","","","","","","","","","","The display name which the user set on the device.","The ID of the device these keys belong to.","Get the Ed25519 key, if the cross-signing key is actually …","Get the Ed25519 signature, if this is one.","Get the Ed25519 key of the given device.","","","","","","","","","","","","","","","","","","","","","Types modeling end-to-end encryption related Matrix events","Is the key considered to be a fallback key.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Try to create a <code>SigningKey</code> from an <code>DeviceKeyAlgorithm</code> and …","Get the map of signatures that belong to the given user.","Get a <code>SigningKey</code> with the given <code>DeviceKeyId</code>.","Get the Ed25519 cross-signing key (and its ID).","Get the key of the given key algorithm belonging to this …","Try to find an Ed25519 signature from the given signer …","Insert a <code>SigningKey</code> into the collection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Serialize the one-time key into a Raw version.","Checks whether all fields are empty / <code>None</code>.","Do we hold any signatures or is our collection completely …","Do we hold any keys in or is our collection completely …","Create an iterator over the <code>SigningKey</code>s in this collection.","Base64-encoded 32-byte Curve25519 public key.","The public key.","Public identity keys.","Creates a new <code>CrossSigningKey</code> with the given user ID, …","Creates a new <code>DeviceKeys</code> from the given user id, device ID,","Creates an empty <code>UnsignedDeviceInfo</code>.","Creates a new <code>SignedKey</code> with the given key and signatures.","Create a new, empty, signatures collection.","Create a new, empty, <code>SigningKeys</code> collection.","Creates a new <code>SignedKey</code>, that represents a fallback key, …","","The Curve25519 public key used to encrypt the backups.","","","","","","","","","","","How many signatures do we currently hold.","Signatures for the key object.","<em>Optional.</em> Signatures of the auth_data, as Signed JSON.","Signatures of the key.","Signatures for the device key object.","Signatures for the key object as a mutable borrow.","The base64 encoded string that is claimed to contain a …","Convert the <code>SigningKey</code> into a base64 encoded string.","Convert the <code>DeviceKey</code> into a base64 encoded string.","Convert the signature to a base64 encoded string.","","","","","","","","","","","","","","","Serialize the cross signing key into a Raw version.","Serialize the device keys key into a Raw version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional data added to the device key information by …","What the key is used for.","The ID of the user the key belongs to.","The ID of the user the device belongs to.","","","","","","","","","","","","","","","The algorithm of the unknown backup variant.","The auth data of the unknown backup variant.","A to-device event of an unknown or custom type.","The <code>m.dummy</code> to-device event.","The event type of the event content.","A trait for event contents to define their event type.","The <code>m.forwarded_room_key</code> to-device event.","The <code>m.key.verification.accept</code> to-device event.","The <code>m.key.verification.cancel</code> to-device event.","The <code>m.key.verification.done</code> to-device event.","The <code>m.key.verification.key</code> to-device event.","The <code>m.key.verification.mac</code> to-device event.","The <code>m.key.verification.ready</code> to-device event.","The <code>m.key.verification.request</code> to-device event.","The <code>m.key.verification.start</code> to-device event.","The <code>m.room.encrypted</code> to-device event.","The <code>m.room_key</code> to-device event.","The <code>m.room_key_request</code> to-device event.","The <code>m.secret.request</code> to-device event.","The <code>m.secret.send</code> to-device event.","A to-device event with an unknown type and content.","Generic to-device event with a known type and content.","An enum over the various to-device events we support.","Get the algorithm of the room key.","Get the algorithm of the forwarded room key.","Get the algorithm of the encrypted event content.","","","","","","","","","","The content of the to-device event.","The content of the to-device event.","","","","Get the event type of the event content.","The event type of the to-device event.","The type of the to-device event.","","","","Types for <code>m.forwarded_room_key</code> to-device events.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ToDeviceEvent</code>.","Module containing specialized event types that were …","Types for room events.","Types for <code>m.room_key</code> to-device events.","Types for the <code>m.room_key_request</code> events.","Types for <code>m.secret.send</code> to-device events.","The sender of the to-device event.","The sender of the to-device event.","The sender of the to-device event.","","","","","","","","","","","","","","","","","","The <code>m.megolm.v1.aes-sha2</code> variant of the …","The <code>m.megolm.v2.aes-sha2</code> variant of the …","The <code>m.forwarded_room_key</code> event content.","The <code>m.forwarded_room_key</code> to-device event.","The <code>m.megolm.v1.aes-sha2</code> variant of the …","An unknown and unsupported variant of the …","An unknown and unsupported <code>m.forwarded_room_key</code> algorithm.","Get the algorithm of the forwarded room key.","Get the algorithm of the forwarded room key content.","The algorithm of the unknown room key.","","","","","","","","","The Ed25519 key of the device which initiated the session …","The Curve25519 key of the device which initiated the …","The Curve25519 key of the device which initiated the …","The Ed25519 key of the device which initiated the session …","","","","","","","","","","","Chain of Curve25519 keys. It starts out empty, but each …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The room where the key is used.","The room where the key is used.","","","","","The ID of the session that the key is for.","The ID of the session that the key is for.","The key to be exchanged. Can be used to create a …","The key to be exchanged. Can be used to create a …","","Convert an exported room key into a content for a …","","","","","","","","","","","","","","","","","An enum over the various events that were decrypted using …","A decrypted to-device event of an unknown or custom type.","An <code>m.forwarded_room_key</code> event that was decrypted using the …","An <code>m.olm.v1.curve25519-aes-sha2</code> decrypted to-device event.","An <code>m.room_key</code> event that was decrypted using the …","An <code>m.secret.send</code> event that was decrypted using the …","The <code>m.forwarded_room_key</code> decrypted to-device event.","Public keys used for an m.olm.v1.curve25519-aes-sha2 event.","The <code>m.room_key</code> decrypted to-device event.","The <code>m.secret.send</code> decrypted to-device event.","A decrypted to-device event with an unknown type and …","","","","","","","","","","","","","","","The type of the event.","","","","","The Ed25519 public key of the <code>m.olm.v1.curve25519-aes-sha2</code> …","The event type of the encrypted event.","The type of the event.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The sender’s signing keys of the encrypted event.","The sender’s signing keys of the encrypted event.","The sender’s signing keys of the encrypted event.","The intended recipient of the event, as set by the sender …","The intended recipient of the event, as set by the sender …","The recipient of the encrypted to-device event.","The recipient’s signing keys of the encrypted event.","The recipient’s signing keys of the encrypted event.","The recipient’s signing keys of the encrypted event.","Get the unique info about the room key that is contained …","Get the unique info about the room key that is contained …","The sender of the event, as set by the sender of the event.","The sender of the event, as set by the sender of the event.","The sender of the encrypted to-device event.","","","","","","","","","","","","","","","","","","","","","","","Generic room event with a known type and content.","","","The body of this event, as created by the client which …","","Types for the <code>m.room.encrypted</code> room events.","The globally unique identifier for this event.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Timestamp (in milliseconds since the unix epoch) on …","Get the unique info about the room key that was used to …","Contains the fully-qualified ID of the user who sent this …","","","","","Contains optional extra information about the event.","","An m.room.encrypted room event.","An m.room.encrypted to-device event.","The event content for events encrypted with the …","The event content for events encrypted with the …","The event content for events encrypted with the …","The event content for events encrypted with the …","The content for <code>m.room.encrypted</code> room events.","An enum for per encryption algorithm event contents.","The content for <code>m.room.encrypted</code> to-device events.","An event content that was encrypted with an unknown …","An event content that was encrypted with an unknown …","An unknown and unsupported <code>m.room.encrypted</code> event content.","Get the algorithm of the encrypted event content.","Get the algorithm of the event content.","Get the algorithm of the event content.","Get the algorithm of the event content.","The algorithm that was used to encrypt the given event …","","","","","","","","","","","","","The encrypted content of the event.","The encrypted content of the event.","","","","","","","","","","","","","","","","","","","The ID of the sending device.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The Curve25519 key of the recipient device.","Information about related events.","Get the unique info about the room key that was used to …","Algorithm-specific fields.","The Curve25519 key of the sender.","The Curve25519 key of the sender.","","","","","","","The ID of the session used to encrypt the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>m.megolm.v1.aes-sha2</code> variant of the <code>m.room_key</code> content.","The <code>m.megolm.v1.aes-sha2</code> variant of the <code>m.room_key</code> content.","The <code>m.megolm.v2.aes-sha2</code> variant of the <code>m.room_key</code> content.","The <code>m.room_key</code> event content.","The <code>m.room_key</code> to-device event.","An unknown and unsupported variant of the <code>m.room_key</code> …","An unknown and unsupported <code>m.room_key</code> algorithm.","Get the algorithm of the room key.","Get the algorithm of the room key.","The algorithm of the unknown room key.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>m.megolm.v1.aes-sha2</code> <code>m.room_key</code> content.","The room where the key is used.","","","","The ID of the session that the key is for.","The key to be exchanged. Can be used to create a …","","","","","","","","","","","","","","Enum describing different actions a room key request event …","An action describing a cancellation of a previous room key …","The <code>m.megolm.v1.aes-sha2</code> variant of the <code>m.room_key_request</code> …","The <code>m.megolm.v1.aes-sha2</code> variant of the <code>m.room_key_request</code> …","The content for a <code>m.megolm.v2.aes-sha2</code> <code>m.room_key_request</code> …","An action describing a room key request.","Info about the room key that is being requested.","The content for a <code>m.room_key_request</code> event.","The <code>m.room_key_request</code> to-device event.","Info about the room key that is being requested.","An unknown and unsupported variant of the …","An unknown and unsupported <code>m.room_key_request</code> algorithm.","The action that this room key request is carrying.","Get the algorithm of the room key request content.","Get the algorithm of the room key request content.","The algorithm of the unknown room key request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new content for a <code>m.room_key_request</code> event with …","A random string uniquely identifying the request for a …","The ID of the device that is requesting the room key.","Get the room ID where the room key is used.","The room where the key is used.","The Curve25519 key of the device which initiated the …","","","","","","","Get the unique ID of the room key.","The ID of the session that the key is for.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>m.secret.send</code> event content.","The <code>m.secret.send</code> to-device event.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>m.secret.send</code> content.","The ID of the request that this a response to.","The contents of the secret.","The name of the secret, typically not part of the event …","","","","","","","The signature wasn’t valid base64.","The encoded session key wasn’t valid base64.","The pickle wasn’t valid base64.","The message wasn’t valid base64.","","Error type describing the different ways message decoding …","The pre-key message that was used to establish the Session …","The encrypted pickle could not have been decrypted.","An embedded public key couldn’t be decoded.","","The message authentication code of the message was invalid.","The message authentication code of the message was invalid.","The length of the message authentication code of the …","The length of the message authentication code of the …","The embedded message authentication code couldn’t be …","The ciphertext of the message isn’t padded correctly.","The ciphertext of the message isn’t padded correctly.","The message has a unsupported version.","Error type describing failures that can happen when we try …","Error type for Megolm-based decryption failuers.","The message doesn’t have enough data to be correctly …","The Olm message has an invalid type.","The pre-key message contains a curve25519 identity key …","The session is missing the correct message key to decrypt …","The pre-key message contained an unknown one-time key. …","The message is missing a valid version.","At least one of the keys did not have contributory …","Error type for Olm-based decryption failuers.","Error describing failure modes when creating a Olm Session …","Error type describing the various ways Vodozemac pickles …","The message couldn’t be decoded as a valid protocol …","The encoded session key contains an invalid public key.","The encoded session key didn’t contain enough data to be …","The serialized Vodozemac object couldn’t be deserialzied.","Error type describing failure modes for the <code>SessionKey</code> and …","The signature failed to be verified.","","The signature on the message was invalid.","The signature on the session key was invalid.","An embedded signature couldn’t be decoded.","Error type describing signature verification failures.","Too many messages have been skipped to attempt decrypting …","The session is missing the correct message key to decrypt …","The encoded session key had a unsupported version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,30,0,0,0,19,0,26,27,30,26,30,27,0,0,0,41,70,45,58,41,0,0,69,26,27,30,0,0,0,0,58,41,71,0,19,69,0,69,45,69,68,68,45,68,69,45,45,45,58,41,68,0,71,70,187,0,30,0,0,0,0,0,41,67,67,67,67,71,71,70,41,67,58,67,68,68,67,68,0,0,69,69,69,20,23,0,0,0,20,23,0,32,0,0,0,0,0,0,0,27,26,58,27,0,0,0,0,32,0,26,0,0,187,58,0,58,58,0,68,26,30,58,41,71,0,0,70,19,67,68,45,0,0,68,0,0,0,68,0,0,19,1,4,1,4,116,8,9,11,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,4,14,1,4,15,14,1,4,14,4,15,14,1,4,8,18,19,20,21,22,9,23,24,25,11,26,14,27,1,28,4,29,30,31,32,15,33,8,18,19,20,21,22,9,23,24,25,11,26,14,27,1,28,4,29,30,31,32,15,33,4,14,11,8,4,11,0,28,7,18,21,22,31,46,8,19,9,23,24,25,8,11,4,86,48,8,11,8,4,4,29,11,11,0,18,8,19,9,23,28,30,31,33,19,9,28,31,33,11,11,62,14,1,4,32,64,62,58,58,41,41,67,67,68,68,69,69,70,70,46,45,45,8,18,48,19,20,21,22,9,23,24,25,11,71,71,26,14,27,1,28,4,29,30,7,31,32,15,33,0,64,62,58,58,58,58,58,58,58,41,41,41,41,41,41,67,68,68,68,68,68,68,69,69,69,69,70,70,46,46,45,45,45,45,45,8,18,48,19,19,20,20,20,21,22,9,23,23,23,24,25,11,71,71,26,14,27,1,28,4,29,30,7,31,32,32,32,15,33,8,1,48,11,9,11,8,9,11,11,11,11,11,4,14,14,36,36,36,28,46,4,116,11,86,11,11,33,29,188,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,9,11,48,8,14,1,4,32,18,8,14,1,4,32,8,18,18,1,1,14,1,4,32,18,22,25,46,46,28,8,48,9,33,8,25,11,23,24,25,0,28,64,62,8,11,0,8,116,20,23,4,14,1,4,1,32,14,4,1,11,20,23,1,31,58,41,67,68,69,70,45,71,32,64,62,15,11,11,11,14,14,1,188,188,11,18,21,22,18,21,0,14,1,4,116,116,32,1,23,24,25,188,46,8,19,9,23,24,25,18,11,28,11,8,9,58,41,68,69,70,45,71,1,18,4,14,1,4,0,4,8,31,1,1,4,14,8,18,19,20,21,22,9,23,24,25,11,26,14,27,1,28,4,29,30,31,32,15,33,14,58,41,67,68,69,70,45,71,33,11,21,64,62,58,41,67,68,69,70,46,45,8,8,18,48,19,20,21,22,9,9,23,24,25,11,71,26,14,27,1,28,28,28,4,29,30,7,31,32,15,33,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,0,11,9,8,9,23,24,25,11,14,4,32,86,23,25,22,18,21,22,46,0,64,62,58,41,67,68,69,70,46,45,8,18,48,19,20,21,22,9,23,24,25,11,71,26,14,27,1,28,4,29,30,7,31,32,15,33,14,1,4,7,11,256,256,256,256,257,257,258,259,259,260,261,261,262,263,262,263,264,264,264,265,266,267,266,265,266,140,72,0,0,140,0,0,0,0,37,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,134,147,116,44,37,57,147,86,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,135,135,37,94,136,86,57,116,137,138,134,135,36,37,94,136,86,57,116,137,138,134,135,36,57,86,86,86,86,134,149,148,134,149,94,37,57,134,116,145,37,94,136,146,147,116,138,148,44,149,150,36,86,86,146,134,86,145,94,135,137,134,37,94,86,57,134,37,94,137,57,57,135,57,37,37,94,136,86,57,116,137,138,140,140,72,72,134,135,36,44,145,37,37,37,37,37,94,136,86,146,57,57,57,147,116,137,138,148,140,140,72,44,134,149,135,150,36,145,37,145,37,57,86,57,137,134,135,37,86,86,57,36,135,36,36,37,136,147,116,86,86,135,147,134,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,137,137,148,135,150,86,134,149,57,86,137,135,86,137,135,135,86,148,137,138,86,57,116,137,86,116,134,86,57,137,134,135,146,147,148,149,140,72,148,57,57,137,57,147,148,44,116,116,135,44,57,134,136,57,147,138,44,134,149,145,37,94,136,146,147,116,138,148,44,149,150,36,134,57,137,134,57,44,134,137,44,137,148,86,137,135,146,148,150,148,86,86,86,86,86,86,147,86,57,57,140,135,145,37,145,37,37,94,136,86,57,116,137,138,134,135,36,37,140,72,37,145,145,145,37,94,136,86,146,57,57,57,147,116,137,138,148,140,72,44,44,134,149,135,150,36,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,86,86,86,146,86,135,86,146,134,150,135,145,37,94,136,86,146,57,147,116,137,138,148,140,72,44,134,149,135,150,36,145,2,0,176,100,0,176,100,176,100,0,176,100,0,0,0,176,100,0,176,100,100,100,2,0,176,0,117,172,173,176,100,105,174,175,2,117,172,173,176,100,105,174,175,2,117,172,173,105,174,175,2,117,172,173,105,174,175,2,174,117,173,117,117,172,173,176,100,105,174,175,2,117,172,173,176,176,176,176,176,176,176,176,176,100,100,100,100,100,100,100,100,105,105,105,174,175,2,2,2,117,172,173,176,100,105,174,175,2,172,117,117,105,105,2,174,175,172,117,173,117,172,173,105,174,175,2,173,117,172,173,176,100,105,174,175,2,117,172,173,176,100,105,174,175,2,117,174,117,172,173,176,100,105,174,175,2,172,175,117,172,173,176,100,105,174,175,2,34,34,0,0,0,0,0,0,0,34,0,0,34,199,95,187,0,95,34,0,0,0,0,0,187,34,34,0,95,0,34,34,186,193,187,192,34,193,194,188,187,189,186,193,198,190,191,199,192,194,59,95,34,188,187,189,186,193,198,190,191,199,192,194,59,95,34,0,190,191,188,187,189,186,190,191,192,188,187,189,186,190,191,192,186,189,193,190,191,192,194,132,189,191,186,188,187,198,199,186,186,193,198,199,59,188,186,191,188,187,189,186,193,198,190,191,199,192,194,59,95,95,34,34,188,187,187,187,189,186,193,198,190,191,199,192,194,59,95,95,95,34,34,34,34,34,34,132,189,186,186,186,132,189,132,189,132,189,132,189,186,186,186,132,189,132,189,132,189,132,189,186,186,132,189,186,193,186,186,132,189,193,132,189,188,188,187,189,186,193,198,190,191,199,192,194,59,95,34,189,193,132,189,186,193,132,189,132,189,132,189,132,189,186,59,193,189,186,199,190,191,193,186,193,95,34,193,194,188,188,132,189,132,189,132,189,186,132,189,186,59,188,188,187,198,199,193,95,34,199,188,187,189,186,190,191,192,95,34,192,186,188,187,189,186,193,198,190,191,199,192,194,59,95,34,188,187,189,186,193,198,190,191,199,192,194,59,95,34,188,187,189,186,193,198,190,191,199,192,194,59,95,34,186,198,59,186,188,187,189,186,193,198,190,191,199,192,194,59,95,34,199,59,0,0,0,202,203,204,202,203,204,202,203,204,202,203,204,202,203,204,203,202,203,204,202,203,204,202,203,204,202,203,204,203,202,203,204,202,203,204,204,202,202,203,204,202,203,204,202,203,204,202,203,204,204,202,203,204,0,90,0,0,92,90,205,0,0,211,208,133,0,133,0,208,205,0,0,0,0,211,0,0,92,90,211,0,119,102,133,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,119,207,208,10,92,102,209,90,210,211,205,206,119,98,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,133,102,209,119,98,207,208,10,102,209,210,211,119,98,133,209,102,92,205,102,10,92,90,210,211,205,206,119,98,133,10,92,90,210,211,205,206,119,98,133,0,210,207,208,10,92,102,209,90,210,211,205,206,119,98,133,133,207,208,10,92,92,102,209,90,90,90,210,211,205,205,206,119,98,98,133,133,98,92,119,98,10,102,119,98,207,208,10,92,102,209,90,210,211,205,206,119,98,133,119,98,210,209,119,98,98,210,10,102,10,102,209,210,119,98,210,133,207,207,208,10,102,209,210,211,119,98,133,119,210,207,10,102,210,206,92,90,205,207,208,10,92,102,209,90,210,211,205,206,119,98,133,10,102,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,207,208,10,92,102,209,90,210,211,205,206,119,98,133,102,10,10,102,207,208,10,92,102,209,90,210,211,205,206,119,98,133,268,268,222,222,224,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,0,0,0,220,220,220,222,221,220,222,221,220,221,221,220,221,220,222,221,220,224,222,221,222,221,220,0,222,221,220,222,221,220,220,0,0,0,0,0,222,221,220,222,221,220,221,220,222,221,220,222,221,220,222,221,220,222,221,220,0,0,0,0,171,171,0,225,171,226,171,157,158,226,171,157,158,226,157,157,158,158,226,226,171,157,158,226,171,157,158,226,157,171,157,158,226,171,157,158,226,157,158,171,157,158,226,157,158,157,158,226,171,171,157,158,226,171,157,158,226,171,157,158,226,171,157,158,226,0,230,0,0,0,0,230,0,230,230,0,230,227,228,229,230,227,228,229,227,228,229,227,228,229,227,230,227,228,229,229,230,228,230,227,228,229,230,227,228,229,230,227,228,229,230,227,228,230,227,228,230,227,228,170,227,230,227,228,227,228,229,227,228,229,230,227,228,229,230,227,228,229,230,227,228,229,230,227,228,229,0,232,232,232,232,0,232,232,232,232,232,232,232,232,232,232,232,232,232,0,0,234,0,151,0,0,0,0,151,234,0,233,151,53,234,237,151,235,53,234,236,237,151,235,53,234,236,237,235,236,151,235,53,234,236,237,151,235,53,234,236,237,151,235,53,234,236,237,236,151,235,53,234,236,237,151,235,53,234,236,237,151,235,53,234,236,237,151,151,235,53,234,234,236,237,151,235,53,234,236,237,235,53,143,53,235,236,151,235,53,234,236,237,236,151,235,53,234,236,237,151,235,53,234,236,237,151,235,53,234,236,237,151,235,53,234,236,237,151,235,53,234,236,237,219,0,0,0,0,219,0,238,219,239,219,240,239,219,240,239,239,239,219,240,239,219,240,239,219,240,239,219,240,239,240,240,219,240,239,240,240,239,219,240,239,219,240,239,219,240,239,219,240,239,0,245,242,231,0,245,0,0,0,0,242,0,244,242,231,247,244,245,242,231,246,247,244,245,242,231,246,247,243,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,242,242,231,231,246,247,244,245,242,231,246,247,244,244,244,231,246,246,244,245,242,231,246,247,231,246,244,245,242,231,246,247,244,245,242,231,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,244,245,242,231,246,247,0,0,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,77,159,160,75,76,0,80,160,75,76,74,73,74,73,75,74,73,75,0,0,75,75,80,73,80,75,76,0,0,0,75,159,159,160,0,77,76,74,159,75,0,73,74,159,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,77,76,76,74,74,159,159,80,80,73,73,160,160,75,75,77,77,77,76,76,76,74,74,74,74,159,159,159,159,159,80,80,73,73,73,160,160,160,160,75,75,75,75,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75,77,76,74,159,80,73,160,75],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[4,[[3,[2]]]],[[1,[6,[5]]],[[3,[2]]]],[[4,7],[[3,[2]]]],0,[8],[9,10],[[11,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,12],[14,[[3,[2]]]],[1,[[3,[2]]]],[4,[[3,[2]]]],[15,16],[14,[[3,[15]]]],[1,[[3,[15]]]],[4,[[3,[15]]]],[[14,16],[[3,[2]]]],[[4,16],[[3,[2]]]],[15,12],[14,17],[1,17],[4,17],[8,8],[18,18],[19,19],[20,20],[21,21],[22,22],[9,9],[23,23],[24,24],[25,25],[11,11],[26,26],[14,14],[27,27],[1,1],[28,28],[4,4],[29,29],[30,30],[31,31],[32,32],[15,15],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[35,[34]]]],[14,[[3,[2]]]],[11,36],[8,[[3,[37]]]],[4,3],[[11,38,39],[[35,[40,41]]]],[[42,43],[[35,[[6,[44]],45]]]],[[],28],[[],7],[18],[21],[22],0,[[],[[35,[46]]]],[[],[[35,[8]]]],[[],[[35,[19]]]],[[],[[35,[9]]]],[[],[[35,[23]]]],[[],[[35,[24]]]],[[],[[35,[25]]]],[8,47],[11,47],[4,47],0,[48,49],[8,[[3,[43]]]],[11,[[13,[[3,[50]]]]]],[8,[[3,[51]]]],[4,3],[4,3],0,[[11,39,52],[[35,[[38,[53]],41]]]],[[11,39,54,43],[[35,[[38,[53]],41]]]],[[43,55],[[35,[50,56]]]],[[18,57,[3,[55]]],[[35,[58]]]],[[8,8],12],[[19,19],12],[[9,9],12],[[23,23],12],[[28,28],12],[[30,30],12],[[31,31],12],[[33,33],12],[[],12],[[],12],[[],12],[[],12],[[],12],[11,[[3,[59]]]],[[11,60],[[13,[[6,[44]]]]]],[[[62,[[0,[42,61]]]]],46],0,0,0,[32,43],[[[64,[[0,[42,63]]]],65],66],[[[62,[[0,[42,63,61]]]],65],66],[[58,65],66],[[58,65],66],[[41,65],66],[[41,65],66],[[67,65],66],[[67,65],66],[[68,65],66],[[68,65],66],[[69,65],66],[[69,65],66],[[70,65],66],[[70,65],66],[[46,65],66],[[45,65],66],[[45,65],66],[[8,65],66],[[18,65],66],[[48,65],66],[[19,65],66],[[20,65],66],[[21,65],66],[[22,65],66],[[9,65],66],[[23,65],66],[[24,65],66],[[25,65],66],[[11,65],66],[[71,65],66],[[71,65],66],[[26,65],66],[[14,65],66],[[27,65],66],[[1,65],66],[[28,65],66],[[4,65],66],[[29,65],66],[[30,65],66],[[7,65],66],[[31,65],66],[[32,65],66],[[15,65],66],[[33,65],66],[[],50],[[]],[[]],[69,58],[72,58],[67,58],[56,58],[[]],[73,58],[34,58],[74,41],[67,41],[[]],[75,41],[34,41],[56,41],[[]],[76,68],[77,68],[[]],[56,68],[78,68],[79,68],[80,69],[[]],[76,69],[56,69],[81,70],[[]],[82,46],[[]],[83,45],[56,45],[84,45],[81,45],[[]],[[]],[[]],[[]],[85,19],[[]],[21,20],[22,20],[[]],[[]],[[]],[[]],[[]],[24,23],[25,23],[[]],[[]],[[]],[[]],[34,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,32],[4,32],[[]],[[]],[86,8],[1,[[35,[[3,[14]],34]]]],[[48,47],[[3,[18]]]],[[11,87,47,[3,[88]]],[[13,[[3,[18]]]]]],[9,[[3,[51]]]],[[11,87,[3,[88]]],[[13,[[3,[20]]]]]],[[8,89],[[3,[90]]]],[[9,91],[[3,[92]]]],[[11,49],[[13,[3]]]],[[11,87,[3,[88]]],[[13,[48]]]],[[11,87,43],[[3,[32]]]],[[11,87,[93,[43]]],[[3,[1]]]],[[11,87],[[6,[1]]]],[4,12],[14,12],[14,12],0,0,0,0,0,[4,12],0,[11,94],0,[[11,59],[[35,[36,95]]]],[[11,[6,[44]],12,96],[[13,[33]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[[11,39],[[13,[12]]]],[48,12],[8,12],[14,12],[1,12],[4,12],[32,12],[18,12],[8,12],[14,12],[1,12],[4,12],[32,12],[8,12],[18,12],[[18,57],[[35,[12,41]]]],[1,12],[1,12],[14,12],[1,12],[4,12],[32,12],[18,12],[22,12],[25,12],0,0,0,[8,97],[48,49],[9,98],0,[8,19],[25],[[11,99,[101,[100]]],[[35,[58]]]],[23,9],[24,9],[25,9],0,0,[46,[[35,[[64,[42]],70]]]],[[],[[62,[[0,[42,61]]]]]],[[102,19],8],[[87,47],11],0,[8,103],0,[20,[[3,[22]]]],[23,[[3,[24]]]],[4,8],[14,47],[1,[[3,[104]]]],[4,47],[1,87],[32,87],[14,87],[4,87],[1,[[3,[[6,[5]]]]]],[11,[[13,[[6,[105]]]]]],[20,[[3,[21]]]],[23,[[3,[25]]]],[1,87],[[31,31],[[3,[106]]]],[107],[107],[107],[107],[107],[107],[107],[107],[32,[[3,[14]]]],[[[64,[42]]],[[109,[108]]]],[[[62,[[0,[42,61]]]]],[[109,[108]]]],[15,43],[[11,[6,[[38,[110]]]],111,97,3],[[35,[[6,[[38,[110]]]],58]]]],[[11,112],13],[[11,112],13],[14,[[3,[2]]]],[14,12],[[87,47,87,[3,[[6,[5]]]]],113],0,0,[[11,38,39],[[35,[41]]]],[18],[21,[[35,[34]]]],[[22,39,114,[3,[[6,[5]]]]],1],[[18,[6,[5]]]],[[21,[6,[5]]],[[35,[34]]]],0,[14,[[3,[39]]]],[1,[[3,[39]]]],[4,[[3,[39]]]],0,0,[32,[[3,[4]]]],[[1,115],[[35,[[3,[14]],71]]]],0,0,0,0,[46,35],[8,35],[19,35],[9,35],[23,35],[24,35],[25,35],[[18,19],13],[[11,39,49,[101,[116]]],[[35,[[6,[[118,[117]]]],58]]]],0,[[11,43],119],[8,119],[9,119],[58,[[3,[120]]]],[41,[[3,[120]]]],[68,[[3,[120]]]],[69,[[3,[120]]]],[70,[[3,[120]]]],[45,[[3,[120]]]],[71,[[3,[120]]]],[1,[[35,[3,34]]]],[18,13],[4,12],[14,26],[1,27],[4,30],0,[4,12],[8,12],0,[1,[[3,[[6,[5]]]]]],[1,12],[4,12],[14,[[35,[[6,[121]],122]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[35,[123,122]]]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,[11,[[13,[[125,[124]]]]]],[21,[[35,[12,34]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[102,[[35,[8]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[10,[[35,[9]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[126,[[35,[28]]]],[127,[[35,[28]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],0,[[11,129],13],[9],[8,87],[9,87],[23,87],[24,87],[25,87],[11,87],[14,87],[4,87],[32,87],0,[23,[[3,[0]]]],0,[[22,[3,[[6,[5]]]]],113],[18,[[35,[130,68]]]],[21,[[35,[130,68]]]],[22,[[35,[130,68]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,12],[1,12],[4,12],[[[6,[131]]],7],[[87,47,[118,[132]]],[[13,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,133],[134,133],0,0,0,[37],[57,12],0,[86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,12],[135,12],[37,37],[94,94],[136,136],[86,86],[57,57],[116,116],[137,137],[138,138],[134,134],[135,135],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,57],139],[[86,39,116],[[35,[140]]]],[[86,37,141],[[35,[0,69]]]],[[86,8,97],[[35,[134,69]]]],[[86,103,37,37,12],134],0,0,0,0,0,0,[[],[[35,[37,142]]]],[[57,143],[[35,[41]]]],[[134,144],[[35,[50,73]]]],[[],116],[[],[[35,[145]]]],[[],[[35,[37]]]],[[],[[35,[94]]]],[[],[[35,[136]]]],[[],[[35,[146]]]],[[],[[35,[147]]]],[[],[[35,[116]]]],[[],[[35,[138]]]],[[],[[35,[148]]]],[[],[[35,[44]]]],[[],[[35,[149]]]],[[],[[35,[150]]]],[[],[[35,[36]]]],[86,47],0,0,0,[86,102],[145],0,[87,135],[[137,54,43],[[38,[53]]]],[[134,8,43,54],[[35,[[38,[151]],58]]]],[[37,37],12],[[94,94],12],[[86,86],12],[[57,57],12],[[134,134],12],[[],12],[[],12],[137,12],[57,44],[[57,55],44],[[135,152],[[3,[50]]]],[57,55],[[37,65],[[35,[153]]]],[[37,65],[[35,[153]]]],[[94,65],[[35,[153]]]],[[136,65],66],[[86,65],66],[[57,65],66],[[116,65],66],[[137,65],66],[[138,65],66],[[140,65],66],[[140,65],66],[[72,65],66],[[72,65],66],[[134,65],66],[[135,65],66],[[36,65],66],0,[[]],[154,37],[155,37],[156,37],[[]],[[],37],[[]],[[]],[[]],[[]],[157,57],[[]],[158,57],[[]],[[]],[[]],[[]],[[]],[159,140],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[35,[145,159]]]],[43,[[35,[37,76]]]],[[],[[35,[145,159]]]],[[],37],[44,[[35,[57,140]]]],[146,[[35,[86,160]]]],[147,[[35,[57,160]]]],[[[118,[47]],[118,[94]],148],[[35,[137,160]]]],[[[118,[87]],[118,[47]],[118,[94]],149],134],[150,[[35,[135,0]]]],[[],[[35,[37,76]]]],[86,[[3,[161]]]],[[86,108]],[57,12],0,[135,12],0,0,[37],0,0,0,[86,94],0,[[135,[3,[43]],[3,[43]],[3,[43]]],[[35,[95]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137],[137,12],0,[135,12],0,[86],0,0,[57],[86],[137],[135],[86],[[137,99]],[135,[[3,[162]]]],[135,[[3,[9]]]],[86,108],0,[137,55],0,[[87,47],86],[[37,51,39,145,133,[3,[163]]],[[35,[57,140]]]],[[164,163,12],116],[[[118,[47]],[118,[94]],39,116],[[35,[137,140]]]],[86,[[166,[165,37]]]],0,0,[86,146],[57,147],[137,148],[134,149],[135,[[35,[150,56]]]],0,0,0,0,[107],[107],0,[57],[57,39],[137,39],0,0,0,0,0,0,[135,[[3,[0]]]],0,[57,37],[134,37],0,0,0,0,0,0,0,[145,35],[37,35],[94,35],[136,35],[146,35],[147,35],[116,35],[138,35],[148,35],[44,35],[149,35],[150,35],[36,35],[134,103],[57,43],[137,43],[134,43],0,0,0,[137,145],0,[137,116],0,[86,12],[137,12],[135,12],0,0,0,0,[[86,43],167],[[86,10],[[35,[68]]]],[[86,54],[[35,[167,68]]]],[[86,9],[[35,[130,68]]]],[86,[[97,[162,[38,[168]]]]]],[86,[[97,[162,[38,[168]]]]]],0,[86,162],[57,98],0,[140,[[3,[120]]]],[135,36],[145,50],[37,50],[145,[[6,[121,169]]]],[37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],50],[[],50],[37,[[6,[121,169]]]],[[],[[35,[145]]]],[43,[[35,[145]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[170,[[35,[57]]]],[44,[[35,[57]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[171,[[35,[44]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[86,102],[[86,161]],[86,161],0,[86,87],[135,87],0,0,0,0,[135,[[3,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[172,172],[173,173],[105,105],[174,174],[175,175],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[35,[117]]]],0,0,[[117,65],66],[[172,65],66],[[173,65],66],[[176,65],66],[[100,65],66],[[105,65],66],[[174,65],66],[[175,65],66],[[2,65],66],[[]],[[]],[[]],[175,176],[130,176],[174,176],[117,176],[[]],[173,176],[2,176],[177,176],[178,176],[179,100],[[]],[180,100],[181,100],[182,100],[183,100],[184,100],[185,100],[130,105],[2,105],[[]],[[]],[[]],[[]],[174,2],[117,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[117,108],0,[105,176],[105,99],[2,99],0,0,0,[117,35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[186,86],0,[187,50],0,[[],34],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[188,188],[187,187],[189,189],[186,186],[190,190],[191,191],[192,192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[186,57],[[13,[139]]]],[[],189],[[],193],[[],190],[[],191],[[],192],[[],194],[99,[[197,[[196,[195]]]]]],[[189,99],[[197,[[196,[195]]]]]],0,[186],[[],[[35,[188]]]],[[],[[35,[187]]]],[[],[[35,[198]]]],[[],[[35,[199]]]],[186,[[13,[[3,[50]],34]]]],[186,47],0,0,[199],[59],[[188,188],12],[[186,152],[[3,[50]]]],[[191,191]],[[188,65],66],[[187,65],66],[[189,65],66],[[186,65],66],[[193,65],66],[[198,65],66],[[190,65],66],[[191,65],66],[[199,65],66],[[192,65],66],[[194,65],66],[[59,65],66],[[95,65],66],[[95,65],66],[[34,65],66],[[34,65],66],[[]],[[]],[152,187],[[],187],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,95],[76,95],[[]],[140,34],[78,34],[56,34],[160,34],[84,34],[[]],[[87,47],[[197,[[196,[195]]]]]],[[189,87,47],[[197,[[196,[195]]]]]],[[186,87,47],[[13,[[3,[18]]]]]],[[186,87,37],[[13,[[3,[18]]]]]],[[186,87],[[13,[[3,[20]]]]]],[[39,43],[[197,[[196,[195]]]]]],[[189,39,43],[[197,[[196,[195]]]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[39,[[197,[[196,[195]]]]]],[[189,39],[[197,[[196,[195]]]]]],[99,[[197,[[196,[195]]]]]],[[189,99],[[197,[[196,[195]]]]]],[[186,87,47],[[13,[[3,[8]]]]]],[[186,87],[[13,[[166,[104,8]]]]]],[[186,87],[[13,[[166,[104,8]]]]]],[187,[[197,[[196,[195]]]]]],[[189,187],[[197,[[196,[195]]]]]],[43,[[197,[[196,[195]]]]]],[[189,43],[[197,[[196,[195]]]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[87,[[197,[[196,[195]]]]]],[[189,87],[[197,[[196,[195]]]]]],[[186,87],[[13,[48]]]],[[186,87],[[13,[48]]]],[87,[[197,[[196,[195]]]]]],[[189,87],[[197,[[196,[195]]]]]],[186,[[13,[12]]]],0,[[186,59],[[13,[36,95]]]],[[186,152,43],[[13,[95]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],0,[108,[[197,[[196,[195]]]]]],[[189,108],[[197,[[196,[195]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[118,[132]]]],[193,12],[136,[[197,[[196,[195]]]]]],[[189,136],[[197,[[196,[195]]]]]],[[186,87],[[13,[12]]]],0,[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[[186,87],13],0,0,[[],189],0,[[],[[13,[199,201]]]],0,0,0,[186,[[118,[[200,[135]]]]]],0,[107],[107],0,0,0,0,[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[86,[[197,[[196,[195]]]]]],[[189,86],[[197,[[196,[195]]]]]],[193,[[197,[[196,[195]]]]]],[[189,193],[[197,[[196,[195]]]]]],[186,13],[[],[[197,[[196,[195]]]]]],[189,[[197,[[196,[195]]]]]],[186,13],0,0,[188,35],[187,35],[198,35],[199,35],0,[95,[[3,[120]]]],[34,[[3,[120]]]],[199,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],50],0,[186,[[13,[[125,[124]]]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[186,87],0,0,[186,[[13,[[125,[124]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[199],[59],0,0,0,[[202,134],12],[[203,57],12],[[204,8],12],[[]],[[]],[[]],[[]],[[]],[[]],[202,202],[203,203],[204,204],[[]],[[]],[[]],[203,108],[[],202],[[],203],[[],204],[[202,65],66],[[203,65],66],[[204,65],66],[[]],[[]],[[]],[[202,43],[[3,[[118,[[200,[[6,[134]]]]]]]]]],[[203,39,43],[[3,[57]]]],[[204,87,47],[[3,[8]]]],[203,[[6,[57]]]],[[]],[[]],[[]],[[],202],[[],203],[[],204],[[204,87,47],[[3,[8]]]],[[202,43,[6,[134]]]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[204,87],[[166,[104,8]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[119,124,162,167],[[3,[[35,[205,206]]]]]],0,[133,43],[133,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119],[207,207],[208,208],[10,10],[92,92],[102,102],[209,209],[90,90],[210,210],[211,211],[205,205],[206,206],[119,119],[[[98,[[0,[212,213]]]]],[[98,[[0,[212,213]]]]]],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[133,133],106],[102,[[3,[37]]]],[[],209],[[],119],[[],[[98,[213]]]],[[],[[35,[207]]]],[[],[[35,[208]]]],[[],[[35,[10]]]],[[],[[35,[102]]]],[[],[[35,[209]]]],[[],[[35,[210]]]],[[],[[35,[211]]]],[[],[[35,[119]]]],[[],[[35,[[98,[[0,[0,213,214]]]]]]]],[[],[[35,[133]]]],0,0,[92,[[3,[51]]]],[205,[[3,[167]]]],[102,[[3,[51]]]],[[10,10],12],[[92,92],12],[[90,90],12],[[210,210],12],[[211,211],12],[[205,205],12],[[206,206],12],[[119,119],12],[[[98,[[0,[215,213]]]],98],12],[[133,133],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[210,12],[[207,65],66],[[208,65],66],[[10,65],66],[[92,65],66],[[102,65],66],[[209,65],66],[[90,65],66],[[210,65],66],[[211,65],66],[[205,65],66],[[206,65],66],[[119,65],66],[[[98,[[0,[63,213]]]],65],66],[[133,65],66],[[133,65],66],[[]],[[]],[[]],[[]],[51,92],[[]],[[]],[51,90],[[]],[37,90],[[]],[[]],[167,205],[[]],[[]],[[]],[[]],[[],[[98,[213]]]],[[],133],[[]],[129,[[98,[213]]]],[[89,50],[[35,[92,76]]]],[[119,87],[[3,[97]]]],[[[98,[213]]],[[3,[92]]]],[10,3],[[102,89],[[3,[90]]]],[[119,87,91],[[3,[167]]]],[[[98,[213]],213,92],[[3,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119],[[[98,[213]]]],[210,38],[209,12],[119,12],[[[98,[213]]],12],[[[98,[213]]],[[216,[213,92]]]],[210,37],0,0,[[124,[6,[217]],[98,[162]],119],10],[[124,104,[6,[133]],[97,[162,90]],119],102],[[],209],[37,210],[[],119],[[],[[98,[213]]]],[37,210],[[133,133],[[3,[106]]]],0,[207,35],[208,35],[10,35],[102,35],[209,35],[210,35],[211,35],[119,35],[[[98,[[0,[213,218]]]]],35],[133,35],[119,108],[210,119],0,0,0,[210,119],0,[92,50],[90,50],[205,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,38],[102,38],[[],50],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[220,[219]]],133],[[[220,[171]]],133],[[[220,[151]]],133],[[]],[[]],[[]],[[]],[[]],[[]],[221,221],[[]],[[]],0,0,[[],[[35,[222]]]],[[],[[35,[221]]]],[[],[[35,[220]]]],[[],43],[222,223],0,[[222,65],66],[[221,65],66],[[220,65],66],0,[[]],[[]],[[]],[[]],[[]],[[]],[[124,[0,[224,63,61,218]]],[[220,[[0,[224,63,61,218]]]]]],0,0,0,0,0,[222,87],0,0,[222,35],[221,35],[220,35],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[]],[[]],[[]],0,0,0,0,0,0,0,[225,133],[171,133],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[226,226],[[]],[[],[[35,[171]]]],[[],[[35,[157]]]],[[],[[35,[158]]]],[[],[[35,[226]]]],[[171,65],66],[[157,65],66],[[158,65],66],[[226,65],66],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[171,35],[157,35],[158,35],[226,35],0,0,0,0,[[]],[44,[[35,[171]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[227,227],[228,228],[229,229],[[]],[[]],[[]],0,[[],[[35,[230]]]],[[],[[35,[227]]]],[[],[[35,[228]]]],[[],[[35,[229]]]],0,[230,43],0,[[230,65],66],[[227,65],66],[[228,65],66],[[229,65],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[230,229],0,0,[230,87],0,0,[230,229],0,0,[170,[[3,[231]]]],[[[227,[171]]],[[3,[231]]]],[230,87],0,0,[227,35],[228,35],[229,35],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],[[35,[232]]]],0,0,[[232,65],66],[[]],[[]],0,[[[232,[53]],39],[[3,[231]]]],0,[232,35],[[],35],[[],35],[[],128],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[233,133],[151,133],[53,133],[234,133],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[151,151],[235,235],[53,53],[234,234],[236,236],[237,237],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[35,[151]]]],[[],[[35,[235]]]],[[],[[35,[53]]]],[[],[[35,[234]]]],[[],[[35,[236]]]],[[],[[35,[237]]]],0,[[151,151],12],[[235,235],12],[[53,53],12],[[234,234],12],[[236,236],12],[[237,237],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[151,65],66],[[235,65],66],[[53,65],66],[[234,65],66],[[236,65],66],[[237,65],66],[235,151],[[]],[[]],[[]],[[]],[236,234],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[143,39],[[3,[231]]]],0,0,0,[151,35],[235,35],[53,35],[234,35],[236,35],[237,35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[238,133],[219,133],0,[[]],[[]],[[]],[[]],[[]],[[]],[239,239],[[]],[[],[[35,[219]]]],[[],[[35,[240]]]],[[],[[35,[239]]]],[[219,65],66],[[240,65],66],[[239,65],66],[[]],[[]],[[]],[[]],[[]],[[]],[[241,50,145],240],0,[219,35],[240,35],[239,35],0,0,[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[242,133],[231,133],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[243,243],[244,244],[245,245],[242,242],[231,231],[246,246],[247,247],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[35,[244]]]],[[],[[35,[245]]]],[[],[[35,[242]]]],[[],[[35,[231]]]],[[],[[35,[246]]]],[[],[[35,[247]]]],[[244,244],12],[[245,245],12],[[242,242],12],[[231,231],12],[[246,246],12],[[247,247],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[244,65],66],[[245,65],66],[[242,65],66],[[231,65],66],[[246,65],66],[[247,65],66],[[]],[[]],[[]],[246,242],[231,242],[[]],[246,231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[242,104,248],244],0,0,[231,39],0,0,[244,35],[245,35],[242,35],[231,35],[246,35],[247,35],[231,43],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[242,[[35,[231]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],[[35,[249]]]],[249],[[249,65],66],[[]],[[]],[[248,50],249],0,0,0,[249,35],[[],35],[[],35],[[],128],[[]],[249],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[77,65],[[35,[153]]]],[[77,65],[[35,[153]]]],[[76,65],[[35,[153]]]],[[76,65],[[35,[153]]]],[[74,65],[[35,[153]]]],[[74,65],[[35,[153]]]],[[159,65],[[35,[153]]]],[[159,65],[[35,[153]]]],[[80,65],[[35,[153]]]],[[80,65],[[35,[153]]]],[[73,65],[[35,[153]]]],[[73,65],[[35,[153]]]],[[160,65],[[35,[153]]]],[[160,65],[[35,[153]]]],[[75,65],[[35,[153]]]],[[75,65],[[35,[153]]]],[[]],[250,77],[251,77],[251,76],[77,76],[[]],[252,74],[[]],[253,74],[77,74],[76,159],[84,159],[77,159],[[]],[251,159],[73,80],[[]],[[]],[253,73],[252,73],[56,160],[[]],[254,160],[251,160],[[]],[251,75],[77,75],[76,75],[255,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107],[107],[107],[107],[107],[107],[107],[107],[77,[[3,[120]]]],[76,[[3,[120]]]],[74,[[3,[120]]]],[159,[[3,[120]]]],[80,[[3,[120]]]],[73,[[3,[120]]]],[160,[[3,[120]]]],[75,[[3,[120]]]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"VerificationRequest"],[4,"OutgoingVerificationRequest"],[4,"Option"],[3,"Sas"],[4,"VerificationMethod"],[3,"Vec"],[3,"AcceptSettings"],[3,"ReadOnlyDevice"],[3,"MasterPubkey"],[3,"CrossSigningKey"],[3,"OlmMachine"],[15,"bool"],[6,"Result"],[3,"QrVerification"],[3,"CancelInfo"],[4,"CancelCode"],[8,"Stream"],[3,"Device"],[4,"LocalTrust"],[4,"UserIdentities"],[3,"OwnUserIdentity"],[3,"UserIdentity"],[4,"ReadOnlyUserIdentities"],[3,"ReadOnlyUserIdentity"],[3,"ReadOnlyOwnUserIdentity"],[4,"QrVerificationState"],[4,"VerificationRequestState"],[3,"AcceptedProtocols"],[3,"EmojiShortAuthString"],[4,"SasState"],[3,"Emoji"],[4,"Verification"],[3,"RoomKeyImportResult"],[4,"CryptoStoreError"],[4,"Result"],[3,"CrossSigningStatus"],[3,"Curve25519PublicKey"],[3,"Raw"],[3,"RoomId"],[3,"TimelineEvent"],[4,"MegolmError"],[8,"Read"],[15,"str"],[3,"ExportedRoomKey"],[4,"KeyExportError"],[3,"MediaEncryptionInfo"],[3,"DeviceId"],[3,"UserDevices"],[8,"Iterator"],[3,"String"],[3,"Ed25519PublicKey"],[8,"MessageLikeEventContent"],[3,"RoomEncryptedEventContent"],[4,"Value"],[15,"u32"],[3,"Error"],[3,"InboundGroupSession"],[4,"OlmError"],[3,"CrossSigningKeyExport"],[8,"FnMut"],[8,"Sized"],[3,"AttachmentEncryptor"],[8,"Debug"],[3,"AttachmentDecryptor"],[3,"Formatter"],[6,"Result"],[4,"EventError"],[4,"SignatureError"],[4,"SessionCreationError"],[4,"DecryptorError"],[4,"ScanError"],[4,"SessionExportError"],[4,"OlmDecryptionError"],[4,"MegolmDecryptionError"],[4,"DecodeError"],[4,"KeyError"],[4,"SignatureError"],[4,"Error"],[4,"CanonicalJsonError"],[4,"OlmSessionCreationError"],[4,"DecodeError"],[3,"EncryptedFile"],[3,"FromUtf8Error"],[3,"Error"],[15,"i64"],[3,"ReadOnlyAccount"],[3,"UserId"],[3,"Duration"],[4,"DeviceKeyAlgorithm"],[4,"DeviceKey"],[3,"DeviceKeyId"],[4,"SigningKey"],[8,"AsRef"],[3,"IdentityKeys"],[4,"SecretImportError"],[8,"Fn"],[3,"BTreeMap"],[3,"SigningKeys"],[3,"TransactionId"],[4,"IncomingResponse"],[8,"Into"],[3,"DeviceKeys"],[3,"SessionConfig"],[3,"OwnedDeviceId"],[3,"OutgoingRequest"],[4,"Ordering"],[3,"Demand"],[15,"usize"],[6,"Result"],[4,"AnyToDeviceEvent"],[3,"DeviceLists"],[4,"AnyMessageLikeEvent"],[3,"KeyVerificationRequestEventContent"],[3,"EventId"],[4,"QrVerificationData"],[3,"EncryptionSettings"],[3,"ToDeviceRequest"],[3,"Arc"],[3,"Signatures"],[8,"Error"],[15,"u8"],[4,"EncodingError"],[3,"QrCode"],[3,"OwnedUserId"],[3,"HashSet"],[3,"SasV1Content"],[3,"SasV1Content"],[3,"TypeId"],[8,"IntoIterator"],[3,"Request"],[4,"ShortAuthenticationString"],[8,"CryptoStore"],[4,"EventEncryptionAlgorithm"],[3,"Session"],[3,"PrivateCrossSigningIdentity"],[3,"OlmMessageHash"],[3,"OutboundGroupSession"],[3,"ShareInfo"],[4,"SessionOrdering"],[4,"SessionCreationError"],[3,"PreKeyMessage"],[4,"DecodeError"],[6,"EncryptedEvent"],[4,"OlmMessage"],[3,"SessionKey"],[3,"PickledAccount"],[3,"PickledInboundGroupSession"],[3,"PickledOutboundGroupSession"],[3,"PickledSession"],[3,"PickledCrossSigningIdentity"],[4,"ToDeviceEncryptedEventContent"],[4,"SecretName"],[3,"Error"],[3,"EphemeralSecret"],[3,"Curve25519SecretKey"],[3,"ReusableSecret"],[3,"ForwardedMegolmV1AesSha2Content"],[3,"ForwardedMegolmV2AesSha2Content"],[4,"SessionKeyDecodeError"],[4,"PickleError"],[15,"u64"],[3,"OwnedDeviceKeyId"],[4,"HistoryVisibility"],[3,"RoomEncryptionEventContent"],[3,"KeyId"],[3,"HashMap"],[3,"Ed25519Signature"],[4,"OneTimeKey"],[3,"Global"],[6,"DecryptedForwardedRoomKeyEvent"],[4,"ForwardedRoomKeyContent"],[3,"UploadSigningKeysRequest"],[3,"KeysQueryRequest"],[3,"RoomMessageRequest"],[3,"KeysBackupRequest"],[4,"OutgoingRequests"],[3,"Request"],[3,"Request"],[3,"Response"],[3,"Response"],[3,"Response"],[3,"Response"],[3,"Response"],[3,"Response"],[3,"Response"],[3,"Store"],[4,"SecretInfo"],[3,"GossipRequest"],[3,"MemoryStore"],[3,"IdentityChanges"],[3,"DeviceChanges"],[3,"RoomKeyCounts"],[3,"Changes"],[3,"BackupKeys"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"TrackedUser"],[3,"RecoveryKey"],[3,"Mutex"],[3,"Error"],[3,"SessionStore"],[3,"GroupSessionStore"],[3,"DeviceStore"],[4,"Signature"],[3,"InvalidSignature"],[3,"MegolmV1AuthData"],[4,"RoomKeyBackupInfo"],[3,"UnsignedDeviceInfo"],[3,"SignedKey"],[4,"OneTimeKey"],[8,"Clone"],[8,"Ord"],[8,"Deserialize"],[8,"PartialEq"],[3,"Iter"],[4,"KeyUsage"],[8,"Serialize"],[4,"RoomKeyContent"],[3,"ToDeviceEvent"],[3,"ToDeviceCustomEvent"],[4,"ToDeviceEvents"],[4,"ToDeviceEventType"],[8,"EventType"],[6,"ForwardedRoomKeyEvent"],[3,"UnknownRoomKeyContent"],[3,"DecryptedOlmV1Event"],[3,"ToDeviceCustomEvent"],[3,"OlmV1Keys"],[4,"AnyDecryptedOlmEvent"],[4,"SupportedKeyInfo"],[3,"Event"],[6,"EncryptedToDeviceEvent"],[4,"RoomEventEncryptionScheme"],[3,"OlmV1Curve25519AesSha2Content"],[3,"MegolmV1AesSha2Content"],[3,"UnknownEncryptedContent"],[6,"RoomKeyEvent"],[3,"UnknownRoomKey"],[3,"MegolmV1AesSha2Content"],[3,"OwnedRoomId"],[4,"RequestedKeyInfo"],[6,"RoomKeyRequestEvent"],[3,"RoomKeyRequestContent"],[4,"Action"],[3,"MegolmV1AesSha2Content"],[3,"UnknownRoomKeyRequest"],[3,"OwnedTransactionId"],[3,"SecretSendContent"],[3,"Error"],[4,"DecodeError"],[3,"UnpadError"],[3,"MacError"],[4,"DecryptionError"],[3,"DecodeError"],[13,"MismatchedIdentityKeys"],[13,"Done"],[13,"Accepted"],[13,"KeysExchanged"],[13,"Started"],[13,"Done"],[13,"KeyMismatch"],[13,"FlowIdMismatch"],[13,"InvalidSignature"],[13,"Requested"],[13,"Ready"],[13,"Created"],[13,"Other"]]},\
"matrix_sdk_indexeddb":{"doc":"","t":[13,13,13,13,13,13,13,3,4,3,3,4,13,13,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["BackupAndDrop","Crypto","CryptoStoreError","DomException","DomException","Drop","Encryption","IndexeddbCryptoStore","IndexeddbCryptoStoreError","IndexeddbStateStore","IndexeddbStateStoreBuilder","IndexeddbStateStoreError","Json","Json","MigrationConflict","MigrationConflictStrategy","OpenStoreError","Raise","State","StoreError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","default","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_account_data_event","get_filter","get_invited_user_ids","get_joined_user_ids","get_member_event","get_presence_event","get_profile","get_room_account_data_event","get_room_infos","get_state_event","get_state_events","get_stripped_invited_user_ids","get_stripped_joined_user_ids","get_stripped_room_infos","get_stripped_user_ids_stream","get_sync_token","get_user_ids_stream","get_users_with_display_name","has_backups","into","into","into","into","into","into","into","latest_backup","make_store_config","migration_conflict_strategy","name","open","open_with_name","open_with_passphrase","passphrase","provide","provide","provide","save_changes","save_filter","source","source","source","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","code","message","name","code","message","name","name","new_version","old_version"],"q":["matrix_sdk_indexeddb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","matrix_sdk_indexeddb::IndexeddbCryptoStoreError","","","matrix_sdk_indexeddb::IndexeddbStateStoreError","","","","",""],"d":["Default.","An error occurred with the crypto store implementation.","","","","Just drop the data, we don’t care that we have to sync …","","An in-memory only store that will forget all the E2EE key …","","","Builder for <code>IndexeddbStateStoreBuilderConfig</code>.","","","","","Sometimes Migrations can’t proceed without having to …","All the errors that can occur when opening an IndexedDB …","Raise a <code>IndexeddbStateStoreError::MigrationConflict</code> error …","An error occurred with the state store implementation.","","","","","","","","","","","","","","","","","Generate a IndexeddbStateStoreBuilder with default …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Whether this database has any migration backups","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","What’s the database name of the latest backup&lt;","Create a <code>StoreConfig</code> with an opened indexeddb …","The strategy to use when a merge conflict is found, see …","The name for the indexeddb store to use, <code>state</code> is none …","Open a new <code>IndexeddbCryptoStore</code> with default name and no …","Open a new <code>IndexeddbCryptoStore</code> with given name and no …","Open a new <code>IndexeddbCryptoStore</code> with given name and …","The password the indexeddb should be encrypted with. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DomException code","Message given to the DomException","Specific name of the DomException","","","","","",""],"i":[5,11,10,10,3,5,3,0,0,0,0,0,10,3,3,0,0,5,11,3,6,2,10,3,5,1,11,6,2,10,3,5,1,11,1,2,5,1,5,1,1,6,5,5,6,2,10,10,3,3,5,11,11,6,2,10,10,10,10,3,3,3,3,3,5,1,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,2,10,3,5,1,11,2,0,1,1,6,6,6,1,10,3,11,2,2,10,3,11,5,1,10,3,11,6,2,10,3,5,1,11,6,2,10,3,5,1,11,6,2,10,3,5,1,11,6,2,10,3,5,1,11,42,42,42,43,43,43,44,44,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[[],1],[5,5],[1,1],[[]],[[]],[[],1],[6],[[5,5],7],[[],7],[[6,8],9],[[2,8],9],[[10,8],9],[[10,8],9],[[3,8],9],[[3,8],9],[[5,8],9],[[11,8],9],[[11,8],9],[[]],[[]],[12,10],[13,10],[14,10],[[]],[15,3],[12,3],[[]],[16,3],[13,3],[[]],[[]],[[]],[15,11],[10,11],[[2,17],[[4,[[20,[[19,[18]]]],3]]]],[[2,21],[[4,[[20,[22]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[[2,23,26],[[4,[[20,[27]],3]]]],[[2,26],[[4,[[20,[[19,[28]]]],3]]]],[[2,23,26],[[4,[[20,[[30,[29]]]],3]]]],[[2,23,31],[[4,[[20,[[19,[32]]]],3]]]],[2,[[4,[[25,[33]],3]]]],[[2,23,34,21],[[4,[[20,[[19,[35]]]],3]]]],[[2,23,34],[[4,[[25,[[19,[35]]]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[2,[[4,[[25,[33]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[2,[[4,[[20,[22]],3]]]],[[2,23],[[4,[[25,[24]],3]]]],[[2,23,21],[[4,[[36,[24]],3]]]],[2,[[4,[7,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[4,[[20,[22]],3]]]],[[21,[20,[21]]],[[4,[37,11]]]],[[1,5],1],[[1,22],1],[[],[[4,[6,10]]]],[21,[[4,[6,10]]]],[[21,21],[[4,[6,10]]]],[[1,22],1],[38],[38],[38],[[2,39],[[4,[3]]]],[[2,21,21],[[4,[3]]]],[10,[[20,[40]]]],[3,[[20,[40]]]],[11,[[20,[40]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0],"p":[[3,"IndexeddbStateStoreBuilder"],[3,"IndexeddbStateStore"],[4,"IndexeddbStateStoreError"],[4,"Result"],[4,"MigrationConflictStrategy"],[3,"IndexeddbCryptoStore"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"IndexeddbCryptoStoreError"],[4,"OpenStoreError"],[3,"DomException"],[3,"Error"],[4,"CryptoStoreError"],[4,"StoreError"],[4,"Error"],[4,"GlobalAccountDataEventType"],[4,"AnyGlobalAccountDataEvent"],[3,"Raw"],[4,"Option"],[15,"str"],[3,"String"],[3,"RoomId"],[3,"OwnedUserId"],[3,"Vec"],[3,"UserId"],[4,"RawMemberEvent"],[3,"PresenceEvent"],[3,"RoomMemberEventContent"],[4,"MinimalStateEvent"],[4,"RoomAccountDataEventType"],[4,"AnyRoomAccountDataEvent"],[3,"RoomInfo"],[4,"StateEventType"],[4,"AnySyncStateEvent"],[3,"BTreeSet"],[3,"StoreConfig"],[3,"Demand"],[3,"StateChanges"],[8,"Error"],[3,"TypeId"],[13,"DomException"],[13,"DomException"],[13,"MigrationConflict"]]},\
"matrix_sdk_qrcode":{"doc":"<strong>matrix-sdk-qrcode</strong> is a crate to easily generate and parse …","t":[4,4,13,13,13,13,13,4,13,13,3,3,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DecodingError","EncodingError","FlowId","Header","Keys","Mode","Qr","QrVerificationData","Read","SelfVerification","SelfVerificationData","SelfVerificationNoMasterKey","SelfVerificationNoMasterKey","SharedSecret","Utf8","Verification","VerificationData","Version","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","first_key","flow_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","into","into","into","into","into","into","new","new","new","provide","provide","qrcode","second_key","secret","source","source","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_qr_code","to_qr_code","to_qr_code","to_qr_code","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["matrix_sdk_qrcode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error type describing errors that happen while QR data is …","Error type describing errors that happen while QR data is …","Error encoding the given flow id, the flow id is too large.","The QR code data is missing the mandatory Matrix header.","The QR code data doesn’t contain valid ed25519 keys.","The QR code data is using an unsupported or invalid …","Error generating a QR code from the data, likely because …","An enum representing the different modes a QR verification …","The QR code data does not contain all the necessary fields.","The QR verification is self-verifying and the current …","The non-encoded data for the second mode of QR code …","The non-encoded data for the third mode of QR code …","The QR verification is self-verifying in which the current …","The QR code data uses an invalid shared secret.","The QR code data is containing an invalid, non UTF-8, flow …","The QR verification is verifying another user","The non-encoded data for the first mode of QR code …","The QR code data uses an invalid or unsupported version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the first key of this <code>QrVerificationData</code>.","Get the flow id for this <code>QrVerificationData</code>.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parse the decoded payload of a QR code in byte slice form …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>VerificationData</code> struct that can be encoded …","Create a new <code>SelfVerificationData</code> struct that can be …","Create a new <code>SelfVerificationData</code> struct that can be …","","","","Get the second key of this <code>QrVerificationData</code>.","Get the secret of this <code>QrVerificationData</code>.","","","Encode the <code>QrVerificationData</code> into a vector of bytes that …","Encode the <code>VerificationData</code> into a vector of bytes that …","Encode the <code>SelfVerificationData</code> into a vector of bytes …","Encode the <code>SelfVerificationNoMasterKey</code> into a vector of …","","","","","Encode the <code>QrVerificationData</code> into a <code>QrCode</code>.","Encode the <code>VerificationData</code> into a <code>QrCode</code>.","Encode the <code>SelfVerificationData</code> into a <code>QrCode</code>.","Encode the <code>SelfVerificationNoMasterKey</code> into a <code>QrCode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,11,8,8,8,11,0,8,1,0,0,1,8,8,1,0,8,8,11,1,2,3,4,8,11,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,8,8,11,11,1,2,3,4,8,8,8,8,11,11,11,1,1,1,1,2,3,4,1,8,11,1,2,3,4,2,3,4,8,11,0,1,1,8,11,1,2,3,4,1,2,3,4,1,2,3,4,8,11,8,11,1,1,1,2,3,4,8,11,1,2,3,4,8,11,1,2,3,4,8,11,1,2,3,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[1,1],5],[[2,2],5],[[3,3],5],[[4,4],5],[[],5],[[],5],[[],5],[[],5],[1,6],[1,7],[[8,9],10],[[8,9],10],[[11,9],10],[[11,9],10],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[]],[12,8],[13,8],[14,8],[15,11],[[]],[16,11],[4,1],[3,1],[[]],[2,1],[[]],[[]],[[]],[17,[[18,[1,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,6,6,20],2],[[19,6,6,20],3],[[19,6,6,20],4],[21],[21],0,[1,6],[1,20],[8,[[23,[22]]]],[11,[[23,[22]]]],[1,[[18,[[25,[24]],11]]]],[2,[[18,[[25,[24]],11]]]],[3,[[18,[[25,[24]],11]]]],[4,[[18,[[25,[24]],11]]]],[[]],[[]],[[]],[[]],[1,[[18,[26,11]]]],[2,[[18,[26,11]]]],[3,[[18,[26,11]]]],[4,[[18,[26,11]]]],[[],19],[[],19],[[],18],[[],18],[[[25,[24]]],[[18,[1]]]],[[],18],[[],[[18,[1]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"QrVerificationData"],[3,"VerificationData"],[3,"SelfVerificationData"],[3,"SelfVerificationNoMasterKey"],[15,"bool"],[3,"Ed25519PublicKey"],[15,"str"],[4,"DecodingError"],[3,"Formatter"],[6,"Result"],[4,"EncodingError"],[4,"KeyError"],[3,"Error"],[3,"FromUtf8Error"],[3,"TryFromIntError"],[4,"QrError"],[8,"AsRef"],[4,"Result"],[3,"String"],[3,"Base64"],[3,"Demand"],[8,"Error"],[4,"Option"],[15,"u8"],[3,"Vec"],[3,"QrCode"],[3,"TypeId"]]},\
"matrix_sdk_sled":{"doc":"","t":[13,13,13,4,4,13,13,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BackupAndDrop","Crypto","Drop","MigrationConflictStrategy","OpenStoreError","Raise","Sled","SledCryptoStore","SledStateStore","SledStateStoreBuilder","State","add_media_content","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","db","default","delete_outgoing_secret_requests","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_account_data_event","get_account_data_event","get_custom_value","get_device","get_event_room_receipt_events","get_filter","get_filter","get_inbound_group_session","get_inbound_group_sessions","get_invited_user_ids","get_invited_user_ids","get_joined_user_ids","get_joined_user_ids","get_media_content","get_member_event","get_member_event","get_outbound_group_sessions","get_outgoing_secret_requests","get_presence_event","get_presence_event","get_profile","get_profile","get_room_account_data_event","get_room_account_data_event","get_room_infos","get_room_infos","get_secret_request_by_info","get_sessions","get_state_event","get_state_event","get_state_events","get_state_events","get_stripped_invited_user_ids","get_stripped_joined_user_ids","get_stripped_room_infos","get_stripped_room_infos","get_stripped_user_ids_stream","get_sync_token","get_sync_token","get_unsent_secret_requests","get_user_devices","get_user_identity","get_user_ids","get_user_ids_stream","get_user_room_receipt_event","get_users_with_display_name","get_users_with_display_name","inbound_group_session_counts","inbound_group_sessions_for_backup","init","init","init","init","init","into","into","into","into","into","into_crypto_store","into_state_store","is_message_known","load_account","load_backup_keys","load_identity","load_tracked_users","make_store_config","migration_conflict_strategy","open","open_crypto_store","open_with_database","passphrase","path","provide","remove_media_content","remove_media_content_for_uri","remove_room","reset_backup_state","save_account","save_changes","save_changes","save_changes","save_filter","save_filter","save_tracked_users","save_tracked_users","set_custom_value","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":["matrix_sdk_sledd":["<em>Default</em>: The <em>entire</em> database is backed up under …","An error occurred with the crypto store implementation.","Just drop the data, we don’t care that we have to sync …","Sometimes Migrations can’t proceed without having to …","All the errors that can occur when opening a sled store.","Raise a <code>SledStoreError::MigrationConflict</code> error with the …","An error occurred with sled.","A sled based cryptostore.","","Builder for <code>SledStateStoreBuilderConfig</code>.","An error occurred with the state store implementation.","","","","","","","","","","","","Create a <code>SledStateStore</code> with the options set on this …","Generate a SledStateStoreBuilder with default parameters","","","","","","","","","Use the given <code>sled::Db</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a <code>StoreConfig</code> with an opened <code>SledStateStore</code> that …","The strategy to use when a merge conflict is found, see …","Open the sled-based crypto store at the given path using …","Open a <code>SledCryptoStore</code> that uses the same database as this …","Create a sled-based crypto store using the given sled …","Set the password the sled store is encrypted with (if any)","Path to the sled store files, created if not it doesn’t …","","","","","","","","","","","","","Save a batch of tracked users.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[11,18,11,0,0,11,18,0,0,0,18,1,10,11,8,1,18,10,11,8,1,18,8,1,10,11,8,1,10,11,8,1,8,8,10,10,11,8,1,18,10,11,8,1,18,10,11,8,1,18,11,11,10,11,1,18,18,10,11,8,1,18,18,18,18,1,1,1,10,1,1,1,10,10,1,1,1,1,1,1,1,10,10,1,1,1,1,1,1,1,1,10,10,1,1,1,1,1,1,1,1,1,1,1,10,10,10,1,1,1,1,1,10,10,10,11,8,1,18,10,11,8,1,18,10,1,10,10,10,10,10,0,8,10,1,10,8,8,18,1,1,1,10,10,10,1,1,1,1,10,10,1,18,10,11,8,1,18,10,11,8,1,18,10,11,8,1,18,10,11,8,1,18,10,11,8,1,18],"f":[0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[9,[1,0]]]],[[],8],[10,10],[11,11],[8,8],[1,1],[[]],[[]],[[]],[[]],[[8,12],8],[[],8],[[10,13],[[7,[[6,[5]]]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[11,11],15],[[],15],[[10,16],17],[[11,16],17],[[1,16],17],[[18,16],17],[[18,16],17],[[]],[[]],[[]],[[]],[19,18],[20,18],[21,18],[[]],[[1,22],[[7,[[6,[5]]]]]],[[1,22],[[9,[[25,[[24,[23]]]],0]]]],[1,[[7,[[6,[5]]]]]],[[10,26,27],[[7,[[6,[5]]]]]],[[1,28,29,30],[[7,[[6,[5]]]]]],[[1,31],[[9,[[25,[32]],0]]]],[[1,31],[[7,[[6,[5]]]]]],[[10,28,31],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[1,28],[[34,[33]]]],[[1,28],[[7,[[6,[5]]]]]],[[1,28],[[7,[[6,[5]]]]]],[[1,28],[[34,[33]]]],[[1,2],[[7,[[6,[5]]]]]],[[1,28,26],[[7,[[6,[5]]]]]],[[1,28,26],[[9,[[25,[35]],0]]]],[[10,28],[[7,[[6,[5]]]]]],[[10,13],[[7,[[6,[5]]]]]],[[1,26],[[7,[[6,[5]]]]]],[[1,26],[[9,[[25,[[24,[36]]]],0]]]],[[1,28,26],[[7,[[6,[5]]]]]],[[1,28,26],[[9,[[25,[[38,[37]]]],0]]]],[[1,28,39],[[9,[[25,[[24,[40]]]],0]]]],[[1,28,39],[[7,[[6,[5]]]]]],[1,[[9,[33,0]]]],[1,[[7,[[6,[5]]]]]],[[10,41],[[7,[[6,[5]]]]]],[[10,31],[[7,[[6,[5]]]]]],[[1,28,42,31],[[7,[[6,[5]]]]]],[[1,28,42,31],[[9,[[25,[[24,[43]]]],0]]]],[[1,28,42],[[7,[[6,[5]]]]]],[[1,28,42],[[9,[[4,[[24,[43]]]],0]]]],[[1,28],[[34,[33]]]],[[1,28],[[34,[33]]]],[1,[[7,[[6,[5]]]]]],[1,[[9,[33,0]]]],[[1,28],[[34,[33]]]],[1,[[7,[[6,[5]]]]]],[1,[[9,[[25,[32]],0]]]],[10,[[7,[[6,[5]]]]]],[[10,26],[[7,[[6,[5]]]]]],[[10,26],[[7,[[6,[5]]]]]],[[1,28],[[7,[[6,[5]]]]]],[[1,28],[[34,[33]]]],[[1,28,29,26],[[7,[[6,[5]]]]]],[[1,28,31],[[7,[[6,[5]]]]]],[[1,28,31],[[9,[[45,[44]],0]]]],[10,[[7,[[6,[5]]]]]],[[10,14],[[7,[[6,[5]]]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[],[[47,[46]]]],[[],[[47,[48]]]],[[10,49],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[[51,[50]],[25,[31]]],[[9,[52,18]]]],[[8,11],8],[[[51,[50]],[25,[31]]],[[53,[10,18]]]],[1,[[9,[10,18]]]],[[12,[25,[31]]],[[53,[10,18]]]],[[8,32],8],[[8,54],8],[55],[[1,2],[[7,[[6,[5]]]]]],[[1,56],[[7,[[6,[5]]]]]],[[1,28],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[10,57],[[7,[[6,[5]]]]]],[[10,58],[[7,[[6,[5]]]]]],[[1,59],[[9,[0]]]],[[1,59],[[7,[[6,[5]]]]]],[[1,31,31],[[7,[[6,[5]]]]]],[[1,31,31],[[9,[0]]]],[10,[[7,[[6,[5]]]]]],[10,[[53,[20]]]],[[1,[4,[3]]],[[7,[[6,[5]]]]]],[18,[[25,[60]]]],[[]],[[]],[[]],[[]],[[],32],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"SledStateStore"],[3,"MediaRequest"],[15,"u8"],[3,"Vec"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SledStateStoreBuilder"],[4,"Result"],[3,"SledCryptoStore"],[4,"MigrationConflictStrategy"],[3,"Db"],[3,"TransactionId"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"OpenStoreError"],[4,"Error"],[4,"CryptoStoreError"],[4,"StoreError"],[4,"GlobalAccountDataEventType"],[4,"AnyGlobalAccountDataEvent"],[3,"Raw"],[4,"Option"],[3,"UserId"],[3,"DeviceId"],[3,"RoomId"],[4,"ReceiptType"],[3,"EventId"],[15,"str"],[3,"String"],[8,"Stream"],[6,"Result"],[4,"RawMemberEvent"],[3,"PresenceEvent"],[3,"RoomMemberEventContent"],[4,"MinimalStateEvent"],[4,"RoomAccountDataEventType"],[4,"AnyRoomAccountDataEvent"],[4,"SecretInfo"],[4,"StateEventType"],[4,"AnySyncStateEvent"],[3,"OwnedUserId"],[3,"BTreeSet"],[8,"CryptoStore"],[3,"Arc"],[8,"StateStore"],[3,"OlmMessageHash"],[3,"Path"],[8,"AsRef"],[3,"StoreConfig"],[6,"Result"],[3,"PathBuf"],[3,"Demand"],[3,"MxcUri"],[3,"ReadOnlyAccount"],[3,"Changes"],[3,"StateChanges"],[8,"Error"],[3,"TypeId"]]},\
"matrix_sdk_store_encryption":{"doc":"A general purpose encryption scheme for key/value stores.","t":[3,13,4,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EncryptedValue","Encryption","Error","Length","Random","Serialization","StoreCipher","Version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decrypt_value","decrypt_value_data","decrypt_value_typed","deserialize","encrypt_value","encrypt_value_data","encrypt_value_typed","eq","export","fmt","fmt","fmt","from","from","from","from","from","from","hash_key","import","into","into","into","new","provide","serialize","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["matrix_sdk_store_encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Encrypted value, ready for storage, as created by the …","Error encrypting or decrypting a value {0}","Error type for the <code>StoreCipher</code> operations.","The ciphertext had an invalid length, expected {0}, got {1}","Coulnd’t generate enough randomness for a cryptographic …","Failed to serialize or deserialize a value {0}","An encryption key that can be used to encrypt data for …","Unsupported ciphertext version, expected {0}, got {1}","","","","","","","Decrypt a value after it was fetchetd from the key/value …","Decrypt a value after it was fetchetd from the key/value …","Decrypt a value after it was fetchetd from the key/value …","","Encrypt a value before it is inserted into the key/value …","Encrypt some data before it is inserted into the key/value …","Encrypt a value before it is inserted into the key/value …","","Encrypt the store cipher using the given passphrase and …","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Hash a key before it is inserted into the key/value store.","Restore a store cipher from an encrypted export.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generate a new random store cipher.","","","","","","","","","","","","","","","",""],"i":[0,3,0,3,3,3,0,3,1,3,5,1,3,5,1,1,1,5,1,1,1,5,1,3,3,5,1,3,3,3,3,5,1,1,1,3,5,1,3,5,3,3,1,3,5,1,3,5,1,3,5,1,3,5],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[[1,5],[[4,[[7,[6]],3]]]],[[1,5],[[4,[2,3]]]],[[],[[4,[5]]]],[1,[[4,[[7,[6]],3]]]],[[1,[7,[6]]],[[4,[5,3]]]],[1,[[4,[5,3]]]],[[5,5],8],[[1,9],[[4,[[7,[6]],3]]]],[[3,10],11],[[3,10],11],[[5,10],11],[[]],[12,3],[13,3],[14,3],[[]],[[]],[[1,9]],[9,[[4,[1,3]]]],[[]],[[]],[[]],[[],[[4,[1,3]]]],[15],[5,4],[3,[[17,[16]]]],[[],18],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],19],[[],19],[[],19],[[]],[[]],[[]]],"p":[[3,"StoreCipher"],[8,"DeserializeOwned"],[4,"Error"],[4,"Result"],[3,"EncryptedValue"],[15,"u8"],[3,"Vec"],[15,"bool"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
